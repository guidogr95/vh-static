[{"id":3,"Title":"Installing Latest Node.js on Ubuntu","Slug":"resources/tutorials/installing-latest-node-js-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\"><a href=\"http://nodejs.org/\">Node.js</a> is a software platform that is typically used to build large scale (most frequently server-side) applications. It uses Javascript as its scripting language and it can deliver high performance because of it’s non-blocking I/O and single-threaded event loop.</p><p style=\"margin-left:0px;\">Node.js is a combination of Google V8 Javascript engine, libuv (library which abstracts asynchronous evented I/O, making Node.js cross-platform) and a core library written mostly in Javascript. Node.js was created by Ryan Dahl and it is currently being maintained by Isaac Schlueter.</p><p style=\"margin-left:0px;\">There are a lot of tutorials suggesting compiling from source, <strong>we strongly advise again that</strong>. For most of the time, package maintainers know the software very well and you will get the latest release without having to compile from scratch.</p><p style=\"margin-left:0px;\">The following will work on any release of Ubuntu, including Ubuntu 12.04 LTS, Ubuntu 12.10 and Ubuntu 13.04. It will help you <strong>install Node.js on Ubuntu without compiling from source</strong>. You can run the following command on your cloud server to get started and install the latest Node.js release on your server:</p><pre><code class=\"language-plaintext\">$ apt-get update\n$ apt-get install -y python-software-properties software-properties-common\n$ add-apt-repository ppa:chris-lea/node.js\n$ apt-get update\n$ apt-get install nodejs\n</code></pre><p style=\"margin-left:0px;\">That is it! Once you have done that, you will be rolling with the latest stable Node.js release without having to worry about compiling anything. If you need to upgrade Node.js at anytime when a new release comes out, you can do it directly from the package manager, without having to recompile from scratch. Just another reason why you should always look for packages before installing from source.</p><p style=\"margin-left:0px;\">A little bit about us,&nbsp;VEXXHOST is a high performance cloud solutions that is secure &amp; reliable OpenStack based solutions for Developers &amp; Enterprises. Solutions to support your demanding requirements and workloads used by active customers in over 70 different countries.&nbsp;VEXXHOST was created in 2006 and opened it’s virtual doors as web hosting provider. VEXXHOST now offers Public, Private and Hybrid cloud all powered by OpenStack.</p><p style=\"margin-left:0px;\">If you are interested in reading more blog posts, you can always check out the VEXXHOST blog located on our website which includes many more interesting blogs and tutorials! If you have any questions concerning this blog or in general, feel free to communicate with us through our Contact Us page. One of our support team member will be more than happy to assist you and answer all your questions.</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for announcements, updates and news regarding VEXXHOST and cloud computing in general – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T03:56:45.415Z","created_at":"2021-03-30T03:56:39.353Z","updated_at":"2021-03-30T03:56:45.722Z","PostSEO":{"id":477,"GoogleSEO":{"id":468,"Title":"Installing Latest Node.js on Ubuntu - VEXXHOST","Description":"Node.js is a software platform that is typically used to build large scale (most frequently server-side) applications. It uses Javascript as its scripting"},"FacebookSEO":{"id":464,"Title":"Installing Latest Node.js on Ubuntu - VEXXHOST","Url":null,"Description":"Node.js is a software platform that is typically used to build large scale (most frequently server-side) applications. It uses Javascript as its scripting","SiteName":"VEXXHOST","Image":{"id":590,"name":"Installing-Latest-Node.js-on-Ubuntu2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076517/small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"small_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":49.08,"width":500,"height":250,"provider_metadata":{"public_id":"small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076516/medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"medium_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":146.81,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076512/thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"thumbnail_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":9.06,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}}},"hash":"Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","ext":".png","mime":"image/png","size":70.39,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076511/Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"},"created_at":"2021-03-30T03:55:17.649Z","updated_at":"2021-03-30T03:55:17.658Z"}},"TwitterSEO":{"id":464,"Description":"Node.js is a software platform that is typically used to build large scale (most frequently server-side) applications. It uses Javascript as its scripting","Title":"Installing Latest Node.js on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":590,"name":"Installing-Latest-Node.js-on-Ubuntu2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076517/small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"small_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":49.08,"width":500,"height":250,"provider_metadata":{"public_id":"small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076516/medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"medium_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":146.81,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076512/thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"thumbnail_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":9.06,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}}},"hash":"Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","ext":".png","mime":"image/png","size":70.39,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076511/Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"},"created_at":"2021-03-30T03:55:17.649Z","updated_at":"2021-03-30T03:55:17.658Z"}}},"LinkToResource":{"id":395,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":590,"name":"Installing-Latest-Node.js-on-Ubuntu2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076517/small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"small_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":49.08,"width":500,"height":250,"provider_metadata":{"public_id":"small_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076516/medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"medium_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":146.81,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076512/thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","hash":"thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","mime":"image/png","name":"thumbnail_Installing-Latest-Node.js-on-Ubuntu2-800x400.png","path":null,"size":9.06,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"}}},"hash":"Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","ext":".png","mime":"image/png","size":70.39,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076511/Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Installing_Latest_Node_js_on_Ubuntu2_800x400_9091b98280","resource_type":"image"},"created_at":"2021-03-30T03:55:17.649Z","updated_at":"2021-03-30T03:55:17.658Z"},"TextContent":"Node.js is a software platform that is typically used to build large scale (most frequently server-side) applications. It uses Javascript as its scripting language and it can deliver high performance because of it’s non-blocking I/O and single-threaded event loop.Node.js is a combination of Google V8 Javascript engine, libuv (library which abstracts asynchronous evented I/O, making Node.js cross-platform) and a core library written mostly in Javascript. Node.js was created by Ryan Dahl and it is currently being maintained by Isaac Schlueter.There are a lot of tutorials suggesting compiling from source, we strongly advise again that. For most of the time, package maintainers know the software very well and you will get the latest release without having to compile from scratch.The following will work on any release of Ubuntu, including Ubuntu 12.04 LTS, Ubuntu 12.10 and Ubuntu 13.04. It will help you install Node.js on Ubuntu without compiling from source. You can run the following command on your cloud server to get started and install the latest Node.js release on your server:$ apt-get update\n$ apt-get install -y python-software-properties software-properties-common\n$ add-apt-repository ppa:chris-lea/node.js\n$ apt-get update\n$ apt-get install nodejs\nThat is it! Once you have done that, you will be rolling with the latest stable Node.js release without having to worry about compiling anything. If you need to upgrade Node.js at anytime when a new release comes out, you can do it directly from the package manager, without having to recompile from scratch. Just another reason why you should always look for packages before installing from source.A little bit about us, VEXXHOST is a high performance cloud solutions that is secure & reliable OpenStack based solutions for Developers & Enterprises. Solutions to support your demanding requirements and workloads used by active customers in over 70 different countries. VEXXHOST was created in 2006 and opened it’s virtual doors as web hosting provider. VEXXHOST now offers Public, Private and Hybrid cloud all powered by OpenStack.If you are interested in reading more blog posts, you can always check out the VEXXHOST blog located on our website which includes many more interesting blogs and tutorials! If you have any questions concerning this blog or in general, feel free to communicate with us through our Contact Us page. One of our support team member will be more than happy to assist you and answer all your questions.Don’t forget to follow us on Twitter for announcements, updates and news regarding VEXXHOST and cloud computing in general – @vexxhost."},{"id":2,"Title":"WordPress Performance Tip: Controlling Cronjobs","Slug":"resources/tutorials/decrease-wordpress-page-load-time","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<h1>WordPress Performance Tip: Controlling Cronjobs</h1><p style=\"margin-left:0px;\">So, your blog is growing fast or you are worried that your visitors will start increasing quickly but your WordPress based website or blog is slowly starting to slow down. You are panicking and you start to get worried that your rankings will start falling down, visitors will get frustrated at your site and your site might possibly go down.</p><p style=\"margin-left:0px;\">Well, we are here to give you a simple and quick tip to reduce the resource usage of your WordPress blog while increasing the overall performance due to the decreased load that your blog will generate, all you need is 5 minutes and FTP access to your blog.</p><p style=\"margin-left:0px;\">The wp-cron.php file runs with every single page load by default on WordPress blogs, which means that for every 1 request you get, you generate another one. This effectively translates to 1000 page views are actually making 2000 requests, which does not make sense!</p><p style=\"margin-left:0px;\">You see, WordPress was designed to be extremely easy to use, therefore, this easy to use system was put in place under the assumption that it was plug and play, because you never had to worry about it before. However, they assume once your traffic gets busy, you would likely take care of it anyways.</p><p style=\"margin-left:0px;\">Before we start, make sure that you are comfortable with your using FTP and editing PHP files. Also, you want to always take backups of your website and files before making any changes to always go back if you have any problems.</p><ol><li>Disable the wp-cron.php by adding the following line anywhere in your wp-config.php file. You should put this line right after the &lt;?php line.</li></ol><pre><code class=\"language-plaintext\">&lt;?php\ndefine('DISABLE_WP_CRON', true);\n?&gt;\n</code></pre><ol><li>Now, we have disabled the wp-cron.php, but some of your plugnis most likely rely on it, not to worry, all you have to do is create a cronjob with the following command.</li></ol><pre><code class=\"language-plaintext\">wget -q http://mydomain.com/wp-cron.php -O /dev/null\n</code></pre><p style=\"margin-left:0px;\">Voila! Your website’s resource usage has effectively been cut in half and now your server will start performing much better overall. We will continue to post quick performance tips from time to time, so make sure to keep up with our blog!</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T03:54:49.529Z","created_at":"2021-03-30T03:54:41.940Z","updated_at":"2021-03-30T03:57:03.414Z","PostSEO":{"id":476,"GoogleSEO":{"id":467,"Title":"WordPress Performance Tip: Controlling Cronjobs - VEXXHOST","Description":"So, your blog is growing fast or you are worried that your visitors will start increasing quickly but your WordPress based website or blog is slowly"},"FacebookSEO":{"id":463,"Title":"WordPress Performance Tip: Controlling Cronjobs - VEXXHOST","Url":null,"Description":"So, your blog is growing fast or you are worried that your visitors will start increasing quickly but your WordPress based website or blog is slowly","SiteName":"VEXXHOST","Image":{"id":589,"name":"WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076382/small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"small_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":170.11,"width":500,"height":250,"provider_metadata":{"public_id":"small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076381/medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"medium_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":405.59,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076380/thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"thumbnail_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":47.02,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}}},"hash":"Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","ext":".png","mime":"image/png","size":375.76,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076379/Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"},"created_at":"2021-03-30T03:53:02.989Z","updated_at":"2021-03-30T03:53:03.001Z"}},"TwitterSEO":{"id":463,"Description":"So, your blog is growing fast or you are worried that your visitors will start increasing quickly but your WordPress based website or blog is slowly","Title":"WordPress Performance Tip: Controlling Cronjobs - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":589,"name":"WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076382/small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"small_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":170.11,"width":500,"height":250,"provider_metadata":{"public_id":"small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076381/medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"medium_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":405.59,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076380/thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"thumbnail_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":47.02,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}}},"hash":"Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","ext":".png","mime":"image/png","size":375.76,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076379/Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"},"created_at":"2021-03-30T03:53:02.989Z","updated_at":"2021-03-30T03:53:03.001Z"}}},"LinkToResource":{"id":394,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":589,"name":"WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076382/small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"small_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":170.11,"width":500,"height":250,"provider_metadata":{"public_id":"small_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076381/medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"medium_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":405.59,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076380/thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","hash":"thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","mime":"image/png","name":"thumbnail_WordPress-Performance-Tip-Controlling-Cronjobs-800x400.png","path":null,"size":47.02,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"}}},"hash":"Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","ext":".png","mime":"image/png","size":375.76,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076379/Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_Performance_Tip_Controlling_Cronjobs_800x400_82723fb2be","resource_type":"image"},"created_at":"2021-03-30T03:53:02.989Z","updated_at":"2021-03-30T03:53:03.001Z"},"TextContent":"WordPress Performance Tip: Controlling CronjobsSo, your blog is growing fast or you are worried that your visitors will start increasing quickly but your WordPress based website or blog is slowly starting to slow down. You are panicking and you start to get worried that your rankings will start falling down, visitors will get frustrated at your site and your site might possibly go down.Well, we are here to give you a simple and quick tip to reduce the resource usage of your WordPress blog while increasing the overall performance due to the decreased load that your blog will generate, all you need is 5 minutes and FTP access to your blog.The wp-cron.php file runs with every single page load by default on WordPress blogs, which means that for every 1 request you get, you generate another one. This effectively translates to 1000 page views are actually making 2000 requests, which does not make sense!You see, WordPress was designed to be extremely easy to use, therefore, this easy to use system was put in place under the assumption that it was plug and play, because you never had to worry about it before. However, they assume once your traffic gets busy, you would likely take care of it anyways.Before we start, make sure that you are comfortable with your using FTP and editing PHP files. Also, you want to always take backups of your website and files before making any changes to always go back if you have any problems.Disable the wp-cron.php by adding the following line anywhere in your wp-config.php file. You should put this line right after the <?php line.<?php\ndefine('DISABLE_WP_CRON', true);\n?>\nNow, we have disabled the wp-cron.php, but some of your plugnis most likely rely on it, not to worry, all you have to do is create a cronjob with the following command.wget -q http://mydomain.com/wp-cron.php -O /dev/null\nVoila! Your website’s resource usage has effectively been cut in half and now your server will start performing much better overall. We will continue to post quick performance tips from time to time, so make sure to keep up with our blog!Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost."},{"id":7,"Title":"How to Add Swap on Ubuntu","Slug":"resources/tutorials/how-to-add-swap-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive pages in memory are moved to the swap space. While swap space can help machines with a small amount of RAM, it should not be considered a replacement for more RAM. Swap space is located on hard drives, which have a slower access time than physical memory.</p><p style=\"margin-left:0px;\">Swap space can be a dedicated swap partition, a swap file, or a combination of swap partitions and swap files. On our cloud servers, we don’t have swap activated by default because we have very generous memory in all of our servers.</p><p style=\"margin-left:0px;\">You can add swap to your server if you require, however, we would recommend that you upgrade your server if you need additional resources. The upgrade process is seamless and only requires a short server restart to adjust your disk storage.</p><h3>Check Swap Status</h3><p style=\"margin-left:0px;\">It’s good practice to make sure that there isn’t a swap partition or file that was activated previously. Some specific applications such as cPanel create a swap file on your behalf, so it’s important to check that there isn’t an existing one. You can run this command to view the status of your swap.</p><pre><code class=\"language-plaintext\"># swapon -s\nFilename                Type        Size    Used    Priority\n</code></pre><p style=\"margin-left:0px;\">If you see output similar to the one above with nothing listed under file name, it means that the server has no swap running on it. If you see any entries, it means that there is an existing swap defined on your machine.</p><h3>Determine Swap File Size</h3><p style=\"margin-left:0px;\">There is usually a lot of different opinions on deciding on the amount of swap to setup on your server, ranging from people saying to use the same amount of memory to those mentioning to use twice the amount of memory. However, we find that it should be decided based on how much disk space and memory you have, so let’s start by checking how much disk space we have.</p><pre><code class=\"language-plaintext\"># df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.8G   36G   5% /\nudev            489M  4.0K  489M   1% /dev\ntmpfs           199M  244K  199M   1% /run\nnone            5.0M  8.0K  5.0M   1% /run/lock\nnone            498M     0  498M   0% /run/shm\n/dev/vdb        416K  416K     0 100% /configdrive\n</code></pre><p style=\"margin-left:0px;\">We see that we have 36 gigabytes available in our primary file system. This server also has 1GB of memory, therefore, we can comfortably run twice the size of the memory (so 2GB swap in this case). Please note that if you have a large server (8GB or more), you most likely don’t need any more than 8GB of swap. For this example, we’ll decide on a 2GB swap.</p><h3>Create and Enable Swap</h3><p style=\"margin-left:0px;\">We will need a blank file, the size of our swap. We can use the dd Linux tool to create that blank file. Afterwards, we will update the permissions to secure the swap file. The following command will Let’s also take this moment to appreciate how fast our SSDs write to disk! Feel free to post how fast your server can run this command in the comments.</p><pre><code class=\"language-plaintext\"># dd if=/dev/zero of=/swap bs=1M count=2048 oflag=direct\n2048+0 records in\n2048+0 records out\n2147483648 bytes (2.1 GB) copied, 2.40066 s, 894 MB/s\n# chown root:root /swap\n# chmod 0600 /swap\n</code></pre><p style=\"margin-left:0px;\">The command above will write zero’s to a file named /swap, the size of 2048MB (2 gigabytes). The size is determine by multiplying the block size and count (2048 blocks of 1 megabyte = 2048 megabytes). The oflag=direct flag means to write directly to disk and not buffer/cache anything to memory, which means the numbers above are straight-to-disk speeds.</p><p style=\"margin-left:0px;\">The next step is to configure the file as a swap file and enable it inside the operating system, we can do this with the following two simple commands:</p><pre><code class=\"language-plaintext\"># mkswap /swap\n# swapon /swap\n</code></pre><p style=\"margin-left:0px;\">When we run the mkswap command, it should output some information about the configuration of the swap file similar to the following:</p><pre><code class=\"language-plaintext\">Setting up swapspace version 1, size = 2097148 KiB\nno label, UUID=5c9e1ecf-6b5c-4825-918e-a52da8ec0394\n</code></pre><p style=\"margin-left:0px;\">Once you’ve ran the above commands, you should be able to check your swap status as we’ve shown above, but this time, you’ll see the new swap file that we created. You can check it the following way and the output should be similar to the one below:</p><pre><code class=\"language-plaintext\"># swapon -s\nFilename                Type        Size    Used    Priority\n/swap                                   file        2097148 0   -1\n</code></pre><h3>Swap File Persistence</h3><p style=\"margin-left:0px;\">We have manually enabled the swap file, however, if you reboot the server, you will see that the swap file will disappear. This is due to the fact that it needs to be mounted on each boot. We can do this by adding the following lines to the /etc/fstab file.</p><pre><code class=\"language-plaintext\"># echo \"/swap none swap sw 0 0\" &gt;&gt; /etc/fstab\n</code></pre><p style=\"margin-left:0px;\">Once you add that, when your server boots again, it will automatically mount the swap file we created at /swap as the swap for machine. Your Ubuntu server should now start taking advantage of the swap right away. You can check the status of your swap by typing the following command:</p><pre><code class=\"language-plaintext\"># free -m\n             total       used       free     shared    buffers     cached\nMem:           994        119        875          0         27         32\n-/+ buffers/cache:         59        935\nSwap:         2047          0       2047\n</code></pre><p style=\"margin-left:0px;\">As you see, this server has 1 gigabyte of memory, 2 gigabytes of swap, however, as the server does not have any big processes running on it, it is not currently using the swap.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:03:50.632Z","created_at":"2021-03-30T04:03:43.764Z","updated_at":"2021-03-30T04:03:51.511Z","PostSEO":{"id":481,"GoogleSEO":{"id":472,"Title":"How to Add Swap on Ubuntu - VEXXHOST","Description":"Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive"},"FacebookSEO":{"id":468,"Title":"How to Add Swap on Ubuntu - VEXXHOST","Url":null,"Description":"Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive","SiteName":"VEXXHOST","Image":{"id":594,"name":"How-to-Add-Swap-on-Ubuntu-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076962/small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"small_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":82.47,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076961/medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"medium_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":215.83,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076958/thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"thumbnail_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":19.19,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}}},"hash":"How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","ext":".png","mime":"image/png","size":147.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076957/How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"},"created_at":"2021-03-30T04:02:42.669Z","updated_at":"2021-03-30T04:02:42.710Z"}},"TwitterSEO":{"id":468,"Description":"Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive","Title":"How to Add Swap on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":594,"name":"How-to-Add-Swap-on-Ubuntu-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076962/small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"small_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":82.47,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076961/medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"medium_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":215.83,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076958/thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"thumbnail_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":19.19,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}}},"hash":"How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","ext":".png","mime":"image/png","size":147.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076957/How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"},"created_at":"2021-03-30T04:02:42.669Z","updated_at":"2021-03-30T04:02:42.710Z"}}},"LinkToResource":{"id":399,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":594,"name":"How-to-Add-Swap-on-Ubuntu-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076962/small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"small_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":82.47,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076961/medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"medium_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":215.83,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076958/thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","hash":"thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","mime":"image/png","name":"thumbnail_How-to-Add-Swap-on-Ubuntu-800x400 (1).png","path":null,"size":19.19,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"}}},"hash":"How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","ext":".png","mime":"image/png","size":147.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076957/How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Add_Swap_on_Ubuntu_800x400_1_5a1b817336","resource_type":"image"},"created_at":"2021-03-30T04:02:42.669Z","updated_at":"2021-03-30T04:02:42.710Z"},"TextContent":"Swap space in Linux is used when the amount of physical memory (RAM) is full. If the system needs more memory resources and the RAM is full, inactive pages in memory are moved to the swap space. While swap space can help machines with a small amount of RAM, it should not be considered a replacement for more RAM. Swap space is located on hard drives, which have a slower access time than physical memory.Swap space can be a dedicated swap partition, a swap file, or a combination of swap partitions and swap files. On our cloud servers, we don’t have swap activated by default because we have very generous memory in all of our servers.You can add swap to your server if you require, however, we would recommend that you upgrade your server if you need additional resources. The upgrade process is seamless and only requires a short server restart to adjust your disk storage.Check Swap StatusIt’s good practice to make sure that there isn’t a swap partition or file that was activated previously. Some specific applications such as cPanel create a swap file on your behalf, so it’s important to check that there isn’t an existing one. You can run this command to view the status of your swap.# swapon -s\nFilename                Type        Size    Used    Priority\nIf you see output similar to the one above with nothing listed under file name, it means that the server has no swap running on it. If you see any entries, it means that there is an existing swap defined on your machine.Determine Swap File SizeThere is usually a lot of different opinions on deciding on the amount of swap to setup on your server, ranging from people saying to use the same amount of memory to those mentioning to use twice the amount of memory. However, we find that it should be decided based on how much disk space and memory you have, so let’s start by checking how much disk space we have.# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        40G  1.8G   36G   5% /\nudev            489M  4.0K  489M   1% /dev\ntmpfs           199M  244K  199M   1% /run\nnone            5.0M  8.0K  5.0M   1% /run/lock\nnone            498M     0  498M   0% /run/shm\n/dev/vdb        416K  416K     0 100% /configdrive\nWe see that we have 36 gigabytes available in our primary file system. This server also has 1GB of memory, therefore, we can comfortably run twice the size of the memory (so 2GB swap in this case). Please note that if you have a large server (8GB or more), you most likely don’t need any more than 8GB of swap. For this example, we’ll decide on a 2GB swap.Create and Enable SwapWe will need a blank file, the size of our swap. We can use the dd Linux tool to create that blank file. Afterwards, we will update the permissions to secure the swap file. The following command will Let’s also take this moment to appreciate how fast our SSDs write to disk! Feel free to post how fast your server can run this command in the comments.# dd if=/dev/zero of=/swap bs=1M count=2048 oflag=direct\n2048+0 records in\n2048+0 records out\n2147483648 bytes (2.1 GB) copied, 2.40066 s, 894 MB/s\n# chown root:root /swap\n# chmod 0600 /swap\nThe command above will write zero’s to a file named /swap, the size of 2048MB (2 gigabytes). The size is determine by multiplying the block size and count (2048 blocks of 1 megabyte = 2048 megabytes). The oflag=direct flag means to write directly to disk and not buffer/cache anything to memory, which means the numbers above are straight-to-disk speeds.The next step is to configure the file as a swap file and enable it inside the operating system, we can do this with the following two simple commands:# mkswap /swap\n# swapon /swap\nWhen we run the mkswap command, it should output some information about the configuration of the swap file similar to the following:Setting up swapspace version 1, size = 2097148 KiB\nno label, UUID=5c9e1ecf-6b5c-4825-918e-a52da8ec0394\nOnce you’ve ran the above commands, you should be able to check your swap status as we’ve shown above, but this time, you’ll see the new swap file that we created. You can check it the following way and the output should be similar to the one below:# swapon -s\nFilename                Type        Size    Used    Priority\n/swap                                   file        2097148 0   -1\nSwap File PersistenceWe have manually enabled the swap file, however, if you reboot the server, you will see that the swap file will disappear. This is due to the fact that it needs to be mounted on each boot. We can do this by adding the following lines to the /etc/fstab file.# echo \"/swap none swap sw 0 0\" >> /etc/fstab\nOnce you add that, when your server boots again, it will automatically mount the swap file we created at /swap as the swap for machine. Your Ubuntu server should now start taking advantage of the swap right away. You can check the status of your swap by typing the following command:# free -m\n             total       used       free     shared    buffers     cached\nMem:           994        119        875          0         27         32\n-/+ buffers/cache:         59        935\nSwap:         2047          0       2047\nAs you see, this server has 1 gigabyte of memory, 2 gigabytes of swap, however, as the server does not have any big processes running on it, it is not currently using the swap."},{"id":4,"Title":"Nginx Windows: How to Install","Slug":"resources/tutorials/nginx-windows-how-to-install","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\"><a href=\"http://nginx.org/\">Nginx</a> is an extremely high performance web server which has the ability to handle thousands of requests per second with little hardware requirements. It can be installed on any operating system and it comes as an open source application as well.</p><p style=\"margin-left:0px;\">As much as Nginx is setup and supported for Windows, it does come with quite a few issues which limit it’s performance. We <strong>strongly</strong> recommend that you setup Nginx on a Linux server. You can get started on our cloud servers for just a few dollars per month.</p><p style=\"margin-left:0px;\">We’re going to go over how to install Nginx for Windows and we will also cover the details of how to set it up as a service within Windows, so it can start automatically.. You will need to have full Administrator access to the machine that you will be setting up as well to continue.</p><h2 style=\"margin-left:0px;\">Download &amp; Extract Nginx</h2><p style=\"margin-left:0px;\">Nginx comes pre-compiled for Windows which makes it extremely easy to get started. If it did not come pre-compiled, you would need to have a compiler installed on your computer with a full environment. Fortunately, this is not the case. At the time of this article, the latest Nginx version is 1.5.4 so we’ll download it from here:</p><p style=\"margin-left:0px;\"><a href=\"http://nginx.org/download/nginx-1.5.4.zip\">Download Nginx Windows</a></p><p style=\"margin-left:0px;\">Once you’ve downloaded Nginx for Windows, you can extract it to your folder of choice, we recommend that you install it somewhere easily accessible such as C:nginx.</p><h2 style=\"margin-left:0px;\">Verify Nginx Windows Installation</h2><p style=\"margin-left:0px;\">In order to make sure that the service is working with no problems, we recommend that you start a command prompt window and type the following, make sure that you update the path if you’ve installed it in another folder.</p><pre><code class=\"language-plaintext\">C:/nginx/nginx.exe\n</code></pre><p style=\"margin-left:0px;\">You should be able to go to http://localhost/ and you should see the “Welcome to Nginx” default page. If you see that page, then we can be sure that Nginx has been installed properly. We will now shut it down and install it as a service, to stop it, you can use this command.</p><pre><code class=\"language-plaintext\">C:/nginx/nginx.exe -s stop\n</code></pre><p style=\"margin-left:0px;\">Now, if you were using Nginx as a simple development server, you can use these simple commands to start and stop the server as you need. However, if you will be using it as a production server, you would want to install it as a Windows service, which is what we’re covering in the next step.</p><h3>Install Nginx Windows Service</h3><p style=\"margin-left:0px;\">We will be using the WINSW project to create a service out of the existing Nginx binaries. The first step is to download it from the following URL and save it in the same folder as Nginx as nginxsvc.exe.</p><p style=\"margin-left:0px;\">Download WINSW</p><p style=\"margin-left:0px;\">Once that is setup, you will need to create a service file, please be sure to create a file with the name nginxsvc.xml and with the following contents:</p><pre><code class=\"language-plaintext\">&lt;service&gt;\n  &lt;id&gt;nginx&lt;/id&gt;\n  &lt;name&gt;nginx&lt;/name&gt;\n  &lt;description&gt;nginx&lt;/description&gt;\n  &lt;executable&gt;c:nginxnginx.exe&lt;/executable&gt;\n  &lt;logpath&gt;c:nginx&lt;/logpath&gt;\n  &lt;logmode&gt;roll&lt;/logmode&gt;\n  &lt;depend&gt;&lt;/depend&gt;\n  &lt;startargument&gt;-p c:nginx&lt;/startargument&gt;\n  &lt;stopargument&gt;-p c:nginx -s stop&lt;/stopargument&gt;\n&lt;/service&gt;\n</code></pre><p style=\"margin-left:0px;\">You are now ready to install the Windows service, you can proceed to run the following command:</p><pre><code class=\"language-plaintext\">C:/nginx/nginxsvc.exe install\n</code></pre><p style=\"margin-left:0px;\">You can now proceed to manage the service from your service manager. The easiest and fastest way to access it is to type the following in your command prompt:</p><pre><code class=\"language-plaintext\">services.msc\n</code></pre><p style=\"margin-left:0px;\">You should be all setup and done at this point. You have Nginx as a service and you can set it up to start automatically when it is booted with your operating system!</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T03:58:50.515Z","created_at":"2021-03-30T03:58:47.469Z","updated_at":"2021-03-30T03:58:51.210Z","PostSEO":{"id":478,"GoogleSEO":{"id":469,"Title":"Nginx Windows: How to Install - VEXXHOST","Description":"Nginx is an extremely high performance web server which has the ability to handle thousands of requests per second with little hardware requirements. It"},"FacebookSEO":{"id":465,"Title":"Nginx Windows: How to Install - VEXXHOST","Url":null,"Description":"Nginx is an extremely high performance web server which has the ability to handle thousands of requests per second with little hardware requirements. It","SiteName":"VEXXHOST","Image":{"id":591,"name":"Nginx-Windows-How-to-Install-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076644/small_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"small_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"small_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":120.45,"width":500,"height":250,"provider_metadata":{"public_id":"small_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076644/medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"medium_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":243.95,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076643/thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"thumbnail_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":34.95,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}}},"hash":"Nginx_Windows_How_to_Install_800x400_1_56a123a192","ext":".png","mime":"image/png","size":202.57,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076642/Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"},"created_at":"2021-03-30T03:57:25.234Z","updated_at":"2021-03-30T03:57:25.245Z"}},"TwitterSEO":{"id":465,"Description":"Nginx is an extremely high performance web server which has the ability to handle thousands of requests per second with little hardware requirements. It","Title":"Nginx Windows: How to Install - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":591,"name":"Nginx-Windows-How-to-Install-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076644/small_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"small_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"small_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":120.45,"width":500,"height":250,"provider_metadata":{"public_id":"small_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076644/medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"medium_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":243.95,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076643/thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"thumbnail_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":34.95,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}}},"hash":"Nginx_Windows_How_to_Install_800x400_1_56a123a192","ext":".png","mime":"image/png","size":202.57,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076642/Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"},"created_at":"2021-03-30T03:57:25.234Z","updated_at":"2021-03-30T03:57:25.245Z"}}},"LinkToResource":{"id":396,"Description":"<h2 style=\"margin-left:0px;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":591,"name":"Nginx-Windows-How-to-Install-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076644/small_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"small_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"small_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":120.45,"width":500,"height":250,"provider_metadata":{"public_id":"small_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076644/medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"medium_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":243.95,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076643/thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","hash":"thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192","mime":"image/png","name":"thumbnail_Nginx-Windows-How-to-Install-800x400 (1).png","path":null,"size":34.95,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"}}},"hash":"Nginx_Windows_How_to_Install_800x400_1_56a123a192","ext":".png","mime":"image/png","size":202.57,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076642/Nginx_Windows_How_to_Install_800x400_1_56a123a192.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Nginx_Windows_How_to_Install_800x400_1_56a123a192","resource_type":"image"},"created_at":"2021-03-30T03:57:25.234Z","updated_at":"2021-03-30T03:57:25.245Z"},"TextContent":"Nginx is an extremely high performance web server which has the ability to handle thousands of requests per second with little hardware requirements. It can be installed on any operating system and it comes as an open source application as well.As much as Nginx is setup and supported for Windows, it does come with quite a few issues which limit it’s performance. We strongly recommend that you setup Nginx on a Linux server. You can get started on our cloud servers for just a few dollars per month.We’re going to go over how to install Nginx for Windows and we will also cover the details of how to set it up as a service within Windows, so it can start automatically.. You will need to have full Administrator access to the machine that you will be setting up as well to continue.Download & Extract NginxNginx comes pre-compiled for Windows which makes it extremely easy to get started. If it did not come pre-compiled, you would need to have a compiler installed on your computer with a full environment. Fortunately, this is not the case. At the time of this article, the latest Nginx version is 1.5.4 so we’ll download it from here:Download Nginx WindowsOnce you’ve downloaded Nginx for Windows, you can extract it to your folder of choice, we recommend that you install it somewhere easily accessible such as C:nginx.Verify Nginx Windows InstallationIn order to make sure that the service is working with no problems, we recommend that you start a command prompt window and type the following, make sure that you update the path if you’ve installed it in another folder.C:/nginx/nginx.exe\nYou should be able to go to http://localhost/ and you should see the “Welcome to Nginx” default page. If you see that page, then we can be sure that Nginx has been installed properly. We will now shut it down and install it as a service, to stop it, you can use this command.C:/nginx/nginx.exe -s stop\nNow, if you were using Nginx as a simple development server, you can use these simple commands to start and stop the server as you need. However, if you will be using it as a production server, you would want to install it as a Windows service, which is what we’re covering in the next step.Install Nginx Windows ServiceWe will be using the WINSW project to create a service out of the existing Nginx binaries. The first step is to download it from the following URL and save it in the same folder as Nginx as nginxsvc.exe.Download WINSWOnce that is setup, you will need to create a service file, please be sure to create a file with the name nginxsvc.xml and with the following contents:<service>\n  <id>nginx</id>\n  <name>nginx</name>\n  <description>nginx</description>\n  <executable>c:nginxnginx.exe</executable>\n  <logpath>c:nginx</logpath>\n  <logmode>roll</logmode>\n  <depend></depend>\n  <startargument>-p c:nginx</startargument>\n  <stopargument>-p c:nginx -s stop</stopargument>\n</service>\nYou are now ready to install the Windows service, you can proceed to run the following command:C:/nginx/nginxsvc.exe install\nYou can now proceed to manage the service from your service manager. The easiest and fastest way to access it is to type the following in your command prompt:services.msc\nYou should be all setup and done at this point. You have Nginx as a service and you can set it up to start automatically when it is booted with your operating system!"},{"id":1,"Title":"How To Run Nginx in a Docker Container on Ubuntu 16.04","Slug":"resources/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-16-04","Publisher":{"id":4,"username":"knaser","email":"knaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:34:44.274Z","updated_at":"2021-03-18T20:35:09.017Z","fullname":"Khaled Naser","description":"","ContactInfo":null,"ProfilePicture":{"id":6,"name":"874ce07d14d540276902149acf486d1d.jpg","alternativeText":"","caption":"","width":96,"height":96,"formats":null,"hash":"874ce07d14d540276902149acf486d1d_0c4aad3ce2","ext":".jpg","mime":"image/jpeg","size":1.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1616099670/874ce07d14d540276902149acf486d1d_0c4aad3ce2.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"874ce07d14d540276902149acf486d1d_0c4aad3ce2","resource_type":"image"},"created_at":"2021-03-18T20:34:30.569Z","updated_at":"2021-03-18T20:34:31.175Z"}},"Published":null,"Content":"<p style=\"margin-left:0px;\">Nginx is an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer, HTTP cache, and a web server (origin server).</p><p style=\"margin-left:0px;\">Docker containers enable developers to focus their efforts on application “content” by separating applications from the constraints of infrastructure. Dockerized applications are instantly portable to any infrastructure–laptop, bare-metal server, VM, or cloud–making them modular components that can be readily assembled and re-assembled into fully featured distributed applications and continuously innovated on in real time. In practice, this means we can take one application or group of applications to wrap them in a container to make them modular, portable, compose-able, and lightweight. This portability means you can install the Docker Engine on a wide variety of operating systems, and any functional container written by anyone will run on it.</p><p style=\"margin-left:0px;\">Docker containers are a popular form of a relatively old operations practice, that is containerization. Containerization differs from virtualization in that virtualization abstracts away the hardware, while containerization abstracts away the base operating system, too.</p><p style=\"margin-left:0px;\">In this article we will serve a basic web page, so we can focus on configuring Nginx with a Docker container.</p><h2 style=\"margin-left:0px;\">Prerequisites:</h2><p style=\"margin-left:0px;\">Login to your Ubuntu 16.04 LTS server using your sudo credentials or the best practice is to login using SSH-key . Docker requires a 64-bit installation regardless of your Ubuntu version. Additionally, your kernel must be 3.10 at minimum. The latest 3.10 minor version or a newer maintained version are also acceptable.</p><p style=\"margin-left:0px;\">Once you got access to your server, run the command below to check your kernel version, to make sure the kernel is at least 3.10 or above.</p><p>ubuntu@ubuntu-16:~$ uname -r 4.4.0-24-generic</p><p style=\"margin-left:0px;\">Docker 1.11.2 relies on some fairly recent kernel features, so we using the right kernel version recommended for Docker 1.11.2 . But it’s fairly good to update your system by flowing the command below before moving to the next step.</p><p>$ sudo apt-get -y update</p><h2 style=\"margin-left:0px;\">Installing Docker on Ubuntu 16.04:</h2><p style=\"margin-left:0px;\">Docker hosts a startup script to get Docker up and running on your machine. We can install it simply by running the command below.</p><p>$ sudo curl -sSL https://get.docker.com/ | sh</p><p style=\"margin-left:0px;\">It will take a while and upon successful installation, you’ll see the installed version and some instructions for running as non-root/without sudo as shown below.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617016158/docket_install_85dea979d2.png\"></figure><p style=\"margin-left:0px;\">Now verify that ‘docker’ is installed correctly on your system by using below command.</p><p>$ sudo docker run hello-world</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617016222/docker_verify_c7685f1817.png\"></figure><p style=\"margin-left:0px;\">This command downloads a test image and runs it in a container. When the container runs, it prints an informational message. Then, it exists.</p><p style=\"margin-left:0px;\">As we have installed the Docker Client as part of our Docker installation, so we can have access to the command line tool that allows us to interact with our containers. Now we will see that how we can run a basic container and then remove it by using below commands.</p><p>$ sudo docker ps -a</p><p style=\"margin-left:0px;\">After execution of above command, you will get some basic information about the container. Now when we run this container again with the container then you will see that the container has run recently as shown below.</p><p>$ sudo docker start angry_bassi</p><p style=\"margin-left:0px;\">By default, Docker containers run their assigned commands and then exit. But some containers will be set up to run through a list of tasks and finish, while others will run indefinitely.</p><p style=\"margin-left:0px;\">To remove the hello-world image, as we won’t be needing it again run below command containing your own docker name.</p><p>$ sudo docker rm angry_bassi</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617016456/docker_basics_1_5e05f8f225.png\"></figure><h2 style=\"margin-left:0px;\">Downloading Nginx Docker Image:</h2><p style=\"margin-left:0px;\">In this section, we’ll download the Nginx Docker image and show you how to run the container so it’s publicly accessible as a web server. By default, containers are not accessible from the Internet, so we need to map the container’s internal port to the Droplet’s port.</p><p style=\"margin-left:0px;\">First, run the below command to get the Nginx image.</p><p>$ sudo docker pull nginx</p><p style=\"margin-left:0px;\">This will download all the necessary components for the container. Docker will cache these, so when we run the container we don’t need to download the container image(s) each time.</p><p style=\"margin-left:0px;\">Let’s start Nginx Docker container using below command.</p><p>$ sudo docker run --name docker-nginx -p 80:80 nginx</p><p style=\"margin-left:0px;\">That’s all we need to get Nginx up! Paste the IP address of your Ubuntu Droplet’s into a web browser and you should see Nginx’s “Welcome to nginx!” page. Then hit the break shortcut CTRL+C to get back to our shell session.</p><p style=\"margin-left:0px;\">In order to verify, run below command to check the status of Nginx container has exited.</p><p>$ sudo docker ps -a</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617016488/docker_nginx_9217c4c394.png\"></figure><h2 style=\"margin-left:0px;\">Running Docker Nginx in Detached Mode:</h2><p style=\"margin-left:0px;\">First, remove the old Nginx container and then create a new, detached Nginx container by using below commands.</p><p>$ sudo docker rm docker-nginx$ sudo docker run --name docker-nginx -p 80:80 -d nginx</p><p style=\"margin-left:0px;\">Whereas the -d is being used to run this container in the background.</p><p style=\"margin-left:0px;\">Now you will its status as Up upon execution of below command.</p><p>$ sudo docker ps</p><p style=\"margin-left:0px;\">If you open your server’s IP address again in your browser, we will be able to see the “Welcome to nginx!” page again.</p><p style=\"margin-left:0px;\">Now first stop the docker-nginx container and then remove it using commands shown below to move to the next step.</p><p>$ sudo docker stop docker-nginx $ sudo docker rm docker-nginx</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617016576/detached_mode_3f73bac6f8.png\"></figure><h2 style=\"margin-left:0px;\">Building a Web Page to Serve on Nginx:</h2><p style=\"margin-left:0px;\">Now we’ll get to the final version of our container, with a quick stop to generate a custom website file. This setup allows us to have persistent website content that’s hosted outside of the (transient) container.</p><p style=\"margin-left:0px;\">Create a new directory for your website content within the home directory, and change your directory to it, by running the commands shown below.</p><p>$ mkdir -p ~/docker-nginx/html cd ~/docker-nginx/html</p><p style=\"margin-left:0px;\">Now let’s create an HTML file using any of your command line editor and put some text on your index page.</p><p>$ vim index.html</p><p style=\"margin-left:0px;\">Save the file using :wq! you will get a simple index page to replace the default Nginx landing page.</p><p style=\"margin-left:0px;\">Now we’ll start our Nginx container so it’s accessible on the Internet over Port 80, and we’ll connect it to our website content on the server. Since we want to serve web pages, so we need to give our container the files to render.</p><p style=\"margin-left:0px;\">The Nginx container is set up by default to look for an index page at /usr/share/nginx/html, so in our new Docker container, we need to give it access to our files at that location. Let’s use the -v flag to map a folder from your local machine ~/docker-nginx/html to a relative path in the container that is /usr/share/nginx/html</p><p style=\"margin-left:0px;\">This can be accomplished by using the following command in your ssh terminal.</p><p>$ sudo docker run --name docker-nginx -p 80:80 -d -v ~/docker-nginx/html:/usr/share/nginx/html nginx</p><p style=\"margin-left:0px;\">Now if you open your web browser followed by the IP address or hostname of your Ubuntu 16.04 server, you will your index page text.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617016633/6_custom_nginx_7d266e9e83.png\"></figure><p style=\"margin-left:0px;\">You can upload more content to the ~/docker-nginx/html/ directory, and it will be added to your live website. We can build a whole site out of flat HTML files this way if we wanted to. For example, if we added an about.html page, we could access it at http://your_server_ip/about.html without needing to interact with the container.</p><h2 style=\"margin-left:0px;\">Conclusion:</h2><p style=\"margin-left:0px;\">Congratulations, we have successfully setup Nginx container serving a custom web page. NGINX, and Docker work extremely well together. Whether you use the open source NGINX image from the Docker Hub repository or create your own NGINX image, you can easily spin up new instances of NGINX in Docker containers.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-29T11:17:34.315Z","created_at":"2021-03-29T11:17:28.089Z","updated_at":"2021-03-30T03:52:14.219Z","PostSEO":{"id":475,"GoogleSEO":{"id":466,"Title":"How To Run Nginx in a Docker Container on Ubuntu 16.04 - VEXXHOST","Description":"Whether you use the open source NGINX image from the Docker Hub repository or create your own NGINX image, you can spin up new instances in containers."},"FacebookSEO":{"id":462,"Title":"How To Run Nginx in a Docker Container on Ubuntu 16.04 - VEXXHOST","Url":null,"Description":"Whether you use the open source NGINX image from the Docker Hub repository or create your own NGINX image, you can spin up new instances in containers.","SiteName":"VEXXHOST","Image":{"id":582,"name":"Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","alternativeText":"","caption":"","width":800,"height":444,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016120/small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"small_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":70.44,"width":500,"height":278,"provider_metadata":{"public_id":"small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016119/medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"medium_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":163.49,"width":750,"height":416,"provider_metadata":{"public_id":"medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016117/thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"thumbnail_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":19.36,"width":245,"height":136,"provider_metadata":{"public_id":"thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}}},"hash":"Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","ext":".png","mime":"image/png","size":144.87,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016116/Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"},"created_at":"2021-03-29T11:08:40.773Z","updated_at":"2021-03-29T11:08:40.823Z"}},"TwitterSEO":{"id":462,"Description":"Whether you use the open source NGINX image from the Docker Hub repository or create your own NGINX image, you can spin up new instances in containers.","Title":"How To Run Nginx in a Docker Container on Ubuntu 16.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":582,"name":"Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","alternativeText":"","caption":"","width":800,"height":444,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016120/small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"small_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":70.44,"width":500,"height":278,"provider_metadata":{"public_id":"small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016119/medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"medium_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":163.49,"width":750,"height":416,"provider_metadata":{"public_id":"medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016117/thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"thumbnail_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":19.36,"width":245,"height":136,"provider_metadata":{"public_id":"thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}}},"hash":"Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","ext":".png","mime":"image/png","size":144.87,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016116/Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"},"created_at":"2021-03-29T11:08:40.773Z","updated_at":"2021-03-29T11:08:40.823Z"}}},"LinkToResource":{"id":393,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":582,"name":"Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","alternativeText":"","caption":"","width":800,"height":444,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016120/small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"small_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":70.44,"width":500,"height":278,"provider_metadata":{"public_id":"small_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016119/medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"medium_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":163.49,"width":750,"height":416,"provider_metadata":{"public_id":"medium_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016117/thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","hash":"thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","mime":"image/png","name":"thumbnail_Run-Nginx-in-a-Docker-Container-on-Ubuntu-16.04-800x444.png","path":null,"size":19.36,"width":245,"height":136,"provider_metadata":{"public_id":"thumbnail_Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"}}},"hash":"Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","ext":".png","mime":"image/png","size":144.87,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617016116/Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Run_Nginx_in_a_Docker_Container_on_Ubuntu_16_04_800x444_0fe3fa23c1","resource_type":"image"},"created_at":"2021-03-29T11:08:40.773Z","updated_at":"2021-03-29T11:08:40.823Z"},"TextContent":"Nginx is an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer, HTTP cache, and a web server (origin server).Docker containers enable developers to focus their efforts on application “content” by separating applications from the constraints of infrastructure. Dockerized applications are instantly portable to any infrastructure–laptop, bare-metal server, VM, or cloud–making them modular components that can be readily assembled and re-assembled into fully featured distributed applications and continuously innovated on in real time. In practice, this means we can take one application or group of applications to wrap them in a container to make them modular, portable, compose-able, and lightweight. This portability means you can install the Docker Engine on a wide variety of operating systems, and any functional container written by anyone will run on it.Docker containers are a popular form of a relatively old operations practice, that is containerization. Containerization differs from virtualization in that virtualization abstracts away the hardware, while containerization abstracts away the base operating system, too.In this article we will serve a basic web page, so we can focus on configuring Nginx with a Docker container.Prerequisites:Login to your Ubuntu 16.04 LTS server using your sudo credentials or the best practice is to login using SSH-key . Docker requires a 64-bit installation regardless of your Ubuntu version. Additionally, your kernel must be 3.10 at minimum. The latest 3.10 minor version or a newer maintained version are also acceptable.Once you got access to your server, run the command below to check your kernel version, to make sure the kernel is at least 3.10 or above.ubuntu@ubuntu-16:~$ uname -r 4.4.0-24-genericDocker 1.11.2 relies on some fairly recent kernel features, so we using the right kernel version recommended for Docker 1.11.2 . But it’s fairly good to update your system by flowing the command below before moving to the next step.$ sudo apt-get -y updateInstalling Docker on Ubuntu 16.04:Docker hosts a startup script to get Docker up and running on your machine. We can install it simply by running the command below.$ sudo curl -sSL https://get.docker.com/ | shIt will take a while and upon successful installation, you’ll see the installed version and some instructions for running as non-root/without sudo as shown below.Now verify that ‘docker’ is installed correctly on your system by using below command.$ sudo docker run hello-worldThis command downloads a test image and runs it in a container. When the container runs, it prints an informational message. Then, it exists.As we have installed the Docker Client as part of our Docker installation, so we can have access to the command line tool that allows us to interact with our containers. Now we will see that how we can run a basic container and then remove it by using below commands.$ sudo docker ps -aAfter execution of above command, you will get some basic information about the container. Now when we run this container again with the container then you will see that the container has run recently as shown below.$ sudo docker start angry_bassiBy default, Docker containers run their assigned commands and then exit. But some containers will be set up to run through a list of tasks and finish, while others will run indefinitely.To remove the hello-world image, as we won’t be needing it again run below command containing your own docker name.$ sudo docker rm angry_bassiDownloading Nginx Docker Image:In this section, we’ll download the Nginx Docker image and show you how to run the container so it’s publicly accessible as a web server. By default, containers are not accessible from the Internet, so we need to map the container’s internal port to the Droplet’s port.First, run the below command to get the Nginx image.$ sudo docker pull nginxThis will download all the necessary components for the container. Docker will cache these, so when we run the container we don’t need to download the container image(s) each time.Let’s start Nginx Docker container using below command.$ sudo docker run --name docker-nginx -p 80:80 nginxThat’s all we need to get Nginx up! Paste the IP address of your Ubuntu Droplet’s into a web browser and you should see Nginx’s “Welcome to nginx!” page. Then hit the break shortcut CTRL+C to get back to our shell session.In order to verify, run below command to check the status of Nginx container has exited.$ sudo docker ps -aRunning Docker Nginx in Detached Mode:First, remove the old Nginx container and then create a new, detached Nginx container by using below commands.$ sudo docker rm docker-nginx$ sudo docker run --name docker-nginx -p 80:80 -d nginxWhereas the -d is being used to run this container in the background.Now you will its status as Up upon execution of below command.$ sudo docker psIf you open your server’s IP address again in your browser, we will be able to see the “Welcome to nginx!” page again.Now first stop the docker-nginx container and then remove it using commands shown below to move to the next step.$ sudo docker stop docker-nginx $ sudo docker rm docker-nginxBuilding a Web Page to Serve on Nginx:Now we’ll get to the final version of our container, with a quick stop to generate a custom website file. This setup allows us to have persistent website content that’s hosted outside of the (transient) container.Create a new directory for your website content within the home directory, and change your directory to it, by running the commands shown below.$ mkdir -p ~/docker-nginx/html cd ~/docker-nginx/htmlNow let’s create an HTML file using any of your command line editor and put some text on your index page.$ vim index.htmlSave the file using :wq! you will get a simple index page to replace the default Nginx landing page.Now we’ll start our Nginx container so it’s accessible on the Internet over Port 80, and we’ll connect it to our website content on the server. Since we want to serve web pages, so we need to give our container the files to render.The Nginx container is set up by default to look for an index page at /usr/share/nginx/html, so in our new Docker container, we need to give it access to our files at that location. Let’s use the -v flag to map a folder from your local machine ~/docker-nginx/html to a relative path in the container that is /usr/share/nginx/htmlThis can be accomplished by using the following command in your ssh terminal.$ sudo docker run --name docker-nginx -p 80:80 -d -v ~/docker-nginx/html:/usr/share/nginx/html nginxNow if you open your web browser followed by the IP address or hostname of your Ubuntu 16.04 server, you will your index page text.You can upload more content to the ~/docker-nginx/html/ directory, and it will be added to your live website. We can build a whole site out of flat HTML files this way if we wanted to. For example, if we added an about.html page, we could access it at http://your_server_ip/about.html without needing to interact with the container.Conclusion:Congratulations, we have successfully setup Nginx container serving a custom web page. NGINX, and Docker work extremely well together. Whether you use the open source NGINX image from the Docker Hub repository or create your own NGINX image, you can easily spin up new instances of NGINX in Docker containers."},{"id":5,"Title":"Fixing 403 Forbidden Nginx Errors","Slug":"resources/tutorials/fixing-403-forbidden-nginx-errors","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">HTTP errors are pesky and typically hard to resolve without the right tools. However, with proper investigation and tools, you can easily identify the source of a problem and fix it just as fast. In order to debug or fix 403 Forbidden Nginx errors, all you have to do is check the correct error logs and take the proper action to resolve it. We’ll go over how to check the error logs and the possible scenarios that typically cause these errors.</p><h2 style=\"margin-left:0px;\">Finding Error Logs</h2><p style=\"margin-left:0px;\">If you know exactly where the error logs of your Nginx server are, you can skip onto the next section. If you’re not sure where to find the error logs of your Nginx server, then be sure to continue this section.</p><p style=\"margin-left:0px;\">The path for error logs can change a lot depending on how Nginx was installed on the server and the Linux distribution. If you do not know where your error logs are and you have a hard time going through Nginx configuration, we can use a very small and useful Linux tool with the name of lsof which gives us all the open files associated to a specific process. This will help us find the error log for your web server.</p><p style=\"margin-left:0px;\">The first step of this is to check for the process ID of the main Nginx process, you can run the following command and except output somewhat similar to the one indicated below:</p><pre><code class=\"language-plaintext\">$ ps x | grep nginx\n29229 ?        S      0:00 nginx: master process /usr/sbin/nginx\n</code></pre><p style=\"margin-left:0px;\">The first column of each row is the process ID, as we can see, the main/master process ID is 29229 in this case, however this will change in every system. Once you have the process ID, you will be able to use the lsof too to get all open files associated to this process by running the following. We’ve trimmed the output to the part you should be looking for, as there might be a lot more data when you run that command:</p><pre><code class=\"language-plaintext\">$ lsof -p 29229\nCOMMAND   PID USER   FD   TYPE             DEVICE SIZE/OFF     NODE NAME\nnginx   29229 root  cwd    DIR              202,1     4096        2 /\nnginx   29229 root  rtd    DIR              202,1     4096        2 /\nnginx   29229 root  txt    REG              202,1   843656     1182 /usr/sbin/nginx\n...\nnginx   29229 root    2w   REG              202,1        0   262748 /var/log/nginx/error.log\n...\n</code></pre><p style=\"margin-left:0px;\">As you can see from the above output, we can see that one of the files that are open by this Nginx installation is /var/log/nginx/error.log which (by the file name) does look like an error log. We’ve now identified the path of our Nginx error log and we can move onto finding the reason behind our pesky HTTP error.</p><h2 style=\"margin-left:0px;\">Fixing Nginx HTTP errors</h2><p style=\"margin-left:0px;\">Once you have the correct error log file, it’s time to watch for errors. In our experience, the best way to do this is by running a continuous stream of the error log in your shell screen using the tail utility.</p><pre><code class=\"language-plaintext\">$ tail -f /var/log/nginx/error.log\n</code></pre><p style=\"margin-left:0px;\">Once you’ve ran this command, tail will continuously output any newly appended content to the error.log as it comes in until you hit <i>Control + C</i>. We recommend that you clear the entire shell screen to make it easy to identify newly appended content. You can do this in Windows (PuTTY) by right clicking the PuTTY menu bar and clicking on “Clear Scrollback” or on Mac OS X by clicking <i>Command + K</i>.</p><p style=\"margin-left:0px;\">Now, you will need to replicate the issue that you are getting. The error should be printed out right away after you replicate the issue. For example, if you have a 403 Forbidden error, then you should refresh the page that is causing the problem so that a new error log entry can be appended. Once that is done, you’ll see a new line in the error log which should hopefully lead you to the right path to fixing the issue. We’re going to cover a few of the most common issues below.</p><h2 style=\"margin-left:0px;\">Incorrect Directory Settings</h2><p style=\"margin-left:0px;\">The error below can be caused by two different reasons: incorrect directory index or disallowed directory listing.</p><pre><code class=\"language-plaintext\">2013/08/31 15:03:43 [error] 29231#0: *2098806 directory index of \"/usr/share/nginx/static/\" is forbidden, client: 1.1.1.1, server: domain.com, request: \"GET / HTTP/1.1\", host: \"domain.com\"\n</code></pre><p style=\"margin-left:0px;\">If you are trying to list all the files in a folder, you will get that error if the directory does not have directory listing enabled. You can enable directory listing by adding the following line to your Nginx configuration, you can read more about this option here: <a href=\"http://nginx.org/en/docs/http/ngx_http_autoindex_module.html\">http://nginx.org/en/docs/http/ngx_http_autoindex_module.html</a></p><pre><code class=\"language-plaintext\">autoindex on;\n</code></pre><p style=\"margin-left:0px;\">The other possibility for that error to come up is if your index setting is incorrect, so for example, you have a index.php file in that folder, however, your index setting is setup to index.htm and index.html. This means that only these files are checked if no specific file is provided. If you alter it to something like the following, your index.php file should work:</p><pre><code class=\"language-plaintext\">index index.htm index.html index.php;\n</code></pre><h2 style=\"margin-left:0px;\">Incorrect Permissions</h2><p style=\"margin-left:0px;\">The error below is generally caused by incorrect Unix permissions, you will need to make sure you have the correct permissions for the entire path.</p><pre><code class=\"language-plaintext\">2013/09/01 00:31:57 [error] 29231#0: *2115270 open() \"/usr/share/nginx/static/forbidden\" failed (13: Permission denied), client: 1.1.1.1, server: domain.com, request: \"GET /forbidden HTTP/1.1\", host: \"domain.com\"\n</code></pre><p style=\"margin-left:0px;\">As you see, the file that we are trying to access is /usr/share/nginx/static/forbidden. In order for Nginx to access it with no problems at all, Nginx must have read permissions for that specific file as well as execute for all the folders above it. This means that /, /usr, /usr/share, /usr/share/nginx and /usr/share/nginx/static must be executable by Nginx and the file /usr/share/nginx/static/forbidden must be readable by Nginx in this case.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">We’ve gone through quite a few tools such as tail and lsof. These are just one of the tools which are offered by Linux which allow system administrators to resolve and debug issues much faster and easier. The most important factor in resolving system issues is being able to identify the issue properly, resolution is usually the easiest part once the problem is identified. The larger the toolset of the system administrator, the faster they can identify and fix those problems.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:00:39.624Z","created_at":"2021-03-30T04:00:33.327Z","updated_at":"2021-03-30T04:00:40.618Z","PostSEO":{"id":479,"GoogleSEO":{"id":470,"Title":"Fixing 403 Forbidden Nginx Errors - VEXXHOST","Description":"HTTP errors are pesky and typically hard to resolve without the right tools. However, with proper investigation and tools, you can easily identify the"},"FacebookSEO":{"id":466,"Title":"Fixing 403 Forbidden Nginx Errors - VEXXHOST","Url":null,"Description":"HTTP errors are pesky and typically hard to resolve without the right tools. However, with proper investigation and tools, you can easily identify the","SiteName":"VEXXHOST","Image":{"id":592,"name":"Fixing-403-Forbidden-Nginx-Errors-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076773/small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"small_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":287.8,"width":500,"height":250,"provider_metadata":{"public_id":"small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076772/medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"medium_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":641.49,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076770/thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"thumbnail_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":71.67,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}}},"hash":"Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","ext":".png","mime":"image/png","size":579.33,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076770/Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"},"created_at":"2021-03-30T03:59:33.338Z","updated_at":"2021-03-30T03:59:33.346Z"}},"TwitterSEO":{"id":466,"Description":"HTTP errors are pesky and typically hard to resolve without the right tools. However, with proper investigation and tools, you can easily identify the","Title":"Fixing 403 Forbidden Nginx Errors - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":592,"name":"Fixing-403-Forbidden-Nginx-Errors-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076773/small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"small_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":287.8,"width":500,"height":250,"provider_metadata":{"public_id":"small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076772/medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"medium_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":641.49,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076770/thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"thumbnail_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":71.67,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}}},"hash":"Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","ext":".png","mime":"image/png","size":579.33,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076770/Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"},"created_at":"2021-03-30T03:59:33.338Z","updated_at":"2021-03-30T03:59:33.346Z"}}},"LinkToResource":{"id":397,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":592,"name":"Fixing-403-Forbidden-Nginx-Errors-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076773/small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"small_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":287.8,"width":500,"height":250,"provider_metadata":{"public_id":"small_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076772/medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"medium_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":641.49,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076770/thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","hash":"thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","mime":"image/png","name":"thumbnail_Fixing-403-Forbidden-Nginx-Errors-800x400.png","path":null,"size":71.67,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"}}},"hash":"Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","ext":".png","mime":"image/png","size":579.33,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076770/Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Fixing_403_Forbidden_Nginx_Errors_800x400_c6ee62d00a","resource_type":"image"},"created_at":"2021-03-30T03:59:33.338Z","updated_at":"2021-03-30T03:59:33.346Z"},"TextContent":"HTTP errors are pesky and typically hard to resolve without the right tools. However, with proper investigation and tools, you can easily identify the source of a problem and fix it just as fast. In order to debug or fix 403 Forbidden Nginx errors, all you have to do is check the correct error logs and take the proper action to resolve it. We’ll go over how to check the error logs and the possible scenarios that typically cause these errors.Finding Error LogsIf you know exactly where the error logs of your Nginx server are, you can skip onto the next section. If you’re not sure where to find the error logs of your Nginx server, then be sure to continue this section.The path for error logs can change a lot depending on how Nginx was installed on the server and the Linux distribution. If you do not know where your error logs are and you have a hard time going through Nginx configuration, we can use a very small and useful Linux tool with the name of lsof which gives us all the open files associated to a specific process. This will help us find the error log for your web server.The first step of this is to check for the process ID of the main Nginx process, you can run the following command and except output somewhat similar to the one indicated below:$ ps x | grep nginx\n29229 ?        S      0:00 nginx: master process /usr/sbin/nginx\nThe first column of each row is the process ID, as we can see, the main/master process ID is 29229 in this case, however this will change in every system. Once you have the process ID, you will be able to use the lsof too to get all open files associated to this process by running the following. We’ve trimmed the output to the part you should be looking for, as there might be a lot more data when you run that command:$ lsof -p 29229\nCOMMAND   PID USER   FD   TYPE             DEVICE SIZE/OFF     NODE NAME\nnginx   29229 root  cwd    DIR              202,1     4096        2 /\nnginx   29229 root  rtd    DIR              202,1     4096        2 /\nnginx   29229 root  txt    REG              202,1   843656     1182 /usr/sbin/nginx\n...\nnginx   29229 root    2w   REG              202,1        0   262748 /var/log/nginx/error.log\n...\nAs you can see from the above output, we can see that one of the files that are open by this Nginx installation is /var/log/nginx/error.log which (by the file name) does look like an error log. We’ve now identified the path of our Nginx error log and we can move onto finding the reason behind our pesky HTTP error.Fixing Nginx HTTP errorsOnce you have the correct error log file, it’s time to watch for errors. In our experience, the best way to do this is by running a continuous stream of the error log in your shell screen using the tail utility.$ tail -f /var/log/nginx/error.log\nOnce you’ve ran this command, tail will continuously output any newly appended content to the error.log as it comes in until you hit Control + C. We recommend that you clear the entire shell screen to make it easy to identify newly appended content. You can do this in Windows (PuTTY) by right clicking the PuTTY menu bar and clicking on “Clear Scrollback” or on Mac OS X by clicking Command + K.Now, you will need to replicate the issue that you are getting. The error should be printed out right away after you replicate the issue. For example, if you have a 403 Forbidden error, then you should refresh the page that is causing the problem so that a new error log entry can be appended. Once that is done, you’ll see a new line in the error log which should hopefully lead you to the right path to fixing the issue. We’re going to cover a few of the most common issues below.Incorrect Directory SettingsThe error below can be caused by two different reasons: incorrect directory index or disallowed directory listing.2013/08/31 15:03:43 [error] 29231#0: *2098806 directory index of \"/usr/share/nginx/static/\" is forbidden, client: 1.1.1.1, server: domain.com, request: \"GET / HTTP/1.1\", host: \"domain.com\"\nIf you are trying to list all the files in a folder, you will get that error if the directory does not have directory listing enabled. You can enable directory listing by adding the following line to your Nginx configuration, you can read more about this option here: http://nginx.org/en/docs/http/ngx_http_autoindex_module.htmlautoindex on;\nThe other possibility for that error to come up is if your index setting is incorrect, so for example, you have a index.php file in that folder, however, your index setting is setup to index.htm and index.html. This means that only these files are checked if no specific file is provided. If you alter it to something like the following, your index.php file should work:index index.htm index.html index.php;\nIncorrect PermissionsThe error below is generally caused by incorrect Unix permissions, you will need to make sure you have the correct permissions for the entire path.2013/09/01 00:31:57 [error] 29231#0: *2115270 open() \"/usr/share/nginx/static/forbidden\" failed (13: Permission denied), client: 1.1.1.1, server: domain.com, request: \"GET /forbidden HTTP/1.1\", host: \"domain.com\"\nAs you see, the file that we are trying to access is /usr/share/nginx/static/forbidden. In order for Nginx to access it with no problems at all, Nginx must have read permissions for that specific file as well as execute for all the folders above it. This means that /, /usr, /usr/share, /usr/share/nginx and /usr/share/nginx/static must be executable by Nginx and the file /usr/share/nginx/static/forbidden must be readable by Nginx in this case.ConclusionWe’ve gone through quite a few tools such as tail and lsof. These are just one of the tools which are offered by Linux which allow system administrators to resolve and debug issues much faster and easier. The most important factor in resolving system issues is being able to identify the issue properly, resolution is usually the easiest part once the problem is identified. The larger the toolset of the system administrator, the faster they can identify and fix those problems."},{"id":6,"Title":"How To Install Ruby on Rails on Ubuntu","Slug":"resources/tutorials/how-to-install-ruby-on-rails-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Ruby on Rails, often simply Rails, is an open source web application framework which runs on the Ruby programming language. It is a full-stack framework: it allows creating pages and applications that gather information from the web server, talk to or query the database, and render templates out of the box. As a result, Rails features a routing system that is independent of the web server.</p><p style=\"margin-left:0px;\">Ruby on Rails emphasizes the use of well-known software engineering patterns and principles, such as active record pattern, convention over configuration (CoC), don’t repeat yourself (DRY), and model/view/controller (MVC).</p><p style=\"margin-left:0px;\">This article applies to all releases of Ubuntu so it should help you to install Ruby on Rails on Ubuntu 12.04 LTS, 13.10 and any future releases. The majority of articles regarding this subject are release specific and very long. We’ll keep this one short and simple!</p><h3>Update and Prepare System</h3><p style=\"margin-left:0px;\">It is important to make sure that your server is updated. On Ubuntu servers, you will need to run the following commands to update your repositories and your system. We’ll also need some basic requirements on your server.</p><pre><code class=\"language-plaintext\">$ apt-get update\n$ apt-get upgrade\n$ apt-get -y install curl\n</code></pre><h3>Install Ruby and Rails</h3><p style=\"margin-left:0px;\">We will be leveraging the <a href=\"http://rvm.io/\">RVM</a> project to help us install the latest Ruby release. When we will install RVM, we will tell it to compile and install the latest Ruby release and download Rails as well.</p><pre><code class=\"language-plaintext\">$ curl -sSL https://get.rvm.io | bash -s stable --rails\n</code></pre><p style=\"margin-left:0px;\">RVM will automatically download, install and compile the latest release of Ruby. Once it’s done with that process, it will install the latest release of rubygems which is required to install Rails. Afterwards, it downloads and installs Ruby on Rails on your server.</p><p style=\"margin-left:0px;\">You can now use Ruby on Rails by typing the rails command in your SSH shell, you will see output similar to the following:</p><pre><code class=\"language-plaintext\">$ rails\nUsage:\n  rails new APP_PATH [options]\n\nOptions:\n  -r, [--ruby=PATH]              # Path to the Ruby binary of your choice\n                                 # Default: /usr/local/rvm/rubies/ruby-2.1.0/bin/ruby\n  -m, [--template=TEMPLATE]      # Path to some application template (can be a filesystem path or URL)\n      [--skip-gemfile]           # Don't create a Gemfile\n  -B, [--skip-bundle]            # Don't run bundle install\n  -G, [--skip-git]               # Skip .gitignore file\n      [--skip-keeps]             # Skip source control .keep files\n  -O, [--skip-active-record]     # Skip Active Record files\n  -S, [--skip-sprockets]         # Skip Sprockets files\n  -d, [--database=DATABASE]      # Preconfigure for selected database (options: mysql/oracle/postgresql/sqlite3/frontbase/ibm_db/sqlserver/jdbcmysql/jdbcsqlite3/jdbcpostgresql/jdbc)\n                                 # Default: sqlite3\n  -j, [--javascript=JAVASCRIPT]  # Preconfigure for selected JavaScript library\n                                 # Default: jquery\n  -J, [--skip-javascript]        # Skip JavaScript files\n      [--dev]                    # Setup the application with Gemfile pointing to your Rails checkout\n      [--edge]                   # Setup the application with Gemfile pointing to Rails repository\n  -T, [--skip-test-unit]         # Skip Test::Unit files\n      [--rc=RC]                  # Path to file containing extra configuration options for rails command\n      [--no-rc]                  # Skip loading of extra configuration options from .railsrc file\n\nRuntime options:\n  -f, [--force]    # Overwrite files that already exist\n  -p, [--pretend]  # Run but do not make any changes\n  -q, [--quiet]    # Suppress status output\n  -s, [--skip]     # Skip files that already exist\n\nRails options:\n  -h, [--help]     # Show this help message and quit\n  -v, [--version]  # Show Rails version number and quit\n\nDescription:\n    The 'rails new' command creates a new Rails application with a default\n    directory structure and configuration at the path you specify.\n\n    You can specify extra command-line arguments to be used every time\n    'rails new' runs in the .railsrc configuration file in your home directory.\n\n    Note that the arguments specified in the .railsrc file don't affect the\n    defaults values shown above in this help message.\n\nExample:\n    rails new ~/Code/Ruby/weblog\n\n    This generates a skeletal Rails installation in ~/Code/Ruby/weblog.\n    See the README in the newly created application to get going.\n</code></pre><p style=\"margin-left:0px;\">Your Ubuntu machine now has the latest Ruby and Ruby on Rails installed on it without worrying about installing dependencies and complicated compilation processes, all it took was one short command!</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:02:21.629Z","created_at":"2021-03-30T04:02:14.439Z","updated_at":"2021-03-30T04:02:22.624Z","PostSEO":{"id":480,"GoogleSEO":{"id":471,"Title":"How To Install Ruby on Rails on Ubuntu - VEXXHOST","Description":"Ruby on Rails, often simply Rails, is an open source web application framework which runs on the Ruby programming language. It is a full-stack framework:"},"FacebookSEO":{"id":467,"Title":"How To Install Ruby on Rails on Ubuntu - VEXXHOST","Url":null,"Description":"Ruby on Rails, often simply Rails, is an open source web application framework which runs on the Ruby programming language. It is a full-stack framework:","SiteName":"VEXXHOST","Image":{"id":593,"name":"How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076861/small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"small_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":48.88,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076861/medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"medium_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":135.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076858/thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"thumbnail_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":12.07,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}}},"hash":"How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","ext":".png","mime":"image/png","size":77.7,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076858/How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"},"created_at":"2021-03-30T04:01:01.921Z","updated_at":"2021-03-30T04:01:02.212Z"}},"TwitterSEO":{"id":467,"Description":"Ruby on Rails, often simply Rails, is an open source web application framework which runs on the Ruby programming language. It is a full-stack framework:","Title":"How To Install Ruby on Rails on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":593,"name":"How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076861/small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"small_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":48.88,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076861/medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"medium_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":135.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076858/thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"thumbnail_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":12.07,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}}},"hash":"How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","ext":".png","mime":"image/png","size":77.7,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076858/How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"},"created_at":"2021-03-30T04:01:01.921Z","updated_at":"2021-03-30T04:01:02.212Z"}}},"LinkToResource":{"id":398,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":593,"name":"How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076861/small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"small_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":48.88,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076861/medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"medium_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":135.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076858/thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","hash":"thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","mime":"image/png","name":"thumbnail_How-To-Install-Ruby-on-Rails-on-Ubuntu-800x400.png","path":null,"size":12.07,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"}}},"hash":"How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","ext":".png","mime":"image/png","size":77.7,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617076858/How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Ruby_on_Rails_on_Ubuntu_800x400_825c6b33b9","resource_type":"image"},"created_at":"2021-03-30T04:01:01.921Z","updated_at":"2021-03-30T04:01:02.212Z"},"TextContent":"Ruby on Rails, often simply Rails, is an open source web application framework which runs on the Ruby programming language. It is a full-stack framework: it allows creating pages and applications that gather information from the web server, talk to or query the database, and render templates out of the box. As a result, Rails features a routing system that is independent of the web server.Ruby on Rails emphasizes the use of well-known software engineering patterns and principles, such as active record pattern, convention over configuration (CoC), don’t repeat yourself (DRY), and model/view/controller (MVC).This article applies to all releases of Ubuntu so it should help you to install Ruby on Rails on Ubuntu 12.04 LTS, 13.10 and any future releases. The majority of articles regarding this subject are release specific and very long. We’ll keep this one short and simple!Update and Prepare SystemIt is important to make sure that your server is updated. On Ubuntu servers, you will need to run the following commands to update your repositories and your system. We’ll also need some basic requirements on your server.$ apt-get update\n$ apt-get upgrade\n$ apt-get -y install curl\nInstall Ruby and RailsWe will be leveraging the RVM project to help us install the latest Ruby release. When we will install RVM, we will tell it to compile and install the latest Ruby release and download Rails as well.$ curl -sSL https://get.rvm.io | bash -s stable --rails\nRVM will automatically download, install and compile the latest release of Ruby. Once it’s done with that process, it will install the latest release of rubygems which is required to install Rails. Afterwards, it downloads and installs Ruby on Rails on your server.You can now use Ruby on Rails by typing the rails command in your SSH shell, you will see output similar to the following:$ rails\nUsage:\n  rails new APP_PATH [options]\n\nOptions:\n  -r, [--ruby=PATH]              # Path to the Ruby binary of your choice\n                                 # Default: /usr/local/rvm/rubies/ruby-2.1.0/bin/ruby\n  -m, [--template=TEMPLATE]      # Path to some application template (can be a filesystem path or URL)\n      [--skip-gemfile]           # Don't create a Gemfile\n  -B, [--skip-bundle]            # Don't run bundle install\n  -G, [--skip-git]               # Skip .gitignore file\n      [--skip-keeps]             # Skip source control .keep files\n  -O, [--skip-active-record]     # Skip Active Record files\n  -S, [--skip-sprockets]         # Skip Sprockets files\n  -d, [--database=DATABASE]      # Preconfigure for selected database (options: mysql/oracle/postgresql/sqlite3/frontbase/ibm_db/sqlserver/jdbcmysql/jdbcsqlite3/jdbcpostgresql/jdbc)\n                                 # Default: sqlite3\n  -j, [--javascript=JAVASCRIPT]  # Preconfigure for selected JavaScript library\n                                 # Default: jquery\n  -J, [--skip-javascript]        # Skip JavaScript files\n      [--dev]                    # Setup the application with Gemfile pointing to your Rails checkout\n      [--edge]                   # Setup the application with Gemfile pointing to Rails repository\n  -T, [--skip-test-unit]         # Skip Test::Unit files\n      [--rc=RC]                  # Path to file containing extra configuration options for rails command\n      [--no-rc]                  # Skip loading of extra configuration options from .railsrc file\n\nRuntime options:\n  -f, [--force]    # Overwrite files that already exist\n  -p, [--pretend]  # Run but do not make any changes\n  -q, [--quiet]    # Suppress status output\n  -s, [--skip]     # Skip files that already exist\n\nRails options:\n  -h, [--help]     # Show this help message and quit\n  -v, [--version]  # Show Rails version number and quit\n\nDescription:\n    The 'rails new' command creates a new Rails application with a default\n    directory structure and configuration at the path you specify.\n\n    You can specify extra command-line arguments to be used every time\n    'rails new' runs in the .railsrc configuration file in your home directory.\n\n    Note that the arguments specified in the .railsrc file don't affect the\n    defaults values shown above in this help message.\n\nExample:\n    rails new ~/Code/Ruby/weblog\n\n    This generates a skeletal Rails installation in ~/Code/Ruby/weblog.\n    See the README in the newly created application to get going.\nYour Ubuntu machine now has the latest Ruby and Ruby on Rails installed on it without worrying about installing dependencies and complicated compilation processes, all it took was one short command!"},{"id":8,"Title":"How to Install Git on Ubuntu","Slug":"resources/tutorials/how-to-install-git-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Git is an open source, distributed version control system. It’s all the rage right now with sites like GitHub offering a social coding experience, and popular projects such as Perl, Ruby on Rails, and the Linux kernel using it.</p><p style=\"margin-left:0px;\">The preferred way to install Git on Ubuntu is to use the packages which are distributed with your operating system. They are often very well tested and they are pre-compiled, removing the need for installing and compiling everything from source.</p><p style=\"margin-left:0px;\">We will start by updating the repositories on the server from the latest ones online, as well as upgrade the server if there are any old packages. This is good practice in general, you can do this by running the following command:</p><pre><code class=\"language-plaintext\"># apt-get update\n# apt-get upgrade\n</code></pre><p style=\"margin-left:0px;\">Once we’re done with that, we can go ahead and install Git with all of it’s requirements. The following command will ask for a confirmation before it installs everything, you can type y and press enter afterwards to start the installation:</p><pre><code class=\"language-plaintext\"># apt-get install git-core\n</code></pre><p style=\"margin-left:0px;\">Once this process is done, you should be ready to configure git. There are plenty of resources which explain how to do it, but you can start by doing the basic configuration by running the following command:</p><pre><code class=\"language-plaintext\"># git config --global user.name \"John Appleseed\"\n# git config --global user.email john@appleseed.com\n</code></pre><p style=\"margin-left:0px;\">You would replace the name and email above with your own information. You should now be ready to use Git on Ubuntu with no problems.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">A little bit more about us, VEXXHOST is a high performance cloud solutions that is secure &amp; reliable OpenStack based solutions for Developers &amp; Enterprises. Solutions to support your demanding requirements and workloads used by active customers in over 70 different countries.&nbsp;VEXXHOST was created in 2006 and opened it’s virtual doors as web hosting provider. VEXXHOST now offers Public, Private and Hybrid cloud all powered by OpenStack.</p><p style=\"margin-left:0px;\">If you are interested in reading more blog posts, you can always check out the VEXXHOST blog located on our website which includes many more interesting blogs and tutorials! If you have any questions concerning this blog or in general, feel free to communicate with us through our Contact Us page. One of our support team member will be more than happy to assist you and answer all your questions.</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for announcements, updates and news regarding VEXXHOST and cloud computing in general – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:07:36.922Z","created_at":"2021-03-30T04:07:32.219Z","updated_at":"2021-03-30T04:07:37.231Z","PostSEO":{"id":482,"GoogleSEO":{"id":473,"Title":"How to Install Git on Ubuntu - VEXXHOST","Description":"Git is an open source, distributed version control system. It’s all the rage right now with sites like GitHub offering a social coding experience, and"},"FacebookSEO":{"id":469,"Title":"How to Install Git on Ubuntu - VEXXHOST","Url":null,"Description":"Git is an open source, distributed version control system. It’s all the rage right now with sites like GitHub offering a social coding experience, and","SiteName":"VEXXHOST","Image":{"id":595,"name":"How-to-Install-Git-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077050/small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"small_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":47.7,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077050/medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"medium_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":145.61,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077046/thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"thumbnail_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":8.69,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}}},"hash":"How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","ext":".png","mime":"image/png","size":69.17,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077045/How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"},"created_at":"2021-03-30T04:04:11.235Z","updated_at":"2021-03-30T04:04:11.323Z"}},"TwitterSEO":{"id":469,"Description":"Git is an open source, distributed version control system. It’s all the rage right now with sites like GitHub offering a social coding experience, and","Title":"How to Install Git on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":595,"name":"How-to-Install-Git-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077050/small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"small_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":47.7,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077050/medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"medium_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":145.61,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077046/thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"thumbnail_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":8.69,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}}},"hash":"How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","ext":".png","mime":"image/png","size":69.17,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077045/How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"},"created_at":"2021-03-30T04:04:11.235Z","updated_at":"2021-03-30T04:04:11.323Z"}}},"LinkToResource":{"id":400,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":595,"name":"How-to-Install-Git-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077050/small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"small_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":47.7,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077050/medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"medium_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":145.61,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077046/thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","hash":"thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","mime":"image/png","name":"thumbnail_How-to-Install-Git-on-Ubuntu-800x400.png","path":null,"size":8.69,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"}}},"hash":"How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","ext":".png","mime":"image/png","size":69.17,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077045/How_to_Install_Git_on_Ubuntu_800x400_8193bbd323.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Install_Git_on_Ubuntu_800x400_8193bbd323","resource_type":"image"},"created_at":"2021-03-30T04:04:11.235Z","updated_at":"2021-03-30T04:04:11.323Z"},"TextContent":"Git is an open source, distributed version control system. It’s all the rage right now with sites like GitHub offering a social coding experience, and popular projects such as Perl, Ruby on Rails, and the Linux kernel using it.The preferred way to install Git on Ubuntu is to use the packages which are distributed with your operating system. They are often very well tested and they are pre-compiled, removing the need for installing and compiling everything from source.We will start by updating the repositories on the server from the latest ones online, as well as upgrade the server if there are any old packages. This is good practice in general, you can do this by running the following command:# apt-get update\n# apt-get upgrade\nOnce we’re done with that, we can go ahead and install Git with all of it’s requirements. The following command will ask for a confirmation before it installs everything, you can type y and press enter afterwards to start the installation:# apt-get install git-core\nOnce this process is done, you should be ready to configure git. There are plenty of resources which explain how to do it, but you can start by doing the basic configuration by running the following command:# git config --global user.name \"John Appleseed\"\n# git config --global user.email john@appleseed.com\nYou would replace the name and email above with your own information. You should now be ready to use Git on Ubuntu with no problems. A little bit more about us, VEXXHOST is a high performance cloud solutions that is secure & reliable OpenStack based solutions for Developers & Enterprises. Solutions to support your demanding requirements and workloads used by active customers in over 70 different countries. VEXXHOST was created in 2006 and opened it’s virtual doors as web hosting provider. VEXXHOST now offers Public, Private and Hybrid cloud all powered by OpenStack.If you are interested in reading more blog posts, you can always check out the VEXXHOST blog located on our website which includes many more interesting blogs and tutorials! If you have any questions concerning this blog or in general, feel free to communicate with us through our Contact Us page. One of our support team member will be more than happy to assist you and answer all your questions.Don’t forget to follow us on Twitter for announcements, updates and news regarding VEXXHOST and cloud computing in general – @vexxhost."},{"id":9,"Title":"How To Setup SSH Keys","Slug":"resources/tutorials/how-to-setup-ssh-keys","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">SSH keys are by far the most secure way of logging into your cloud server via SSH. Passwords can be eventually cracked using brute-force attacks if they are too easy. If they are complex passwords, they become very hard to remember and writing them down defeats the purpose of a password.</p><p style=\"margin-left:0px;\">SSH keys are nearly impossible to decipher using a brute force attack. If you generate an SSH key, you will get a pair of two very long string of characters: a public and private key.</p><p style=\"margin-left:0px;\">Public keys are stored on the server that you’re trying to login to, the only possible tool which could unlock this public key is the private key which will be stored with you. SSH uses this to verify your identity by making sure that your private key can unlock the public key installed on the server.</p><h2 style=\"margin-left:0px;\">Create the SSH key pairs</h2><p style=\"margin-left:0px;\">The first step is to generate the combination of the public and private key. This can easily be done by opening a terminal window on the machine you will be using to access the remote server (most likely your own workstation).</p><p style=\"margin-left:0px;\">In this example, we will be using RSA keys. The default values should be the correct ones, so you can simply just press enter to accept the default values. However, you may choose to add a passphrase for additional protection.</p><p style=\"margin-left:0px;\">The passphrase is a password which unlocks your private key, which means that in order for someone to gain access, they must have both the private key and your passphrase. You can opt to not using a passphrase if you do not want to type a password each time.</p><pre><code class=\"language-plaintext\">$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/user/.ssh/id_rsa): test\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /Users/user/.ssh/id_rsa.\nYour public key has been saved in /Users/user/.ssh/id_rsa.pub.\n</code></pre><p style=\"margin-left:0px;\">As you see by the results of the command, we now have an id_rsa and id_rsa.pub file which contain your private and public key respectively. We can now distribute this public key to servers where we would like to use public key authentication.</p><h2 style=\"margin-left:0px;\">Installing Public Key</h2><p style=\"margin-left:0px;\">The SSH software stack comes with a useful little program called ssh-copy-id which facilitates the installation of SSH keys on your target server. All you have to do is run the following, replacing user and host by the appropriate information for your remote host.</p><pre><code class=\"language-plaintext\">$ ssh-copy-id user@host\n</code></pre><p style=\"margin-left:0px;\">If your operating system does not have that command included, you can run the following command instead. If you get an error about your .ssh folder not existing, you should login to your server and create that folder by running mkdir ~/.ssh.</p><pre><code class=\"language-plaintext\">$ cat /Users/user/.ssh/id_rsa.pub | ssh user@host \"cat &gt;&gt; ~/.ssh/authorized_keys\"\n</code></pre><p style=\"margin-left:0px;\">From now on, you can SSH to the server and you will note that your server will not ask for any passwords at all. The only thing it may ask for is your passphrase if you have configured one for your private key.</p><p style=\"margin-left:0px;\">For our cloud compute customers, we offer the option of adding key pairs in our cloud system (you can upload your public key) and select the key pair when creating your server. It will automatically be added to your server, so that you can login to it right away with no passwords and there is no need to go through any of this process.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:08:55.831Z","created_at":"2021-03-30T04:08:51.412Z","updated_at":"2021-03-30T04:08:56.122Z","PostSEO":{"id":483,"GoogleSEO":{"id":474,"Title":"How To Setup SSH Keys - VEXXHOST","Description":"SSH keys are by far the most secure way of logging into your cloud server via SSH. Passwords can be eventually cracked using brute-force attacks if they"},"FacebookSEO":{"id":470,"Title":"How To Setup SSH Keys - VEXXHOST","Url":null,"Description":"SSH keys are by far the most secure way of logging into your cloud server via SSH. Passwords can be eventually cracked using brute-force attacks if they","SiteName":"VEXXHOST","Image":{"id":596,"name":"How-To-Setup-SSH-Keys-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077280/small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"small_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":27.93,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077279/medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"medium_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":78.37,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077277/thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"thumbnail_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":7.07,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}}},"hash":"How_To_Setup_SSH_Keys_800x400_5d9527cd6a","ext":".png","mime":"image/png","size":44.78,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077276/How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"},"created_at":"2021-03-30T04:08:00.465Z","updated_at":"2021-03-30T04:08:00.519Z"}},"TwitterSEO":{"id":470,"Description":"SSH keys are by far the most secure way of logging into your cloud server via SSH. Passwords can be eventually cracked using brute-force attacks if they","Title":"How To Setup SSH Keys - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":596,"name":"How-To-Setup-SSH-Keys-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077280/small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"small_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":27.93,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077279/medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"medium_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":78.37,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077277/thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"thumbnail_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":7.07,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}}},"hash":"How_To_Setup_SSH_Keys_800x400_5d9527cd6a","ext":".png","mime":"image/png","size":44.78,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077276/How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"},"created_at":"2021-03-30T04:08:00.465Z","updated_at":"2021-03-30T04:08:00.519Z"}}},"LinkToResource":{"id":401,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":596,"name":"How-To-Setup-SSH-Keys-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077280/small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"small_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":27.93,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077279/medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"medium_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":78.37,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077277/thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","hash":"thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","mime":"image/png","name":"thumbnail_How-To-Setup-SSH-Keys-800x400.png","path":null,"size":7.07,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"}}},"hash":"How_To_Setup_SSH_Keys_800x400_5d9527cd6a","ext":".png","mime":"image/png","size":44.78,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077276/How_To_Setup_SSH_Keys_800x400_5d9527cd6a.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_SSH_Keys_800x400_5d9527cd6a","resource_type":"image"},"created_at":"2021-03-30T04:08:00.465Z","updated_at":"2021-03-30T04:08:00.519Z"},"TextContent":"SSH keys are by far the most secure way of logging into your cloud server via SSH. Passwords can be eventually cracked using brute-force attacks if they are too easy. If they are complex passwords, they become very hard to remember and writing them down defeats the purpose of a password.SSH keys are nearly impossible to decipher using a brute force attack. If you generate an SSH key, you will get a pair of two very long string of characters: a public and private key.Public keys are stored on the server that you’re trying to login to, the only possible tool which could unlock this public key is the private key which will be stored with you. SSH uses this to verify your identity by making sure that your private key can unlock the public key installed on the server.Create the SSH key pairsThe first step is to generate the combination of the public and private key. This can easily be done by opening a terminal window on the machine you will be using to access the remote server (most likely your own workstation).In this example, we will be using RSA keys. The default values should be the correct ones, so you can simply just press enter to accept the default values. However, you may choose to add a passphrase for additional protection.The passphrase is a password which unlocks your private key, which means that in order for someone to gain access, they must have both the private key and your passphrase. You can opt to not using a passphrase if you do not want to type a password each time.$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/user/.ssh/id_rsa): test\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /Users/user/.ssh/id_rsa.\nYour public key has been saved in /Users/user/.ssh/id_rsa.pub.\nAs you see by the results of the command, we now have an id_rsa and id_rsa.pub file which contain your private and public key respectively. We can now distribute this public key to servers where we would like to use public key authentication.Installing Public KeyThe SSH software stack comes with a useful little program called ssh-copy-id which facilitates the installation of SSH keys on your target server. All you have to do is run the following, replacing user and host by the appropriate information for your remote host.$ ssh-copy-id user@host\nIf your operating system does not have that command included, you can run the following command instead. If you get an error about your .ssh folder not existing, you should login to your server and create that folder by running mkdir ~/.ssh.$ cat /Users/user/.ssh/id_rsa.pub | ssh user@host \"cat >> ~/.ssh/authorized_keys\"\nFrom now on, you can SSH to the server and you will note that your server will not ask for any passwords at all. The only thing it may ask for is your passphrase if you have configured one for your private key.For our cloud compute customers, we offer the option of adding key pairs in our cloud system (you can upload your public key) and select the key pair when creating your server. It will automatically be added to your server, so that you can login to it right away with no passwords and there is no need to go through any of this process."},{"id":10,"Title":"How To Setup VNC For Ubuntu","Slug":"resources/tutorials/how-to-setup-vnc-for-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">In computing, Virtual Network Computing (VNC) is a graphical desktop sharing system which transmits the keyboard and mouse events from one computer to another, relaying the graphical screen updates back in the other direction, over a network. In simpler terms, it allows you to remotely access a remote server screen on your own (similar to Microsoft Remote Desktop).</p><p style=\"margin-left:0px;\">This tutorial assumes that you have some basic VNC knowledge and that you have an Ubuntu server running with SSH access. You will also need to have a VNC client installed on your server, we recommend <a href=\"http://sourceforge.net/apps/mediawiki/tigervnc/index.php?title=Welcome_to_TigerVNC\">TigerVNC</a>.</p><h2 style=\"margin-left:0px;\">Install GNOME &amp; VNC</h2><p style=\"margin-left:0px;\">GNOME is an open-source project which is developed by volunteers and paid contributors. It provides the graphics user interface (GUI) of many of the Linux operating systems, including Ubuntu, RedHat &amp; CentOS. Once we make sure that our repositories is up-to-date, we’ll start installing GNOME using apt-get.</p><pre><code class=\"language-plaintext\"># apt-get update\n# apt-get install gnome-core gnome-session-fallback\n</code></pre><p style=\"margin-left:0px;\">This installation is going to take quite sometime as it may download up to 1 gigabyte of packages and install them on your machine. Once this process is done, you can move on the installation of the VNC server:</p><pre><code class=\"language-plaintext\"># apt-get install vnc4server\n</code></pre><h2 style=\"margin-left:0px;\">Configure VNC</h2><p style=\"margin-left:0px;\">The first and most important thing you’ll need to setup is your VNC password. It’s important to have a secure password for your VNC because if someone guesses it, they can access your desktop. You can setup your VNC password by running the following command:</p><pre><code class=\"language-plaintext\"># vncpasswd\n</code></pre><p style=\"margin-left:0px;\">We’ve put up a pre-made ready to use .vnc/xstartup as a Gist on GitHub so you can use that existing file right away. You can download it using the following steps:</p><pre><code class=\"language-plaintext\"># wget https://gist.github.com/mnaser/8311130/raw/a31b910b5de71c439bb757585733314ee3c7ef15/xstartup -O ~/.vnc/xstartup\n# chmod 755 ~/.vnc/xstartup\n</code></pre><h2 style=\"margin-left:0px;\">Start VNC server</h2><p style=\"margin-left:0px;\">The next step is pretty straight-forward, all we need to do is start the VNC server. You can change the resolution or the colour depth to reduce bandwidth if that is something you need. You can do this by running the following command:</p><pre><code class=\"language-plaintext\"># vncserver -geometry 1024x768 -depth 24 :0\n</code></pre><p style=\"margin-left:0px;\">You should now be able to start TigerVNC, put in the IP address of your server in the VNC server field and hit connect. It will request for the password, make sure to enter the password you setup earlier there. From there, you will be connected to your desktop. It should look something like the following:</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Now, the only small thing left is to make sure that the VNC server start automatically so that if you reboot your server, you don’t have to login and start it again. We can leverage the rc.local file which runs on system boot-up to do this.</p><pre><code class=\"language-plaintext\"># cat \"/usr/bin/vncserver -geometry 1024x768 -depth 24 :0\" &gt;&gt; /etc/rc.local\n</code></pre><p style=\"margin-left:0px;\">Once you’ve done that, you can confirm that it starts up automatically by trying to restart your machine and you should be able to access VNC with no problems at all. With VNC, you’ll easily be able to have full GUI access and use your Linux server without dealing with a harder to use command line interface.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:10:22.224Z","created_at":"2021-03-30T04:10:17.924Z","updated_at":"2021-03-30T04:10:23.212Z","PostSEO":{"id":484,"GoogleSEO":{"id":475,"Title":"How To Setup VNC For Ubuntu - VEXXHOST","Description":"In computing, Virtual Network Computing (VNC) is a graphical desktop sharing system which transmits the keyboard and mouse events from one computer to"},"FacebookSEO":{"id":471,"Title":"How To Setup VNC For Ubuntu - VEXXHOST","Url":null,"Description":"In computing, Virtual Network Computing (VNC) is a graphical desktop sharing system which transmits the keyboard and mouse events from one computer to","SiteName":"VEXXHOST","Image":{"id":597,"name":"How-To-Setup-VNC-For-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077361/small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"small_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":45.07,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077360/medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"medium_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":135.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077357/thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"thumbnail_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":8.05,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}}},"hash":"How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","ext":".png","mime":"image/png","size":66.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077356/How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"},"created_at":"2021-03-30T04:09:21.890Z","updated_at":"2021-03-30T04:09:22.008Z"}},"TwitterSEO":{"id":471,"Description":"In computing, Virtual Network Computing (VNC) is a graphical desktop sharing system which transmits the keyboard and mouse events from one computer to","Title":"How To Setup VNC For Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":597,"name":"How-To-Setup-VNC-For-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077361/small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"small_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":45.07,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077360/medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"medium_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":135.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077357/thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"thumbnail_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":8.05,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}}},"hash":"How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","ext":".png","mime":"image/png","size":66.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077356/How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"},"created_at":"2021-03-30T04:09:21.890Z","updated_at":"2021-03-30T04:09:22.008Z"}}},"LinkToResource":{"id":402,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":597,"name":"How-To-Setup-VNC-For-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077361/small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"small_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":45.07,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077360/medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"medium_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":135.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077357/thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","hash":"thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","mime":"image/png","name":"thumbnail_How-To-Setup-VNC-For-Ubuntu-800x400.png","path":null,"size":8.05,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"}}},"hash":"How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","ext":".png","mime":"image/png","size":66.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077356/How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_VNC_For_Ubuntu_800x400_93f03949cb","resource_type":"image"},"created_at":"2021-03-30T04:09:21.890Z","updated_at":"2021-03-30T04:09:22.008Z"},"TextContent":"In computing, Virtual Network Computing (VNC) is a graphical desktop sharing system which transmits the keyboard and mouse events from one computer to another, relaying the graphical screen updates back in the other direction, over a network. In simpler terms, it allows you to remotely access a remote server screen on your own (similar to Microsoft Remote Desktop).This tutorial assumes that you have some basic VNC knowledge and that you have an Ubuntu server running with SSH access. You will also need to have a VNC client installed on your server, we recommend TigerVNC.Install GNOME & VNCGNOME is an open-source project which is developed by volunteers and paid contributors. It provides the graphics user interface (GUI) of many of the Linux operating systems, including Ubuntu, RedHat & CentOS. Once we make sure that our repositories is up-to-date, we’ll start installing GNOME using apt-get.# apt-get update\n# apt-get install gnome-core gnome-session-fallback\nThis installation is going to take quite sometime as it may download up to 1 gigabyte of packages and install them on your machine. Once this process is done, you can move on the installation of the VNC server:# apt-get install vnc4server\nConfigure VNCThe first and most important thing you’ll need to setup is your VNC password. It’s important to have a secure password for your VNC because if someone guesses it, they can access your desktop. You can setup your VNC password by running the following command:# vncpasswd\nWe’ve put up a pre-made ready to use .vnc/xstartup as a Gist on GitHub so you can use that existing file right away. You can download it using the following steps:# wget https://gist.github.com/mnaser/8311130/raw/a31b910b5de71c439bb757585733314ee3c7ef15/xstartup -O ~/.vnc/xstartup\n# chmod 755 ~/.vnc/xstartup\nStart VNC serverThe next step is pretty straight-forward, all we need to do is start the VNC server. You can change the resolution or the colour depth to reduce bandwidth if that is something you need. You can do this by running the following command:# vncserver -geometry 1024x768 -depth 24 :0\nYou should now be able to start TigerVNC, put in the IP address of your server in the VNC server field and hit connect. It will request for the password, make sure to enter the password you setup earlier there. From there, you will be connected to your desktop. It should look something like the following: Now, the only small thing left is to make sure that the VNC server start automatically so that if you reboot your server, you don’t have to login and start it again. We can leverage the rc.local file which runs on system boot-up to do this.# cat \"/usr/bin/vncserver -geometry 1024x768 -depth 24 :0\" >> /etc/rc.local\nOnce you’ve done that, you can confirm that it starts up automatically by trying to restart your machine and you should be able to access VNC with no problems at all. With VNC, you’ll easily be able to have full GUI access and use your Linux server without dealing with a harder to use command line interface."},{"id":11,"Title":"How To Install and Setup Postfix on Ubuntu","Slug":"resources/tutorials/how-to-install-and-setup-postfix-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Postfix is one of the most popular Mail Transfer agent nowadays. It comes as free and open source software package. Recent studies have showed that at least 25% of the mail servers on internet are using Postfix.</p><p style=\"margin-left:0px;\">In order to provide best functionality and avoid getting your email server on a lot of spam lists , the first thing we need to do is to assign Fully Qualified Domain Name to your server and set the appropriate DNS records to point to it. Since we are installing email server, it is important to configure MX records on our DNS provider and point to our server.</p><p style=\"margin-left:0px;\">There are many ways to install postfix, a) we can download its source code, compile and install, b) we can get pre-compiled .deb file for our operating system, or c) we can do it the easiest way using apt-get (recommended).</p><h3>Prepare System</h3><p style=\"margin-left:0px;\">We need to make sure that our repositories and our operating system are up-to-date before proceeding with the install. There is no harm by running this commands (in fact it is recommended to keep your system up-to-date all the time, so you can execute these command every day if you like):</p><pre><code class=\"language-plaintext\"># apt-get update\n# apt-get upgrade\n</code></pre><h3>Install Postfix</h3><p style=\"margin-left:0px;\">The next thing we need to do is to install postfix by executing:</p><pre><code class=\"language-plaintext\"># apt-get install postfix\n</code></pre><p style=\"margin-left:0px;\">In the older Ubuntu releases, postfix is installed without need of user’s interaction. However, if you are using one of the latest releases, during installation we will be asked which installation type we would prefer. In this dialog, we will select “Internet site” and enter the domain name for our server. After we do that, postfix is installed but we still need to make some configuration changes before we can start using our new email server.</p><h3>Configure Postfix</h3><p style=\"margin-left:0px;\">By default, Postfix configuration files are located in /etc/postfix. The most important files are main.cf and master.cf. You don’t need to edit master.cf file (unless you are a postfix guru and feel very confident doing it). All configuration that we need to change is in main.cf file. Use your favorite text editor to open and edit /etc/postfix/main.cf file and make sure you set the following variables:</p><pre><code class=\"language-plaintext\">myhostname = your.domain.com\n</code></pre><p style=\"margin-left:0px;\">This variable defines who can use the server to send out emails. Make sure that it looks like in the example, which means only the server itself is allowed to send emails. If we open our server to the world without having additional authentication system installed, we will be identified as spammers within a few days.</p><pre><code class=\"language-plaintext\">mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128\n</code></pre><p style=\"margin-left:0px;\">We can use postfix to serve emails for more than one domain. If that is the case, the domains should be listed here, separated by commas:</p><pre><code class=\"language-plaintext\">mydestination = example1.com, example2.com\n</code></pre><p style=\"margin-left:0px;\">For more information regarding all postfix variables which can be configured, you can refer to the <a href=\"http://www.postfix.org/BASIC_CONFIGURATION_README.html\">postfix documentation</a>.</p><p style=\"margin-left:0px;\">After we set this variables we need to apply the configuration, simply by reloading the postfix daemon:</p><pre><code class=\"language-plaintext\"># service postfix reload\n</code></pre><p style=\"margin-left:0px;\">Once this command is executed, postfix is ready to send and receive emails. However, if we want to be able to use our favorite email client to download our messages we must install POP3 or IMAP server. Dovecot would be a good choice for that, since it is also open source and very popular.</p><h3>Testing Postfix</h3><p style=\"margin-left:0px;\">In order to test if postfix is up and running we can run the following command, you should see output similar to the one below:</p><pre><code class=\"language-plaintext\"># telnet 127.0.0.1 25\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\n220 localhost.localdomain ESMTP Postfix (Ubuntu)\n</code></pre><p style=\"margin-left:0px;\">If you see that, you have successfully setup Postfix on your Ubuntu server and you can now use it as your mail transfer agent (MTA). Be sure to follow us on social networks for the follow up of this article to setup Dovecot.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:11:39.622Z","created_at":"2021-03-30T04:11:36.549Z","updated_at":"2021-03-30T04:11:40.214Z","PostSEO":{"id":485,"GoogleSEO":{"id":476,"Title":"How To Install and Setup Postfix on Ubuntu - VEXXHOST","Description":"Postfix is one of the most popular Mail Transfer agent nowadays. It comes as free and open source software package. Recent studies have showed that at"},"FacebookSEO":{"id":472,"Title":"How To Install and Setup Postfix on Ubuntu - VEXXHOST","Url":null,"Description":"Postfix is one of the most popular Mail Transfer agent nowadays. It comes as free and open source software package. Recent studies have showed that at","SiteName":"VEXXHOST","Image":{"id":598,"name":"How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077443/small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"small_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":77.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077442/medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"medium_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":178.61,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077440/thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"thumbnail_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":23.87,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}}},"hash":"How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","ext":".png","mime":"image/png","size":142.42,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077440/How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"},"created_at":"2021-03-30T04:10:43.851Z","updated_at":"2021-03-30T04:10:43.857Z"}},"TwitterSEO":{"id":472,"Description":"Postfix is one of the most popular Mail Transfer agent nowadays. It comes as free and open source software package. Recent studies have showed that at","Title":"How To Install and Setup Postfix on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":598,"name":"How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077443/small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"small_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":77.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077442/medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"medium_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":178.61,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077440/thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"thumbnail_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":23.87,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}}},"hash":"How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","ext":".png","mime":"image/png","size":142.42,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077440/How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"},"created_at":"2021-03-30T04:10:43.851Z","updated_at":"2021-03-30T04:10:43.857Z"}}},"LinkToResource":{"id":403,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":598,"name":"How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077443/small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"small_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":77.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077442/medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"medium_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":178.61,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077440/thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","hash":"thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","mime":"image/png","name":"thumbnail_How-To-Install-and-Setup-Postfix-on-Ubuntu-800x400.png","path":null,"size":23.87,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"}}},"hash":"How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","ext":".png","mime":"image/png","size":142.42,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077440/How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Setup_Postfix_on_Ubuntu_800x400_5242822713","resource_type":"image"},"created_at":"2021-03-30T04:10:43.851Z","updated_at":"2021-03-30T04:10:43.857Z"},"TextContent":"Postfix is one of the most popular Mail Transfer agent nowadays. It comes as free and open source software package. Recent studies have showed that at least 25% of the mail servers on internet are using Postfix.In order to provide best functionality and avoid getting your email server on a lot of spam lists , the first thing we need to do is to assign Fully Qualified Domain Name to your server and set the appropriate DNS records to point to it. Since we are installing email server, it is important to configure MX records on our DNS provider and point to our server.There are many ways to install postfix, a) we can download its source code, compile and install, b) we can get pre-compiled .deb file for our operating system, or c) we can do it the easiest way using apt-get (recommended).Prepare SystemWe need to make sure that our repositories and our operating system are up-to-date before proceeding with the install. There is no harm by running this commands (in fact it is recommended to keep your system up-to-date all the time, so you can execute these command every day if you like):# apt-get update\n# apt-get upgrade\nInstall PostfixThe next thing we need to do is to install postfix by executing:# apt-get install postfix\nIn the older Ubuntu releases, postfix is installed without need of user’s interaction. However, if you are using one of the latest releases, during installation we will be asked which installation type we would prefer. In this dialog, we will select “Internet site” and enter the domain name for our server. After we do that, postfix is installed but we still need to make some configuration changes before we can start using our new email server.Configure PostfixBy default, Postfix configuration files are located in /etc/postfix. The most important files are main.cf and master.cf. You don’t need to edit master.cf file (unless you are a postfix guru and feel very confident doing it). All configuration that we need to change is in main.cf file. Use your favorite text editor to open and edit /etc/postfix/main.cf file and make sure you set the following variables:myhostname = your.domain.com\nThis variable defines who can use the server to send out emails. Make sure that it looks like in the example, which means only the server itself is allowed to send emails. If we open our server to the world without having additional authentication system installed, we will be identified as spammers within a few days.mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128\nWe can use postfix to serve emails for more than one domain. If that is the case, the domains should be listed here, separated by commas:mydestination = example1.com, example2.com\nFor more information regarding all postfix variables which can be configured, you can refer to the postfix documentation.After we set this variables we need to apply the configuration, simply by reloading the postfix daemon:# service postfix reload\nOnce this command is executed, postfix is ready to send and receive emails. However, if we want to be able to use our favorite email client to download our messages we must install POP3 or IMAP server. Dovecot would be a good choice for that, since it is also open source and very popular.Testing PostfixIn order to test if postfix is up and running we can run the following command, you should see output similar to the one below:# telnet 127.0.0.1 25\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\n220 localhost.localdomain ESMTP Postfix (Ubuntu)\nIf you see that, you have successfully setup Postfix on your Ubuntu server and you can now use it as your mail transfer agent (MTA). Be sure to follow us on social networks for the follow up of this article to setup Dovecot."},{"id":12,"Title":"How to add extra swap space on CentOS 6","Slug":"resources/tutorials/how-to-add-extra-swap-space-on-centos-6","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">In CentOS 6 swap space or simply swap is something that is used by the operating system when the system requires more memory that the physical memory installed on the server. In that case, the operating system is using parts from the hard drives as if they were physical memory.</p><p style=\"margin-left:0px;\">This sounds very good, but the only downside of this is that the hard drives are significantly slower than the RAM memory, so this will decrease the server performance in general. However, having enough memory available is very important for our server to be stable and run smooth so we should always have swap space available on our Linux server.</p><p style=\"margin-left:0px;\">In some situation, is better to have the server running slow for short period, then to have the server down because it is out of memory. The server will always use the physical memory first and access the swap space only when there is not free physical memory left.</p><p style=\"margin-left:0px;\">Before we add more SWAP space, we need to create the swap file. We will use the dd command to create the swap file. dd is built in command in CentOS whose primary purpose is to convert and copy a file .</p><p style=\"margin-left:0px;\">In this case if (input file) is /dev/zero and of (output file) is the destination where we want to save the file. Basically, we are going to create 1GB file that will consist of zeros only and use that as a swap later.</p><pre><code class=\"language-plaintext\"># dd if=/dev/zero of=/swapfile bs=1M count=1024\n</code></pre><p style=\"margin-left:0px;\">Next, we need to set up file so it is can be used as swap space. We will use mkswap command for that:</p><pre><code class=\"language-plaintext\"># mkswap /swapfile\n</code></pre><p style=\"margin-left:0px;\">The swap file must be owned by root and have proper permissions:</p><pre><code class=\"language-plaintext\">#chown root:root /swapfile\n#chmod 0600 /swapfile\n</code></pre><p style=\"margin-left:0px;\">Once this is done, the only thing left is to activate and start using the swap space.</p><pre><code class=\"language-plaintext\"># swapon /swapfile\n</code></pre><p style=\"margin-left:0px;\">That’s it. We got another 1GB of swap space. If we wont to keep the space active after system reboot, we need to add an entry into /etc/fstab file. Open /etc/fstab file using your favorite text editor and add the following entry:</p><pre><code class=\"language-plaintext\">/swapfile swap swap defaults 0 0\n</code></pre><p style=\"margin-left:0px;\">Save and close the file. Next time Linux comes up after reboot, it enables the new swap file for you automatically.</p><p style=\"margin-left:0px;\">We can verify that the swap was added by executing the command, the output should look like the following:</p><pre><code class=\"language-plaintext\"># free -m\n             total       used       free     shared    buffers     cached\nMem:          2026        990       1036          0        129        620\n-/+ buffers/cache:        240       1786\nSwap:         1024          0       1024\n</code></pre><p style=\"margin-left:0px;\">In order to determine how often swap file is used (compared to the RAM usage) system uses system property that is called swappiness. Swappiness is a property of the Linux kernel that changes the balance between swapping out runtime memory, as opposed to dropping pages from the system page cache. Swappiness can be set to values between 0 and 100 inclusive.</p><p style=\"margin-left:0px;\">A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space. The default value is 60. We can set the swappiness with the following command:</p><pre><code class=\"language-plaintext\">sysctl vm.swappiness=10\n</code></pre><p style=\"margin-left:0px;\">Now you have swap file on your system, which means you have more memory for the system to work with. This will make your system more stable at the cost of HDD space used by the swap file. Seems like a good deal.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:13:04.127Z","created_at":"2021-03-30T04:12:58.326Z","updated_at":"2021-03-30T04:13:04.426Z","PostSEO":{"id":486,"GoogleSEO":{"id":477,"Title":"How to add extra swap space on CentOS 6 - VEXXHOST","Description":"In CentOS 6 swap space or simply swap is something that is used by the operating system when the system requires more memory that the physical memory"},"FacebookSEO":{"id":473,"Title":"How to add extra swap space on CentOS 6 - VEXXHOST","Url":null,"Description":"In CentOS 6 swap space or simply swap is something that is used by the operating system when the system requires more memory that the physical memory","SiteName":"VEXXHOST","Image":{"id":599,"name":"How-to-add-extra-swap-space-on-CentOS-6-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077524/small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"small_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":184.47,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077524/medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"medium_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":414.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077522/thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"thumbnail_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":47.4,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}}},"hash":"How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","ext":".png","mime":"image/png","size":389.3,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077521/How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"},"created_at":"2021-03-30T04:12:05.120Z","updated_at":"2021-03-30T04:12:05.131Z"}},"TwitterSEO":{"id":473,"Description":"In CentOS 6 swap space or simply swap is something that is used by the operating system when the system requires more memory that the physical memory","Title":"How to add extra swap space on CentOS 6 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":599,"name":"How-to-add-extra-swap-space-on-CentOS-6-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077524/small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"small_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":184.47,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077524/medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"medium_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":414.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077522/thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"thumbnail_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":47.4,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}}},"hash":"How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","ext":".png","mime":"image/png","size":389.3,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077521/How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"},"created_at":"2021-03-30T04:12:05.120Z","updated_at":"2021-03-30T04:12:05.131Z"}}},"LinkToResource":{"id":404,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":599,"name":"How-to-add-extra-swap-space-on-CentOS-6-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077524/small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"small_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":184.47,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077524/medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"medium_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":414.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077522/thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","hash":"thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","mime":"image/png","name":"thumbnail_How-to-add-extra-swap-space-on-CentOS-6-800x400.png","path":null,"size":47.4,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"}}},"hash":"How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","ext":".png","mime":"image/png","size":389.3,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077521/How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_add_extra_swap_space_on_Cent_OS_6_800x400_2d982f1e34","resource_type":"image"},"created_at":"2021-03-30T04:12:05.120Z","updated_at":"2021-03-30T04:12:05.131Z"},"TextContent":"In CentOS 6 swap space or simply swap is something that is used by the operating system when the system requires more memory that the physical memory installed on the server. In that case, the operating system is using parts from the hard drives as if they were physical memory.This sounds very good, but the only downside of this is that the hard drives are significantly slower than the RAM memory, so this will decrease the server performance in general. However, having enough memory available is very important for our server to be stable and run smooth so we should always have swap space available on our Linux server.In some situation, is better to have the server running slow for short period, then to have the server down because it is out of memory. The server will always use the physical memory first and access the swap space only when there is not free physical memory left.Before we add more SWAP space, we need to create the swap file. We will use the dd command to create the swap file. dd is built in command in CentOS whose primary purpose is to convert and copy a file .In this case if (input file) is /dev/zero and of (output file) is the destination where we want to save the file. Basically, we are going to create 1GB file that will consist of zeros only and use that as a swap later.# dd if=/dev/zero of=/swapfile bs=1M count=1024\nNext, we need to set up file so it is can be used as swap space. We will use mkswap command for that:# mkswap /swapfile\nThe swap file must be owned by root and have proper permissions:#chown root:root /swapfile\n#chmod 0600 /swapfile\nOnce this is done, the only thing left is to activate and start using the swap space.# swapon /swapfile\nThat’s it. We got another 1GB of swap space. If we wont to keep the space active after system reboot, we need to add an entry into /etc/fstab file. Open /etc/fstab file using your favorite text editor and add the following entry:/swapfile swap swap defaults 0 0\nSave and close the file. Next time Linux comes up after reboot, it enables the new swap file for you automatically.We can verify that the swap was added by executing the command, the output should look like the following:# free -m\n             total       used       free     shared    buffers     cached\nMem:          2026        990       1036          0        129        620\n-/+ buffers/cache:        240       1786\nSwap:         1024          0       1024\nIn order to determine how often swap file is used (compared to the RAM usage) system uses system property that is called swappiness. Swappiness is a property of the Linux kernel that changes the balance between swapping out runtime memory, as opposed to dropping pages from the system page cache. Swappiness can be set to values between 0 and 100 inclusive.A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space. The default value is 60. We can set the swappiness with the following command:sysctl vm.swappiness=10\nNow you have swap file on your system, which means you have more memory for the system to work with. This will make your system more stable at the cost of HDD space used by the swap file. Seems like a good deal."},{"id":13,"Title":"How To Set Up Nginx Virtual Hosts on Ubuntu","Slug":"resources/tutorials/how-to-set-up-nginx-virtual-hosts-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">If we have a single server that is used as web server and it has allocated one IP address only, then in order to have more than one website or domain running on the server, we use Virtual Hosts.</p><p style=\"margin-left:0px;\">This means that all websites/domains on that server will share the same web server, its configuration and the server’s resources. Virtual Hosts are widely used and popular in the shared web hosting, where the users get hosting for their website at significantly lower costs.</p><p style=\"margin-left:0px;\">In order to setup virtual hosts, we need to make sure that Nginx is already installed on our Ubuntu server. If it is not, the command to install it is:</p><pre><code class=\"language-plaintext\"># apt-get install nginx\n</code></pre><p style=\"margin-left:0px;\">Once it is installed it will create one configuration file for the default host and respective directory for it. In order to create new virtual host, the first step is to create its root directory. Let’s assume that we are creating new virtual hosts for the www.example.com domain. We will create its root directory as follows:</p><pre><code class=\"language-plaintext\"># mkdir -p /var/www/www.example.com/\n</code></pre><p style=\"margin-left:0px;\">We can use any name for the new directory. It doesn’t have to be exactly same as the domain. In this case it is done for easier distinguishing later. Once the directory is created we need to set the proper permissions to it:</p><pre><code class=\"language-plaintext\"># chown -R www-data:www-data /var/www/www.example.com/\n</code></pre><p style=\"margin-left:0px;\">In order to make sure that the content for our new virtual host is served from the correct directory, we can create simple index.html file for testing containing the following line:</p><pre><code class=\"language-plaintext\">&lt;h1&gt;This is a test page for www.example.com domain&lt;/h1&gt;\n</code></pre><p style=\"margin-left:0px;\">The file should be saved inside /var/www/www.example.com/ directory. The next thing is to create configuration file that will instruct Nginx to serve files for our new domain from the directory that we have just created.</p><p style=\"margin-left:0px;\">Nginx for Ubuntu comes with some sample configuration files inside /etc/nginx/sites-available directory. Nginx is threating each file in /etc/nginx/sites-enabled directory as separate configuration file and is processing all these files on startup. To create new configuration file for our domain we can copy the default configuration file.</p><pre><code class=\"language-plaintext\"># cp /etc/nginx/sites-available/default /etc/nginx/sites-available/www.example.com\n</code></pre><p style=\"margin-left:0px;\">Next, we need to open that file using our favorite text editor and edit as follows:</p><ul><li>Set listen variable to 80. This will make the server to listen on the default port for this host.</li><li>Set server_name variable to www.example.com.</li><li>Set the root variable to /var/www/www.example.com/</li></ul><p style=\"margin-left:0px;\">After we are done editing in order to activate the new virtual host we can either create symbolic links to this file and put it in /etc/nginx/sites-enabled directory or copy/move the actual file to /etc/nginx/sites-enabled directory. Creating symbolic link is something that is most common.</p><pre><code class=\"language-plaintext\"># ln -s /etc/nginx/sites-available/www.example.com /etc/nginx/sites-enabled/www.example.com\n</code></pre><p style=\"margin-left:0px;\">After we have created at least one virtual host, we can delete the default configuration file from /etc/nginx/sites-enabled/ directory</p><pre><code class=\"language-plaintext\"># rm /etc/nginx/sites-enabled/default\n</code></pre><p style=\"margin-left:0px;\">After all these changes are done, in order to apply them, we need to restart Nginx:</p><pre><code class=\"language-plaintext\"># service nginx restart\n</code></pre><p style=\"margin-left:0px;\">In order to test if everything works we need to have actual DNS entry for the www.example.com pointing to the public IP address on our server or we can override the DNS by inserting entry on our local hosts file</p><pre><code class=\"language-plaintext\">#Virtual Host test for www.example.com\naaa.bbb.ccc.ddd    www.example.com\n</code></pre><p style=\"margin-left:0px;\">After that, if we simply open our browser and go to www.example.com, we should get the content from the test index.html page that we have created earlier.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:14:16.133Z","created_at":"2021-03-30T04:14:11.611Z","updated_at":"2021-03-30T04:14:16.423Z","PostSEO":{"id":487,"GoogleSEO":{"id":478,"Title":"How To Set Up Nginx Virtual Hosts on Ubuntu - VEXXHOST","Description":"If we have a single server that is used as web server and it has allocated one IP address only, then in order to have more than one website or domain"},"FacebookSEO":{"id":474,"Title":"How To Set Up Nginx Virtual Hosts on Ubuntu - VEXXHOST","Url":null,"Description":"If we have a single server that is used as web server and it has allocated one IP address only, then in order to have more than one website or domain","SiteName":"VEXXHOST","Image":{"id":600,"name":"How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077603/small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"small_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":172.36,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077603/medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"medium_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":408.97,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077601/thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"thumbnail_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":43.58,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}}},"hash":"How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","ext":".png","mime":"image/png","size":392.64,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077600/How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"},"created_at":"2021-03-30T04:13:24.211Z","updated_at":"2021-03-30T04:13:24.226Z"}},"TwitterSEO":{"id":474,"Description":"If we have a single server that is used as web server and it has allocated one IP address only, then in order to have more than one website or domain","Title":"How To Set Up Nginx Virtual Hosts on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":600,"name":"How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077603/small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"small_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":172.36,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077603/medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"medium_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":408.97,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077601/thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"thumbnail_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":43.58,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}}},"hash":"How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","ext":".png","mime":"image/png","size":392.64,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077600/How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"},"created_at":"2021-03-30T04:13:24.211Z","updated_at":"2021-03-30T04:13:24.226Z"}}},"LinkToResource":{"id":405,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":600,"name":"How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077603/small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"small_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":172.36,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077603/medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"medium_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":408.97,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077601/thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","hash":"thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","mime":"image/png","name":"thumbnail_How-To-Set-Up-Nginx-Virtual-Hosts-on-Ubuntu-800x400.png","path":null,"size":43.58,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"}}},"hash":"How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","ext":".png","mime":"image/png","size":392.64,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077600/How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Set_Up_Nginx_Virtual_Hosts_on_Ubuntu_800x400_e890803afa","resource_type":"image"},"created_at":"2021-03-30T04:13:24.211Z","updated_at":"2021-03-30T04:13:24.226Z"},"TextContent":"If we have a single server that is used as web server and it has allocated one IP address only, then in order to have more than one website or domain running on the server, we use Virtual Hosts.This means that all websites/domains on that server will share the same web server, its configuration and the server’s resources. Virtual Hosts are widely used and popular in the shared web hosting, where the users get hosting for their website at significantly lower costs.In order to setup virtual hosts, we need to make sure that Nginx is already installed on our Ubuntu server. If it is not, the command to install it is:# apt-get install nginx\nOnce it is installed it will create one configuration file for the default host and respective directory for it. In order to create new virtual host, the first step is to create its root directory. Let’s assume that we are creating new virtual hosts for the www.example.com domain. We will create its root directory as follows:# mkdir -p /var/www/www.example.com/\nWe can use any name for the new directory. It doesn’t have to be exactly same as the domain. In this case it is done for easier distinguishing later. Once the directory is created we need to set the proper permissions to it:# chown -R www-data:www-data /var/www/www.example.com/\nIn order to make sure that the content for our new virtual host is served from the correct directory, we can create simple index.html file for testing containing the following line:<h1>This is a test page for www.example.com domain</h1>\nThe file should be saved inside /var/www/www.example.com/ directory. The next thing is to create configuration file that will instruct Nginx to serve files for our new domain from the directory that we have just created.Nginx for Ubuntu comes with some sample configuration files inside /etc/nginx/sites-available directory. Nginx is threating each file in /etc/nginx/sites-enabled directory as separate configuration file and is processing all these files on startup. To create new configuration file for our domain we can copy the default configuration file.# cp /etc/nginx/sites-available/default /etc/nginx/sites-available/www.example.com\nNext, we need to open that file using our favorite text editor and edit as follows:Set listen variable to 80. This will make the server to listen on the default port for this host.Set server_name variable to www.example.com.Set the root variable to /var/www/www.example.com/After we are done editing in order to activate the new virtual host we can either create symbolic links to this file and put it in /etc/nginx/sites-enabled directory or copy/move the actual file to /etc/nginx/sites-enabled directory. Creating symbolic link is something that is most common.# ln -s /etc/nginx/sites-available/www.example.com /etc/nginx/sites-enabled/www.example.com\nAfter we have created at least one virtual host, we can delete the default configuration file from /etc/nginx/sites-enabled/ directory# rm /etc/nginx/sites-enabled/default\nAfter all these changes are done, in order to apply them, we need to restart Nginx:# service nginx restart\nIn order to test if everything works we need to have actual DNS entry for the www.example.com pointing to the public IP address on our server or we can override the DNS by inserting entry on our local hosts file#Virtual Host test for www.example.com\naaa.bbb.ccc.ddd    www.example.com\nAfter that, if we simply open our browser and go to www.example.com, we should get the content from the test index.html page that we have created earlier."},{"id":14,"Title":"How To Setup Your Own VPN With PPTP on Linux (CentOS, Ubuntu, Debian)","Slug":"resources/tutorials/how-to-setup-your-own-vpn-with-pptp-on-linux-centos-ubuntu-debian","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">A virtual private network (VPN) is network that extends a private network (i.e. LAN) across a public network, such as the Internet. It enables a communications between computers and devices across shared or public networks as if it were directly connected to the private network, while benefiting from the functionality, security and management policies of the private network.</p><p style=\"margin-left:0px;\">This is done by establishing a virtual point-to-point connection through the use of dedicated connections, encryption, or a combination of the two. Basically, if two computers are connected through a VPN, they can communicate directly the same way as if they were in local network. Although the two computers could be physically very distant, the other computers on the internet are not able to intercept their communication.</p><h3>Server side setup and configuration</h3><p style=\"margin-left:0px;\">The most popular VPN solutions are OpenVPN and PPTP. We will use PPTP. Before we proceed and setup our own VPN network, we should have one computer that will be the VPN server. That computer will be responsible for assigning IP addresses to the clients, establishing initial connection between the clients or between client and the server, handling the security protocols and users/clients authentication. In order to install PPTP we will execute the following command:</p><pre><code class=\"language-plaintext\"># apt-get install pptpd\n</code></pre><p style=\"margin-left:0px;\">Alternatively, if we are using CentOS we should execute:</p><pre><code class=\"language-plaintext\"># rpm -i http://poptop.sourceforge.net/yum/stable/rhel6/pptp-release-current.noarch.rpm\n# yum -y install pptpd\n</code></pre><p style=\"margin-left:0px;\">Next step is to edit the default configuration file /etc/pptpd.conf, using our favourite editor and add the following lines:</p><pre><code class=\"language-plaintext\">localip 172.16.0.1\nremoteip 172.16.0.100-200\n</code></pre><p style=\"margin-left:0px;\">In this case, 172.16.0.1 is the IP that will be used inside the VPN by the VPN server, and An IP from the range 172.16.0.100-200 will be assigned to each client that will be authenticated.</p><p style=\"margin-left:0px;\">Now we need to add new users. The file that contains the users and their password is /etc/ppp/chap-secrets. The client should be entered with the following information in the following order:</p><pre><code class=\"language-plaintext\"># client        server  secret                  IP addresses\n</code></pre><p style=\"margin-left:0px;\">In order to create new client called client1 that will be able to use the pptpd server from any location using the password password1 we should add the following line, in the following case, the asterisk means that anyone IP address can use that login information:</p><pre><code class=\"language-plaintext\">client1  pptpd    password1   *\n</code></pre><p style=\"margin-left:0px;\">The last thing that we need to do before starting our VPN server is to add DNS server. We can add the DNS servers provided by or internet provider or we can use Google DNS servers and insert them in the file.</p><pre><code class=\"language-plaintext\">ms-dns 8.8.8.8\nms-dns 8.8.4.4\n</code></pre><p style=\"margin-left:0px;\">Now we can start the pptpd daemon using the command:</p><pre><code class=\"language-plaintext\">service pptpd start\n</code></pre><p style=\"margin-left:0px;\">In order to verify that it is running and listening for incoming connections, we should execute:</p><pre><code class=\"language-plaintext\">netstat -alpn | grep pptp\n</code></pre><p style=\"margin-left:0px;\">The output should look something like this:</p><pre><code class=\"language-plaintext\">tcp        0      0 0.0.0.0:1723            0.0.0.0:*               LISTEN      20934/pptpd\nunix  2      [ ]         DGRAM                    5992346  20934/pptpd\n</code></pre><p style=\"margin-left:0px;\">In order for VPN server to work properly and be able to forward the requests we should make sure that the following line exists in /etc/systl.conf.</p><pre><code class=\"language-plaintext\">net.ipv4.ip_forward = 1\n</code></pre><p style=\"margin-left:0px;\">If it does not exist, we need to add it and then apply the configuration using the following command:</p><pre><code class=\"language-plaintext\">sysctl -p\n</code></pre><p style=\"margin-left:0px;\">If we want the clients to be able to communicate to each other inside the VPN network we should create the following iptables rules:</p><pre><code class=\"language-plaintext\"># iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE &amp;&amp; iptables-save\n# iptables --table nat --append POSTROUTING --out-interface ppp0 -j\n# iptables -I INPUT -s 172.16.0.0/16 -i ppp0 -j ACCEPT\n# iptables --append FORWARD --in-interface eth0 -j ACCEPT\n</code></pre><h3>Client side setup and configuration</h3><p style=\"margin-left:0px;\">In order for a client computer to be able to connect to our VPN server, we should install the PPTP client using the following command (the first one is for CentOS, the second is for Debian/Ubuntu):</p><pre><code class=\"language-plaintext\"># yum -y install pptp\n# apt-get install pptp-linux\n</code></pre><p style=\"margin-left:0px;\">The VPN client request the ppp_mppe module, so we need to load it:</p><pre><code class=\"language-plaintext\"># modprobe ppp_mppe\n</code></pre><p style=\"margin-left:0px;\">Client configuration should be created in /etc/ppp/peers/ folder. In order to configure the parameters for the server we want to use, we should create the configuration file using our favorite editor and set the following parameters (we are at client1 now):</p><pre><code class=\"language-plaintext\">pty \"pptp  --nolaunchpppd\"\nname client1\npassword password1\nremotename PPTP\nrequire-mope-128\n</code></pre><p style=\"margin-left:0px;\">If our config files in the example above, was named /etc/ppp/peers/vpnserver, then in order to start the client and connect to the VPN server we should execute:</p><pre><code class=\"language-plaintext\"># pppd call vpnserver\n</code></pre><p style=\"margin-left:0px;\">After starting the client, check the log files for possible errors or successful connection info using the following command:</p><pre><code class=\"language-plaintext\"># cat /var/log/syslog | grep pptp\n</code></pre><p style=\"margin-left:0px;\">We should explicitly set proper routing for the VPN traffic on our clients:</p><pre><code class=\"language-plaintext\">ip route add 172.16.0.0/16 dev ppp0\n</code></pre><p style=\"margin-left:0px;\">Once this is done, we can repeat the procedure and add more client and they will all be able to communicate to each other inside secured virtual private network. The computer can communicate using any protocol or service, such as HTTP, SMTP, telnet, MySQL, FTP etc. PPTP server doesn’t demand high usage of CPU resources, but still, all traffic is 128-bit encrypted. This provides decent level of security and protection for our sensitive data and information.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:15:28.828Z","created_at":"2021-03-30T04:15:21.207Z","updated_at":"2021-03-30T04:15:29.616Z","PostSEO":{"id":488,"GoogleSEO":{"id":479,"Title":"VEXXHOST - How To Setup Your Own VPN With PPTP on Linux","Description":"A virtual private network (VPN) is network that extends a private network (i.e. LAN) across a public network, such as the Internet. It enables a"},"FacebookSEO":{"id":475,"Title":"VEXXHOST - How To Setup Your Own VPN With PPTP on Linux","Url":null,"Description":"A virtual private network (VPN) is network that extends a private network (i.e. LAN) across a public network, such as the Internet. It enables a","SiteName":"VEXXHOST","Image":{"id":601,"name":"How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077674/small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"small_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":211.97,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077673/medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"medium_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":471.21,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077672/thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"thumbnail_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":52.63,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}}},"hash":"How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","ext":".png","mime":"image/png","size":462.95,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077671/How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"},"created_at":"2021-03-30T04:14:35.144Z","updated_at":"2021-03-30T04:14:35.153Z"}},"TwitterSEO":{"id":475,"Description":"A virtual private network (VPN) is network that extends a private network (i.e. LAN) across a public network, such as the Internet. It enables a","Title":"VEXXHOST - How To Setup Your Own VPN With PPTP on Linux","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":601,"name":"How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077674/small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"small_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":211.97,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077673/medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"medium_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":471.21,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077672/thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"thumbnail_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":52.63,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}}},"hash":"How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","ext":".png","mime":"image/png","size":462.95,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077671/How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"},"created_at":"2021-03-30T04:14:35.144Z","updated_at":"2021-03-30T04:14:35.153Z"}}},"LinkToResource":{"id":406,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":601,"name":"How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077674/small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"small_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":211.97,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077673/medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"medium_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":471.21,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077672/thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","hash":"thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","mime":"image/png","name":"thumbnail_How-To-Setup-Your-Own-VPN-With-PPTP-on-Linux-CentOS-Ubuntu-Debian-800x400.png","path":null,"size":52.63,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"}}},"hash":"How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","ext":".png","mime":"image/png","size":462.95,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077671/How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Setup_Your_Own_VPN_With_PPTP_on_Linux_Cent_OS_Ubuntu_Debian_800x400_a57b87b32f","resource_type":"image"},"created_at":"2021-03-30T04:14:35.144Z","updated_at":"2021-03-30T04:14:35.153Z"},"TextContent":"A virtual private network (VPN) is network that extends a private network (i.e. LAN) across a public network, such as the Internet. It enables a communications between computers and devices across shared or public networks as if it were directly connected to the private network, while benefiting from the functionality, security and management policies of the private network.This is done by establishing a virtual point-to-point connection through the use of dedicated connections, encryption, or a combination of the two. Basically, if two computers are connected through a VPN, they can communicate directly the same way as if they were in local network. Although the two computers could be physically very distant, the other computers on the internet are not able to intercept their communication.Server side setup and configurationThe most popular VPN solutions are OpenVPN and PPTP. We will use PPTP. Before we proceed and setup our own VPN network, we should have one computer that will be the VPN server. That computer will be responsible for assigning IP addresses to the clients, establishing initial connection between the clients or between client and the server, handling the security protocols and users/clients authentication. In order to install PPTP we will execute the following command:# apt-get install pptpd\nAlternatively, if we are using CentOS we should execute:# rpm -i http://poptop.sourceforge.net/yum/stable/rhel6/pptp-release-current.noarch.rpm\n# yum -y install pptpd\nNext step is to edit the default configuration file /etc/pptpd.conf, using our favourite editor and add the following lines:localip 172.16.0.1\nremoteip 172.16.0.100-200\nIn this case, 172.16.0.1 is the IP that will be used inside the VPN by the VPN server, and An IP from the range 172.16.0.100-200 will be assigned to each client that will be authenticated.Now we need to add new users. The file that contains the users and their password is /etc/ppp/chap-secrets. The client should be entered with the following information in the following order:# client        server  secret                  IP addresses\nIn order to create new client called client1 that will be able to use the pptpd server from any location using the password password1 we should add the following line, in the following case, the asterisk means that anyone IP address can use that login information:client1  pptpd    password1   *\nThe last thing that we need to do before starting our VPN server is to add DNS server. We can add the DNS servers provided by or internet provider or we can use Google DNS servers and insert them in the file.ms-dns 8.8.8.8\nms-dns 8.8.4.4\nNow we can start the pptpd daemon using the command:service pptpd start\nIn order to verify that it is running and listening for incoming connections, we should execute:netstat -alpn | grep pptp\nThe output should look something like this:tcp        0      0 0.0.0.0:1723            0.0.0.0:*               LISTEN      20934/pptpd\nunix  2      [ ]         DGRAM                    5992346  20934/pptpd\nIn order for VPN server to work properly and be able to forward the requests we should make sure that the following line exists in /etc/systl.conf.net.ipv4.ip_forward = 1\nIf it does not exist, we need to add it and then apply the configuration using the following command:sysctl -p\nIf we want the clients to be able to communicate to each other inside the VPN network we should create the following iptables rules:# iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE && iptables-save\n# iptables --table nat --append POSTROUTING --out-interface ppp0 -j\n# iptables -I INPUT -s 172.16.0.0/16 -i ppp0 -j ACCEPT\n# iptables --append FORWARD --in-interface eth0 -j ACCEPT\nClient side setup and configurationIn order for a client computer to be able to connect to our VPN server, we should install the PPTP client using the following command (the first one is for CentOS, the second is for Debian/Ubuntu):# yum -y install pptp\n# apt-get install pptp-linux\nThe VPN client request the ppp_mppe module, so we need to load it:# modprobe ppp_mppe\nClient configuration should be created in /etc/ppp/peers/ folder. In order to configure the parameters for the server we want to use, we should create the configuration file using our favorite editor and set the following parameters (we are at client1 now):pty \"pptp  --nolaunchpppd\"\nname client1\npassword password1\nremotename PPTP\nrequire-mope-128\nIf our config files in the example above, was named /etc/ppp/peers/vpnserver, then in order to start the client and connect to the VPN server we should execute:# pppd call vpnserver\nAfter starting the client, check the log files for possible errors or successful connection info using the following command:# cat /var/log/syslog | grep pptp\nWe should explicitly set proper routing for the VPN traffic on our clients:ip route add 172.16.0.0/16 dev ppp0\nOnce this is done, we can repeat the procedure and add more client and they will all be able to communicate to each other inside secured virtual private network. The computer can communicate using any protocol or service, such as HTTP, SMTP, telnet, MySQL, FTP etc. PPTP server doesn’t demand high usage of CPU resources, but still, all traffic is 128-bit encrypted. This provides decent level of security and protection for our sensitive data and information."},{"id":15,"Title":"How To Install Rails & Nginx with Passenger on Ubuntu","Slug":"resources/tutorials/how-to-install-rails-and-nginx-with-passenger-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Ruby on Rails is an open source web application framework which runs on the Ruby programming language. It allows the developers creating pages and applications that gather information from the web server, talk to or query the database, and render templates out of the box directly to the internet browsers.</p><p style=\"margin-left:0px;\">As a result, Rails features a routing system that is independent of the web server. The web server is used to render the content only. The choice for that would be Nginx. Nginx is fast webserver with a strong focus on high concurrency, high performance and low memory usage.</p><p style=\"margin-left:0px;\">Before we proceed with installation, we should make sure that our system repositories are up to date:</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n</code></pre><p style=\"margin-left:0px;\">Once we are up to date with the latest available packages, the next step is to install Ruby Version Manager. It is application that allows to manage several different ruby versions easily, we can install RVM and then load it with:</p><pre><code class=\"language-plaintext\"># curl -L get.rvm.io | bash -s stable\n# source /usr/local/rvm/scripts/rvm\n</code></pre><p style=\"margin-left:0px;\">We must make sure that we have all dependencies from RVM. To make sure that we have all required dependencies, we execute the following command:</p><pre><code class=\"language-plaintext\"># rvm requirements\n</code></pre><p style=\"margin-left:0px;\">It will make sure that we are up to date and install the missing requirements (if any). Once we have RVM installed and configured, we can proceed to install and configure Ruby.</p><pre><code class=\"language-plaintext\"># rvm install 1.9.3\n# rvm use 1.9.3 --default\n</code></pre><p style=\"margin-left:0px;\">These two commands will install Ruby and set the system to use version 1.9.3 by default. The next step is to make sure we have all components for Ruby on Rails. Ruby Gems is a package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries, a tool designed to easily manage the installation of gems, and a server for distributing them, we can install it with this command and then use it to install Rails:</p><pre><code class=\"language-plaintext\"># rvm rubygems current\n# gem install rails\n</code></pre><p style=\"margin-left:0px;\">This process could take some time, but after it finish, Ruby on Rails is installed. Next, we need to make sure that we can easily deploy Ruby on rails to any web server. We will install and use Passenger for that. It will serve as interface or bridge for communication between Ruby and the web server, you can install it with the following command:</p><pre><code class=\"language-plaintext\"># gem install passenger\n</code></pre><p style=\"margin-left:0px;\">Once passenger is installed, the rest of the required setup is fully automated. We execute the command:</p><pre><code class=\"language-plaintext\"># rvmsudo passenger-install-nginx-module\n</code></pre><p style=\"margin-left:0px;\">Once we do this, it checks for all dependencies automatically and install those that are missing. If some manual user action is required, Passenger will tell us, as well as give us detailed instructions how to do it.</p><p style=\"margin-left:0px;\">Now we need to configure nginx to “talk” to Passenger. In order to do that, we need to open the nginx configuration file (/opt/nginx/conf/nginx.conf), using our favorite editor and add the following:</p><pre><code class=\"language-plaintext\">server {\n  listen 80;\n  server_name example.com;\n  passenger_enabled on;\n  root /var/www/rails_app/public;\n}\n</code></pre><p style=\"margin-left:0px;\">In order to create our rails app, we need to install Node.js first</p><pre><code class=\"language-plaintext\"># sudo apt-get install nodejs\n</code></pre><p style=\"margin-left:0px;\">Once that is that, we should go to our directory (in this case it is /var/www/rails_app/public) and create the application. After all this is installed and configured, we simply need to start Nginx.</p><pre><code class=\"language-plaintext\"># rails new my_first_rails_app\n# sudo service nginx start\n</code></pre><p style=\"margin-left:0px;\">We can try and access our new Ruby on Rails application using our browser. It seems that it was much easier to setup the environment and create our first Ruby on Rails project than we thought, was it?</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:16:51.224Z","created_at":"2021-03-30T04:16:47.863Z","updated_at":"2021-03-30T04:16:52.114Z","PostSEO":{"id":489,"GoogleSEO":{"id":480,"Title":"How To Install Rails & Nginx with Passenger on Ubuntu - VEXXHOST","Description":"Ruby on Rails is an open source web application framework which runs on the Ruby programming language. It allows the developers creating pages and"},"FacebookSEO":{"id":476,"Title":"How To Install Rails & Nginx with Passenger on Ubuntu - VEXXHOST","Url":null,"Description":"Ruby on Rails is an open source web application framework which runs on the Ruby programming language. It allows the developers creating pages and","SiteName":"VEXXHOST","Image":{"id":602,"name":"How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077748/small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"small_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":47.89,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077747/medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"medium_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":125.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077744/thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"thumbnail_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":11.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}}},"hash":"How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","ext":".png","mime":"image/png","size":73.57,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077743/How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"},"created_at":"2021-03-30T04:15:48.664Z","updated_at":"2021-03-30T04:15:48.708Z"}},"TwitterSEO":{"id":476,"Description":"Ruby on Rails is an open source web application framework which runs on the Ruby programming language. It allows the developers creating pages and","Title":"How To Install Rails & Nginx with Passenger on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":602,"name":"How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077748/small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"small_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":47.89,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077747/medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"medium_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":125.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077744/thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"thumbnail_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":11.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}}},"hash":"How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","ext":".png","mime":"image/png","size":73.57,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077743/How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"},"created_at":"2021-03-30T04:15:48.664Z","updated_at":"2021-03-30T04:15:48.708Z"}}},"LinkToResource":{"id":407,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":602,"name":"How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077748/small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"small_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":47.89,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077747/medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"medium_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":125.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077744/thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","hash":"thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","mime":"image/png","name":"thumbnail_How-To-Install-Rails-and-Nginx-with-Passenger-on-Ubuntu2-800x400.png","path":null,"size":11.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"}}},"hash":"How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","ext":".png","mime":"image/png","size":73.57,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077743/How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Rails_and_Nginx_with_Passenger_on_Ubuntu2_800x400_ef02990986","resource_type":"image"},"created_at":"2021-03-30T04:15:48.664Z","updated_at":"2021-03-30T04:15:48.708Z"},"TextContent":"Ruby on Rails is an open source web application framework which runs on the Ruby programming language. It allows the developers creating pages and applications that gather information from the web server, talk to or query the database, and render templates out of the box directly to the internet browsers.As a result, Rails features a routing system that is independent of the web server. The web server is used to render the content only. The choice for that would be Nginx. Nginx is fast webserver with a strong focus on high concurrency, high performance and low memory usage.Before we proceed with installation, we should make sure that our system repositories are up to date:# sudo apt-get update\nOnce we are up to date with the latest available packages, the next step is to install Ruby Version Manager. It is application that allows to manage several different ruby versions easily, we can install RVM and then load it with:# curl -L get.rvm.io | bash -s stable\n# source /usr/local/rvm/scripts/rvm\nWe must make sure that we have all dependencies from RVM. To make sure that we have all required dependencies, we execute the following command:# rvm requirements\nIt will make sure that we are up to date and install the missing requirements (if any). Once we have RVM installed and configured, we can proceed to install and configure Ruby.# rvm install 1.9.3\n# rvm use 1.9.3 --default\nThese two commands will install Ruby and set the system to use version 1.9.3 by default. The next step is to make sure we have all components for Ruby on Rails. Ruby Gems is a package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries, a tool designed to easily manage the installation of gems, and a server for distributing them, we can install it with this command and then use it to install Rails:# rvm rubygems current\n# gem install rails\nThis process could take some time, but after it finish, Ruby on Rails is installed. Next, we need to make sure that we can easily deploy Ruby on rails to any web server. We will install and use Passenger for that. It will serve as interface or bridge for communication between Ruby and the web server, you can install it with the following command:# gem install passenger\nOnce passenger is installed, the rest of the required setup is fully automated. We execute the command:# rvmsudo passenger-install-nginx-module\nOnce we do this, it checks for all dependencies automatically and install those that are missing. If some manual user action is required, Passenger will tell us, as well as give us detailed instructions how to do it.Now we need to configure nginx to “talk” to Passenger. In order to do that, we need to open the nginx configuration file (/opt/nginx/conf/nginx.conf), using our favorite editor and add the following:server {\n  listen 80;\n  server_name example.com;\n  passenger_enabled on;\n  root /var/www/rails_app/public;\n}\nIn order to create our rails app, we need to install Node.js first# sudo apt-get install nodejs\nOnce that is that, we should go to our directory (in this case it is /var/www/rails_app/public) and create the application. After all this is installed and configured, we simply need to start Nginx.# rails new my_first_rails_app\n# sudo service nginx start\nWe can try and access our new Ruby on Rails application using our browser. It seems that it was much easier to setup the environment and create our first Ruby on Rails project than we thought, was it?"},{"id":16,"Title":"How to protect your SSH server with Fail2Ban on Ubuntu","Slug":"resources/tutorials/how-to-protect-ssh-with-fail2ban-on-ubuntu-12","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Every server that exists online, virtual or dedicated, has some purpose related to its existence.&nbsp;It could be used as mail server, file server, web server or anything else. That means, no matter how hard we try to isolate and restrict access to it, we still have to leave some ports open.</p><p style=\"margin-left:0px;\">For example, email server must be able to accept incoming connections on port 25, webserver must be able to listen on port 80 etc. The most important for a server in the SSH service, that listens on port 22. We must to make sure to protect our server from unauthorized SSH access otherwise it will become easy target for brute force attacks.</p><p style=\"margin-left:0px;\">The most suitable application for this purpose is Fail2ban. It is an intrusion prevention framework written in the Python programming language. It is able to run on servers that have an interface to a packet-control system or firewall installed locally. It scans log files and bans IPs that show the malicious signs — too many password failures, seeking for exploits, etc. In order to install fail2ban, make sure your repositories are up to date and simply install it:</p><pre><code class=\"language-plaintext\"># apt-get update\n# apt-get install fail2ban\n</code></pre><p style=\"margin-left:0px;\">Once it is installed, it puts sample configuration file in /etc/fail2ban/jail.conf. We should copy the sample configuration file in /etc/fail2ban/jail.local and then, open file for editing using our favorite text editor. A lot of the possible services that we need to protect are already inside the sample file in their own section and there is DEFAULT section in the configuration file. Some of the important settings in this file are:</p><ul><li>ignoreip: We can use single IP, mask or a host name. IP addresses listed here will be excluded and will always be allowed to access the server</li><li>bantime: The time (in seconds) that a host would be blocked from the server if they are found to be in violation of any of the defined rules. The default is set for 600 (10 minutes) but it should be increased to at least 30 minutes or more.</li><li>maxrwtry: This is the number of incorrect login attempts allowed for a client before they get restricted to access the server. The default is 3.</li><li>backend: specifies the backend used to get files modification. It should be set to “auto”</li><li>destemail: We can specify email address where we want to get notifications when IP address is banned.</li></ul><p style=\"margin-left:0px;\">Another important section is the ACTION section. Important lines here line describe that fail2ban will use the system iptables in order to ban suspicious IP address and specify the protocol that fail2ban will monitor which can be TCP or UDP.</p><pre><code class=\"language-plaintext\">banaction = iptables-multiport\nprotocol = tcp\n</code></pre><p style=\"margin-left:0px;\">After we are done with the default settings and actions, we should setup our SSH section which will make sure that the SSH access to our server is secured. Here is how the SSH section should look inside the configuration file:</p><pre><code class=\"language-plaintext\">[ssh]\n\nenabled  = true\nport     = ssh\nfilter   = sshd\nlogpath  = /var/log/auth.log\nmaxretry = 4\n</code></pre><p style=\"margin-left:0px;\">This section makes SSH monitoring active, it listens on the SSH port for the ssh dameon, using the log file location /var/log/auth.log and bans the IP address of the user that will have 4 failed login attempts.</p><p style=\"margin-left:0px;\">After all settings are made, we need to restart fail2ban and it will start monitoring the log files according to our settings, you can also check which rules are currently applied with the following iptables command.</p><p style=\"margin-left:0px;\">Fail2ban is one of the most widely used applications when it comes to server security. It is very simple and effective, so you shouldn’t think twice in order to decide to install it on your server. It is a must have application.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:18:14.631Z","created_at":"2021-03-30T04:18:10.007Z","updated_at":"2021-03-30T04:18:15.018Z","PostSEO":{"id":490,"GoogleSEO":{"id":481,"Title":"How to protect your SSH server with Fail2Ban on Ubuntu - VEXXHOST","Description":"Every server that exists online, virtual or dedicated, has some purpose related to its existence. It could be used as mail server, file server, web server"},"FacebookSEO":{"id":477,"Title":"How to protect your SSH server with Fail2Ban on Ubuntu - VEXXHOST","Url":null,"Description":"Every server that exists online, virtual or dedicated, has some purpose related to its existence. It could be used as mail server, file server, web server","SiteName":"VEXXHOST","Image":{"id":603,"name":"How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077836/small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"small_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":214.32,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077835/medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"medium_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":471.53,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077833/thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"thumbnail_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":58.55,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}}},"hash":"How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","ext":".png","mime":"image/png","size":399.45,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077833/How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"},"created_at":"2021-03-30T04:17:17.049Z","updated_at":"2021-03-30T04:17:17.056Z"}},"TwitterSEO":{"id":477,"Description":"Every server that exists online, virtual or dedicated, has some purpose related to its existence. It could be used as mail server, file server, web server","Title":"How to protect your SSH server with Fail2Ban on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":603,"name":"How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077836/small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"small_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":214.32,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077835/medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"medium_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":471.53,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077833/thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"thumbnail_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":58.55,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}}},"hash":"How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","ext":".png","mime":"image/png","size":399.45,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077833/How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"},"created_at":"2021-03-30T04:17:17.049Z","updated_at":"2021-03-30T04:17:17.056Z"}}},"LinkToResource":{"id":408,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":603,"name":"How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077836/small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"small_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":214.32,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077835/medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"medium_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":471.53,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077833/thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","hash":"thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","mime":"image/png","name":"thumbnail_How-to-protect-your-SSH-server-with-Fail2Ban-on-Ubuntu-800x400.png","path":null,"size":58.55,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"}}},"hash":"How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","ext":".png","mime":"image/png","size":399.45,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077833/How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_protect_your_SSH_server_with_Fail2_Ban_on_Ubuntu_800x400_5be1e716d5","resource_type":"image"},"created_at":"2021-03-30T04:17:17.049Z","updated_at":"2021-03-30T04:17:17.056Z"},"TextContent":"Every server that exists online, virtual or dedicated, has some purpose related to its existence. It could be used as mail server, file server, web server or anything else. That means, no matter how hard we try to isolate and restrict access to it, we still have to leave some ports open.For example, email server must be able to accept incoming connections on port 25, webserver must be able to listen on port 80 etc. The most important for a server in the SSH service, that listens on port 22. We must to make sure to protect our server from unauthorized SSH access otherwise it will become easy target for brute force attacks.The most suitable application for this purpose is Fail2ban. It is an intrusion prevention framework written in the Python programming language. It is able to run on servers that have an interface to a packet-control system or firewall installed locally. It scans log files and bans IPs that show the malicious signs — too many password failures, seeking for exploits, etc. In order to install fail2ban, make sure your repositories are up to date and simply install it:# apt-get update\n# apt-get install fail2ban\nOnce it is installed, it puts sample configuration file in /etc/fail2ban/jail.conf. We should copy the sample configuration file in /etc/fail2ban/jail.local and then, open file for editing using our favorite text editor. A lot of the possible services that we need to protect are already inside the sample file in their own section and there is DEFAULT section in the configuration file. Some of the important settings in this file are:ignoreip: We can use single IP, mask or a host name. IP addresses listed here will be excluded and will always be allowed to access the serverbantime: The time (in seconds) that a host would be blocked from the server if they are found to be in violation of any of the defined rules. The default is set for 600 (10 minutes) but it should be increased to at least 30 minutes or more.maxrwtry: This is the number of incorrect login attempts allowed for a client before they get restricted to access the server. The default is 3.backend: specifies the backend used to get files modification. It should be set to “auto”destemail: We can specify email address where we want to get notifications when IP address is banned.Another important section is the ACTION section. Important lines here line describe that fail2ban will use the system iptables in order to ban suspicious IP address and specify the protocol that fail2ban will monitor which can be TCP or UDP.banaction = iptables-multiport\nprotocol = tcp\nAfter we are done with the default settings and actions, we should setup our SSH section which will make sure that the SSH access to our server is secured. Here is how the SSH section should look inside the configuration file:[ssh]\n\nenabled  = true\nport     = ssh\nfilter   = sshd\nlogpath  = /var/log/auth.log\nmaxretry = 4\nThis section makes SSH monitoring active, it listens on the SSH port for the ssh dameon, using the log file location /var/log/auth.log and bans the IP address of the user that will have 4 failed login attempts.After all settings are made, we need to restart fail2ban and it will start monitoring the log files according to our settings, you can also check which rules are currently applied with the following iptables command.Fail2ban is one of the most widely used applications when it comes to server security. It is very simple and effective, so you shouldn’t think twice in order to decide to install it on your server. It is a must have application."},{"id":17,"Title":"How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu","Slug":"resources/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">The acronym LAMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for building high-availability heavy-duty dynamic web sites, and capable of serving tens of thousands of requests simultaneously. The meaning of LAMP acronym depends on the software components included in the stack, but most often it is Linux, Apache, MySQL and PHP.</p><p style=\"margin-left:0px;\">We are assuming that we already have the Linux operating system installed, which in this case is our Ubuntu server. The first thing to start with is Apache. The Apache HTTP Server, commonly referred to as Apache is a web server application notable for playing a key role in the initial growth of the World Wide Web. It is one of the world’s most popular and widely used web servers nowadays. First off, you can start by installing Apache:</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n# sudo apt-get install apache2\n</code></pre><p style=\"margin-left:0px;\">That is all. That will install apache with web root folder under /var/www and start it. We can verify if it works by entering our server’s IP address or domain name into our browser. If it works, we should get a page that says “It Works!”.</p><p style=\"margin-left:0px;\">The next step is to install MySQL. MySQL is a very popular, widely used open-source relation database management system. To install MySQL, we execute the following command:</p><pre><code class=\"language-plaintext\"># sudo apt-get install mysql-server libapache2-mod-auth-mysql php5-mysql\n</code></pre><p style=\"margin-left:0px;\">It will install the MySQL server and the required libraries in order to establish communication with PHP. During the installation, we will get prompt to enter new MySQL root password. We need to make sure that we use a secure password. Once the installation is finished, we need to install MySQL system tables:</p><pre><code class=\"language-plaintext\"># sudo mysql_install_db\n</code></pre><p style=\"margin-left:0px;\">The next step is to make sure MySQL installation is secure. This can be done manually by editing the default configuration file. If you feel that you have enough knowledge you can skip the next step and set the configuration manually, otherwise execute the following command:</p><pre><code class=\"language-plaintext\"># sudo /usr/bin/mysql_secure_installation\n</code></pre><p style=\"margin-left:0px;\">We will be prompt for the MySQL root password. During the process, we will be asked a lot of questions. Basically, every “yes” answer, means increased security, so if we want to make our installation more secure, we should answer “yes” to all questions. After that, the new configuration will be applied, MySQL server process will be restarted and we it will be ready to use and listening for incoming connection on port 3306.</p><p style=\"margin-left:0px;\">The last step is to install PHP. PHP (recursive acronym for PHP: Hypertext Preprocessor) is a widely-used open source general-purpose scripting language that is especially suited for web development and can be embedded into HTML. To install it, execute:</p><pre><code class=\"language-plaintext\"># sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt\n</code></pre><p style=\"margin-left:0px;\">That is all, answer confirmatively to the prompts and PHP installation will be executed automatically. After we have PHP installed, it is good practice to add index.php to the directory index file directive:</p><pre><code class=\"language-plaintext\">DirectoryIndex index.php index.html index.cgi index.pl index.php index.xhtml index.htm\n</code></pre><p style=\"margin-left:0px;\">It is very likely that we will need to use some of the available php modules and libraries. We do not have to install all of them, but we can check which are available by executing:</p><pre><code class=\"language-plaintext\"># apt-cache search php5-\n</code></pre><p style=\"margin-left:0px;\">This will list all possible modules and libraries. For example, in order to install the APC module we need to run:</p><pre><code class=\"language-plaintext\"># sudo apt-get install php5-apc\n</code></pre><p style=\"margin-left:0px;\">This concludes the LAMP installation. Now we can create test file and put it in our web root directory. We should create file with the following content:</p><pre><code class=\"language-plaintext\">&lt;?php\nphpinfo();\n?&gt;\n</code></pre><p style=\"margin-left:0px;\">If we point our web browser to our web server and that file, we should get basic report of our PHP installation and about modules and libraries included. Now we have fully functional LAMP server where we can host a lot of websites and databases. We have become one of the millions members of the LAMP family.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:19:45.826Z","created_at":"2021-03-30T04:19:42.135Z","updated_at":"2021-03-30T04:19:46.215Z","PostSEO":{"id":491,"GoogleSEO":{"id":482,"Title":"How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu - VEXXHOST","Description":"The acronym LAMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for"},"FacebookSEO":{"id":478,"Title":"How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu - VEXXHOST","Url":null,"Description":"The acronym LAMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for","SiteName":"VEXXHOST","Image":{"id":604,"name":"How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","alternativeText":"","caption":"","width":560,"height":315,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077928/small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","hash":"small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","mime":"image/png","name":"small_How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","path":null,"size":113.9,"width":500,"height":281,"provider_metadata":{"public_id":"small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077927/thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","hash":"thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","mime":"image/png","name":"thumbnail_How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","path":null,"size":37.23,"width":245,"height":138,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"}}},"hash":"How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","ext":".png","mime":"image/png","size":105.87,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077926/How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"},"created_at":"2021-03-30T04:18:48.559Z","updated_at":"2021-03-30T04:18:48.808Z"}},"TwitterSEO":{"id":478,"Description":"The acronym LAMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for","Title":"How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":604,"name":"How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","alternativeText":"","caption":"","width":560,"height":315,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077928/small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","hash":"small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","mime":"image/png","name":"small_How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","path":null,"size":113.9,"width":500,"height":281,"provider_metadata":{"public_id":"small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077927/thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","hash":"thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","mime":"image/png","name":"thumbnail_How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","path":null,"size":37.23,"width":245,"height":138,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"}}},"hash":"How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","ext":".png","mime":"image/png","size":105.87,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077926/How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"},"created_at":"2021-03-30T04:18:48.559Z","updated_at":"2021-03-30T04:18:48.808Z"}}},"LinkToResource":{"id":409,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":604,"name":"How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","alternativeText":"","caption":"","width":560,"height":315,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077928/small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","hash":"small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","mime":"image/png","name":"small_How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","path":null,"size":113.9,"width":500,"height":281,"provider_metadata":{"public_id":"small_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077927/thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","hash":"thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","mime":"image/png","name":"thumbnail_How-To-Install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-1.png","path":null,"size":37.23,"width":245,"height":138,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"}}},"hash":"How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","ext":".png","mime":"image/png","size":105.87,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617077926/How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_1_cf62f07e0d","resource_type":"image"},"created_at":"2021-03-30T04:18:48.559Z","updated_at":"2021-03-30T04:18:48.808Z"},"TextContent":"The acronym LAMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for building high-availability heavy-duty dynamic web sites, and capable of serving tens of thousands of requests simultaneously. The meaning of LAMP acronym depends on the software components included in the stack, but most often it is Linux, Apache, MySQL and PHP.We are assuming that we already have the Linux operating system installed, which in this case is our Ubuntu server. The first thing to start with is Apache. The Apache HTTP Server, commonly referred to as Apache is a web server application notable for playing a key role in the initial growth of the World Wide Web. It is one of the world’s most popular and widely used web servers nowadays. First off, you can start by installing Apache:# sudo apt-get update\n# sudo apt-get install apache2\nThat is all. That will install apache with web root folder under /var/www and start it. We can verify if it works by entering our server’s IP address or domain name into our browser. If it works, we should get a page that says “It Works!”.The next step is to install MySQL. MySQL is a very popular, widely used open-source relation database management system. To install MySQL, we execute the following command:# sudo apt-get install mysql-server libapache2-mod-auth-mysql php5-mysql\nIt will install the MySQL server and the required libraries in order to establish communication with PHP. During the installation, we will get prompt to enter new MySQL root password. We need to make sure that we use a secure password. Once the installation is finished, we need to install MySQL system tables:# sudo mysql_install_db\nThe next step is to make sure MySQL installation is secure. This can be done manually by editing the default configuration file. If you feel that you have enough knowledge you can skip the next step and set the configuration manually, otherwise execute the following command:# sudo /usr/bin/mysql_secure_installation\nWe will be prompt for the MySQL root password. During the process, we will be asked a lot of questions. Basically, every “yes” answer, means increased security, so if we want to make our installation more secure, we should answer “yes” to all questions. After that, the new configuration will be applied, MySQL server process will be restarted and we it will be ready to use and listening for incoming connection on port 3306.The last step is to install PHP. PHP (recursive acronym for PHP: Hypertext Preprocessor) is a widely-used open source general-purpose scripting language that is especially suited for web development and can be embedded into HTML. To install it, execute:# sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt\nThat is all, answer confirmatively to the prompts and PHP installation will be executed automatically. After we have PHP installed, it is good practice to add index.php to the directory index file directive:DirectoryIndex index.php index.html index.cgi index.pl index.php index.xhtml index.htm\nIt is very likely that we will need to use some of the available php modules and libraries. We do not have to install all of them, but we can check which are available by executing:# apt-cache search php5-\nThis will list all possible modules and libraries. For example, in order to install the APC module we need to run:# sudo apt-get install php5-apc\nThis concludes the LAMP installation. Now we can create test file and put it in our web root directory. We should create file with the following content:<?php\nphpinfo();\n?>\nIf we point our web browser to our web server and that file, we should get basic report of our PHP installation and about modules and libraries included. Now we have fully functional LAMP server where we can host a lot of websites and databases. We have become one of the millions members of the LAMP family."},{"id":23,"Title":"How To Install FreePBX on CentOS","Slug":"resources/tutorials/how-to-install-freepbx-on-centos","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">PBX (stands for private branch exchange) is a private telephone network used that can be very easily connected to the public landline and mobile networks. The PBX network also provides audio, video and instant messaging communication through the TCP/IP protocol stack for its internal network and interconnects its internal network with the Public Switched Telephone Network (PSTN) for telephony communication.</p><p style=\"margin-left:0px;\">A lot of successful businesses are aiming to have their own telephony system that will allow them to have many different features, lower their costs using VoIP, especially on international calls, but inside that company as well. Some of them are choosing hosted solution, some are having their own In-House solution. In this tutorial we are installing FreePBX &amp; Asterisk VoIP on a base CentOS 6.4 installation.</p><p style=\"margin-left:0px;\">Asterisk is an open source software implementation of a telephone private branch exchange (PBX); it was created in 1999. Like any PBX, it allows attached telephones to make calls to one another, and to connect to other telephone services, such as the public switched telephone network (PSTN) and Voice over Internet Protocol (VoIP) services. Its name comes from the asterisk symbol, *. Asterisk includes many features like Voice mail, conference calling, Interactive voice response, automatic call distribution, Fax to email services etc.</p><p style=\"margin-left:0px;\">In order to control Asterisk, we will use FreePBX. It is open source graphical user interface that makes asterisk management very easy. It is usually included in the asterisk distribution, but it can be installed manually if needed. FreePBX distribution is unified server distribution that includes all of the software packages and dependencies required for Asterisk VoIP server, such as:</p><ul><li>Apache Web Server</li><li>Cyrus SASL (Simple Authentication Security Layer)</li><li>Dnsmasq</li><li>Fail2ban</li><li>iptables</li><li>Mailx</li><li>MySQL Server</li><li>Network Time Protocol</li><li>OpenVPN Server</li><li>Postfix MTA</li><li>Prosody XMPP Server</li><li>TFTP Server</li><li>Very Secure FTP Daemon (vsftpd)</li><li>Vim text editor</li></ul><p style=\"margin-left:0px;\">Before we start with the installation, we must make sure that the server has decent and stable internet connection and it should be in a geographical location near the place where the majority of our calls will come from. We also need to determine the size of our server. That will depends mostly on the number of the concurrent calls that we anticipate to have. It is not that bad even if we choose wrong, since we can resize our server at any time later, but some best practices showed that we should follow this calculations.</p><ul><li>Server with 512 MB RAM can support approximately 5-15 concurrent calls</li><li>Server with 1 GB can support approximately 15-25 concurrent calls</li><li>Server with 2 GB can support approximately 25-50 concurrent calls</li><li>Server with 4 GB can support approximately 50-100 concurrent calls</li><li>Server with 8 GB can support approximately 100-175 concurrent calls</li><li>Server with 16 GB can support approximately 175+ concurrent calls</li></ul><p style=\"margin-left:0px;\">Next, we must make sure that our fully qualified domain name is properly set in our hosts file and make sure that the server time setting match the appropriate time zone that server belongs to. The last step before we actually start with the installation is to update our currently installed packages from the standard CentOS repositories:</p><pre><code class=\"language-plaintext\"># yum update\n</code></pre><p style=\"margin-left:0px;\">Now, we are ready to start the deployment. We will use installation script that we need to download. The script will download some file during the installation, so we will use /tmp folder during the installations.</p><pre><code class=\"language-plaintext\"># cd /tmp\n# wget http://upgrades.freepbxdistro.org/blank-centos-installer/5.211.65-track/5.211.65-1-Installer-Script.sh\n# /tmp/4.211.64-1-Installer-Script.sh\n</code></pre><p style=\"margin-left:0px;\">Once it is finished, we will have fully functional IP-PBX server, based on the FreePBX Distribution. Now, we need to test if our GUI works. To do that, we will open our browser and point to the fully qualified name or the IP of our newly installed PBX, we will be presented with FreePBX administrator-account setup screen. We should setup our admin account using the GUI. That will be the information that we will use later for managing the server through the GUI.</p><p style=\"margin-left:0px;\">If we want to upgrade out FreePBX system later, we can search for available upgrades, download the upgrade script and execute it, similar to the installation process. First, we need to determine which our current version is:</p><pre><code class=\"language-plaintext\"># cat /etc/schmooze/pbx-version\n</code></pre><p style=\"margin-left:0px;\">Then, we can check the change list for the new version that is available and make decision whether we would like to upgrade or not. The upgrade process work same as the installation. The upgrade script might ask us for some additional information or confirmation. Once the upgrade is done we can check and confirm that our system is upgraded but executing:</p><pre><code class=\"language-plaintext\"># cat /etc/schmooze/pbx-version\n</code></pre><p style=\"margin-left:0px;\">If there is more than one upgrade script available, we should execute every upgrade script, one by one, is sequential order and save every script in the same folder. This Asterisk and OpenPBX server are part of a very wide field and there are a lot of additional things to be considered and explored. However, this tutorial underlines the very basic information and steps that are required in order to get our own PBX system up and running.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:27:35.523Z","created_at":"2021-03-30T04:27:31.892Z","updated_at":"2021-03-30T04:27:35.826Z","PostSEO":{"id":497,"GoogleSEO":{"id":488,"Title":"How To Install FreePBX on CentOS - VEXXHOST","Description":"PBX (stands for private branch exchange) is a private telephone network used that can be very easily connected to the public landline and mobile networks."},"FacebookSEO":{"id":484,"Title":"How To Install FreePBX on CentOS - VEXXHOST","Url":null,"Description":"PBX (stands for private branch exchange) is a private telephone network used that can be very easily connected to the public landline and mobile networks.","SiteName":"VEXXHOST","Image":{"id":610,"name":"How-To-Install-FreePBX-on-CentOS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078406/small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"small_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":247.23,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078405/medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"medium_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":551.43,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078403/thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"thumbnail_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":64.03,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}}},"hash":"How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","ext":".png","mime":"image/png","size":445.85,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078402/How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"},"created_at":"2021-03-30T04:26:46.504Z","updated_at":"2021-03-30T04:26:46.519Z"}},"TwitterSEO":{"id":484,"Description":"PBX (stands for private branch exchange) is a private telephone network used that can be very easily connected to the public landline and mobile networks.","Title":"How To Install FreePBX on CentOS - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":610,"name":"How-To-Install-FreePBX-on-CentOS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078406/small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"small_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":247.23,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078405/medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"medium_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":551.43,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078403/thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"thumbnail_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":64.03,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}}},"hash":"How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","ext":".png","mime":"image/png","size":445.85,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078402/How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"},"created_at":"2021-03-30T04:26:46.504Z","updated_at":"2021-03-30T04:26:46.519Z"}}},"LinkToResource":{"id":415,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":610,"name":"How-To-Install-FreePBX-on-CentOS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078406/small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"small_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":247.23,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078405/medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"medium_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":551.43,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078403/thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","hash":"thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","mime":"image/png","name":"thumbnail_How-To-Install-FreePBX-on-CentOS-800x400.png","path":null,"size":64.03,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"}}},"hash":"How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","ext":".png","mime":"image/png","size":445.85,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078402/How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Free_PBX_on_Cent_OS_800x400_7369de75d7","resource_type":"image"},"created_at":"2021-03-30T04:26:46.504Z","updated_at":"2021-03-30T04:26:46.519Z"},"TextContent":"PBX (stands for private branch exchange) is a private telephone network used that can be very easily connected to the public landline and mobile networks. The PBX network also provides audio, video and instant messaging communication through the TCP/IP protocol stack for its internal network and interconnects its internal network with the Public Switched Telephone Network (PSTN) for telephony communication.A lot of successful businesses are aiming to have their own telephony system that will allow them to have many different features, lower their costs using VoIP, especially on international calls, but inside that company as well. Some of them are choosing hosted solution, some are having their own In-House solution. In this tutorial we are installing FreePBX & Asterisk VoIP on a base CentOS 6.4 installation.Asterisk is an open source software implementation of a telephone private branch exchange (PBX); it was created in 1999. Like any PBX, it allows attached telephones to make calls to one another, and to connect to other telephone services, such as the public switched telephone network (PSTN) and Voice over Internet Protocol (VoIP) services. Its name comes from the asterisk symbol, *. Asterisk includes many features like Voice mail, conference calling, Interactive voice response, automatic call distribution, Fax to email services etc.In order to control Asterisk, we will use FreePBX. It is open source graphical user interface that makes asterisk management very easy. It is usually included in the asterisk distribution, but it can be installed manually if needed. FreePBX distribution is unified server distribution that includes all of the software packages and dependencies required for Asterisk VoIP server, such as:Apache Web ServerCyrus SASL (Simple Authentication Security Layer)DnsmasqFail2baniptablesMailxMySQL ServerNetwork Time ProtocolOpenVPN ServerPostfix MTAProsody XMPP ServerTFTP ServerVery Secure FTP Daemon (vsftpd)Vim text editorBefore we start with the installation, we must make sure that the server has decent and stable internet connection and it should be in a geographical location near the place where the majority of our calls will come from. We also need to determine the size of our server. That will depends mostly on the number of the concurrent calls that we anticipate to have. It is not that bad even if we choose wrong, since we can resize our server at any time later, but some best practices showed that we should follow this calculations.Server with 512 MB RAM can support approximately 5-15 concurrent callsServer with 1 GB can support approximately 15-25 concurrent callsServer with 2 GB can support approximately 25-50 concurrent callsServer with 4 GB can support approximately 50-100 concurrent callsServer with 8 GB can support approximately 100-175 concurrent callsServer with 16 GB can support approximately 175+ concurrent callsNext, we must make sure that our fully qualified domain name is properly set in our hosts file and make sure that the server time setting match the appropriate time zone that server belongs to. The last step before we actually start with the installation is to update our currently installed packages from the standard CentOS repositories:# yum update\nNow, we are ready to start the deployment. We will use installation script that we need to download. The script will download some file during the installation, so we will use /tmp folder during the installations.# cd /tmp\n# wget http://upgrades.freepbxdistro.org/blank-centos-installer/5.211.65-track/5.211.65-1-Installer-Script.sh\n# /tmp/4.211.64-1-Installer-Script.sh\nOnce it is finished, we will have fully functional IP-PBX server, based on the FreePBX Distribution. Now, we need to test if our GUI works. To do that, we will open our browser and point to the fully qualified name or the IP of our newly installed PBX, we will be presented with FreePBX administrator-account setup screen. We should setup our admin account using the GUI. That will be the information that we will use later for managing the server through the GUI.If we want to upgrade out FreePBX system later, we can search for available upgrades, download the upgrade script and execute it, similar to the installation process. First, we need to determine which our current version is:# cat /etc/schmooze/pbx-version\nThen, we can check the change list for the new version that is available and make decision whether we would like to upgrade or not. The upgrade process work same as the installation. The upgrade script might ask us for some additional information or confirmation. Once the upgrade is done we can check and confirm that our system is upgraded but executing:# cat /etc/schmooze/pbx-version\nIf there is more than one upgrade script available, we should execute every upgrade script, one by one, is sequential order and save every script in the same folder. This Asterisk and OpenPBX server are part of a very wide field and there are a lot of additional things to be considered and explored. However, this tutorial underlines the very basic information and steps that are required in order to get our own PBX system up and running."},{"id":18,"Title":"How To Set Up a Minecraft Server on Linux","Slug":"resources/tutorials/how-to-set-up-a-minecraft-server-on-linux","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Minecraft&nbsp;is popular sandbox indie game originally created by Swedish programmer Markus “Notch” Persson and later developed and published by Mojang. It is a game about breaking and placing blocks. At first, people built structures to protect against nocturnal monsters, but as the game grew players worked together to create wonderful, imaginative things.</p><p style=\"margin-left:0px;\">Setting up minecraft server on your Linux server is simple and straight forward task. The server hosting Minecraft should have at least 2GB RAM memory, once we are logged in, we should make sure that our repositories are up to date:</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n</code></pre><p style=\"margin-left:0px;\">Minecraft server requires java installed on the server. In order to check if we already have in installed, we will execute the following command:</p><pre><code class=\"language-plaintext\"># java –version\n</code></pre><p style=\"margin-left:0px;\">If Java is installed, we will get message with information about current Java version. If we don’t have Java, we will get error, like “Command not found” or similar. If we need to install Java, we need to execute the following command:</p><pre><code class=\"language-plaintext\"># sudo apt-get install default-jdk\n</code></pre><p style=\"margin-left:0px;\">We also need to install screen on our server. We will be using it later in order to start the minecraft server. It will keep the connection up and running even after closing the console. To install screen, we execute the following command:</p><pre><code class=\"language-plaintext\"># sudo apt-get install screen\n</code></pre><p style=\"margin-left:0px;\">After we have installed all prerequisites, it is time to install Minecraft server. We start with creating directory that we are going to use to keep the Minecraft files:</p><pre><code class=\"language-plaintext\"># mkdir minecraft\n# cd minecraft\n# wget -O minecraft_server.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.7.4/minecraft_server.1.7.4.jar\n</code></pre><p style=\"margin-left:0px;\">Once it is downloaded, we need to run it. We will run it inside screen, so it will keep running in background all the time. To create the screen and then start the Minecraft server we need to execute:</p><pre><code class=\"language-plaintext\"># screen -S \"Minecraft server\"\n# java -Xmx1024M -Xms1024M -jar minecraft_server.jar nogui\n</code></pre><p style=\"margin-left:0px;\">We will get some output and status progress as well as message that it is “done”. We can easily exit the screen and re-attach to it any time. To exit the screen, hit CTRL+A at the same time and then click on your “d” key afterwards.</p><p style=\"margin-left:0px;\">To re-attach to the screen, we list all screens first and then re-attach to the one with the specific ID:</p><pre><code class=\"language-plaintext\"># screen –ls\n# screen –r &lt;screen_id&gt;\n</code></pre><p style=\"margin-left:0px;\">You can edit the main configuration file which will be located in ~/minecraft/server.properties and change all the settings from there. You’re now all set and the Minecraft server is installed. Invite all your friend to play and have fun!</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:21:05.242Z","created_at":"2021-03-30T04:20:59.907Z","updated_at":"2021-03-30T04:21:05.515Z","PostSEO":{"id":492,"GoogleSEO":{"id":483,"Title":"How To Set Up a Minecraft Server on Linux - VEXXHOST","Description":"Minecraft is popular sandbox indie game originally created by Swedish programmer Markus “Notch” Persson and later developed and published by Mojang. It is"},"FacebookSEO":{"id":479,"Title":"How To Set Up a Minecraft Server on Linux - VEXXHOST","Url":null,"Description":"Minecraft is popular sandbox indie game originally created by Swedish programmer Markus “Notch” Persson and later developed and published by Mojang. It is","SiteName":"VEXXHOST","Image":{"id":605,"name":"How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078009/small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"small_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":43.6,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078009/medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"medium_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":138.47,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078005/thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"thumbnail_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":6.74,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}}},"hash":"How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","ext":".png","mime":"image/png","size":61.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078004/How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"},"created_at":"2021-03-30T04:20:10.250Z","updated_at":"2021-03-30T04:20:10.316Z"}},"TwitterSEO":{"id":479,"Description":"Minecraft is popular sandbox indie game originally created by Swedish programmer Markus “Notch” Persson and later developed and published by Mojang. It is","Title":"How To Set Up a Minecraft Server on Linux - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":605,"name":"How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078009/small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"small_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":43.6,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078009/medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"medium_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":138.47,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078005/thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"thumbnail_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":6.74,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}}},"hash":"How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","ext":".png","mime":"image/png","size":61.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078004/How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"},"created_at":"2021-03-30T04:20:10.250Z","updated_at":"2021-03-30T04:20:10.316Z"}}},"LinkToResource":{"id":410,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":605,"name":"How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078009/small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"small_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":43.6,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078009/medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"medium_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":138.47,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078005/thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","hash":"thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","mime":"image/png","name":"thumbnail_How-To-Set-Up-a-Minecraft-Server-on-Linux-800x400.png","path":null,"size":6.74,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"}}},"hash":"How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","ext":".png","mime":"image/png","size":61.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078004/How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Set_Up_a_Minecraft_Server_on_Linux_800x400_c5bc75bfc2","resource_type":"image"},"created_at":"2021-03-30T04:20:10.250Z","updated_at":"2021-03-30T04:20:10.316Z"},"TextContent":"Minecraft is popular sandbox indie game originally created by Swedish programmer Markus “Notch” Persson and later developed and published by Mojang. It is a game about breaking and placing blocks. At first, people built structures to protect against nocturnal monsters, but as the game grew players worked together to create wonderful, imaginative things.Setting up minecraft server on your Linux server is simple and straight forward task. The server hosting Minecraft should have at least 2GB RAM memory, once we are logged in, we should make sure that our repositories are up to date:# sudo apt-get update\nMinecraft server requires java installed on the server. In order to check if we already have in installed, we will execute the following command:# java –version\nIf Java is installed, we will get message with information about current Java version. If we don’t have Java, we will get error, like “Command not found” or similar. If we need to install Java, we need to execute the following command:# sudo apt-get install default-jdk\nWe also need to install screen on our server. We will be using it later in order to start the minecraft server. It will keep the connection up and running even after closing the console. To install screen, we execute the following command:# sudo apt-get install screen\nAfter we have installed all prerequisites, it is time to install Minecraft server. We start with creating directory that we are going to use to keep the Minecraft files:# mkdir minecraft\n# cd minecraft\n# wget -O minecraft_server.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.7.4/minecraft_server.1.7.4.jar\nOnce it is downloaded, we need to run it. We will run it inside screen, so it will keep running in background all the time. To create the screen and then start the Minecraft server we need to execute:# screen -S \"Minecraft server\"\n# java -Xmx1024M -Xms1024M -jar minecraft_server.jar nogui\nWe will get some output and status progress as well as message that it is “done”. We can easily exit the screen and re-attach to it any time. To exit the screen, hit CTRL+A at the same time and then click on your “d” key afterwards.To re-attach to the screen, we list all screens first and then re-attach to the one with the specific ID:# screen –ls\n# screen –r <screen_id>\nYou can edit the main configuration file which will be located in ~/minecraft/server.properties and change all the settings from there. You’re now all set and the Minecraft server is installed. Invite all your friend to play and have fun!"},{"id":20,"Title":"How To Install an Upstream Version of Node.js on Ubuntu","Slug":"resources/tutorials/how-to-install-an-upstream-version-of-node-js-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Node.js is a software platform that is used to build fast and easily scalable applications. Node.js utilizes JavaScript as its scripting language and achieves high throughput via non-blocking I/O and a single-threaded event loop.</p><p style=\"margin-left:0px;\">Node.js contains a built-in HTTP server library, making it possible to run a web server without the use of external software, such as Apache or Nginx, and allowing more control of how the webserver works.</p><p style=\"margin-left:0px;\">In order to install node.js on our Ubuntu server, we need to install some prerequisites first. Before installing any package we should make sure that our repositories are up to date:</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n</code></pre><p style=\"margin-left:0px;\">Once we are done with the update, we need to install the build-essentials package. This package contains an informational list of packages which are considered essential for building Debian packages.</p><pre><code class=\"language-plaintext\"># sudo apt-get install build-essential\n</code></pre><p style=\"margin-left:0px;\">We also need to install curl the package. It is a library that lets us make HTTP requests in the command line.</p><pre><code class=\"language-plaintext\"># sudo apt-get install curl\n</code></pre><p style=\"margin-left:0px;\">One curl is installed, we have all packages required prior to installing NodeJS. There are more different ways to install NodeJS. The easiest one is to simply execute:</p><pre><code class=\"language-plaintext\"># sudo apt-get install nodejs\n</code></pre><p style=\"margin-left:0px;\">However, the latest Node.js version might not be in the standard repository. In order to make sure that we have the latest version we are going to download the source, compile and install it, rather than using apt-get. First, we will change our current path to include ~/local/bin directory and then source the .bashrc file:</p><pre><code class=\"language-plaintext\">echo 'export PATH=$HOME/local/bin:$PATH' &gt;&gt; ~/.bashrc\n. ~/.bashrc\n</code></pre><p style=\"margin-left:0px;\">Then, we will create the directories required for the installation process:</p><pre><code class=\"language-plaintext\">mkdir ~/{local,node-latest-install}\n</code></pre><p style=\"margin-left:0px;\">Then, we switch to the latest-install folder and use curl to download the Node.js archive and then unpack it using tar.</p><pre><code class=\"language-plaintext\">cd ~/node-latest-install\ncurl http://nodejs.org/dist/node-latest.tar.gz | tar xz --strip-components=1\n</code></pre><p style=\"margin-left:0px;\">Next, we will set the parameters so Node.JS is installed for the current user and run the installation:</p><pre><code class=\"language-plaintext\">./configure --prefix=~/local\nmake install\n</code></pre><p style=\"margin-left:0px;\">Once Node.JS is installed, we will also install the node package manager (npm), which is the official package manager for Node.JS</p><pre><code class=\"language-plaintext\">curl https://npmjs.org/install.sh | sh\n</code></pre><p style=\"margin-left:0px;\">In order to check which Node.JS version we have currently installed on our server, we should execute:</p><pre><code class=\"language-plaintext\"># node -v\n</code></pre><p style=\"margin-left:0px;\">That is all. Now we node.js installed and we are ready to create and deploy our first application.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:23:36.622Z","created_at":"2021-03-30T04:23:33.528Z","updated_at":"2021-03-30T04:23:37.009Z","PostSEO":{"id":494,"GoogleSEO":{"id":485,"Title":"How To Install an Upstream Version of Node.js on Ubuntu - VEXXHOST","Description":"Node.js is a software platform that is used to build fast and easily scalable applications. Node.js utilizes JavaScript as its scripting language and"},"FacebookSEO":{"id":481,"Title":"How To Install an Upstream Version of Node.js on Ubuntu - VEXXHOST","Url":null,"Description":"Node.js is a software platform that is used to build fast and easily scalable applications. Node.js utilizes JavaScript as its scripting language and","SiteName":"VEXXHOST","Image":{"id":607,"name":"How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078169/small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"small_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":83.15,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078168/medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"medium_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":180.46,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078166/thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"thumbnail_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":23.01,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}}},"hash":"How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","ext":".png","mime":"image/png","size":165.65,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078165/How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"},"created_at":"2021-03-30T04:22:49.648Z","updated_at":"2021-03-30T04:22:49.714Z"}},"TwitterSEO":{"id":481,"Description":"Node.js is a software platform that is used to build fast and easily scalable applications. Node.js utilizes JavaScript as its scripting language and","Title":"How To Install an Upstream Version of Node.js on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":607,"name":"How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078169/small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"small_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":83.15,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078168/medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"medium_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":180.46,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078166/thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"thumbnail_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":23.01,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}}},"hash":"How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","ext":".png","mime":"image/png","size":165.65,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078165/How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"},"created_at":"2021-03-30T04:22:49.648Z","updated_at":"2021-03-30T04:22:49.714Z"}}},"LinkToResource":{"id":412,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":607,"name":"How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078169/small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"small_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":83.15,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078168/medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"medium_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":180.46,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078166/thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","hash":"thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","mime":"image/png","name":"thumbnail_How-To-Install-an-Upstream-Version-of-Node.js-on-Ubuntu-800x400.png","path":null,"size":23.01,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"}}},"hash":"How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","ext":".png","mime":"image/png","size":165.65,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078165/How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_an_Upstream_Version_of_Node_js_on_Ubuntu_800x400_0ea4c9bb05","resource_type":"image"},"created_at":"2021-03-30T04:22:49.648Z","updated_at":"2021-03-30T04:22:49.714Z"},"TextContent":"Node.js is a software platform that is used to build fast and easily scalable applications. Node.js utilizes JavaScript as its scripting language and achieves high throughput via non-blocking I/O and a single-threaded event loop.Node.js contains a built-in HTTP server library, making it possible to run a web server without the use of external software, such as Apache or Nginx, and allowing more control of how the webserver works.In order to install node.js on our Ubuntu server, we need to install some prerequisites first. Before installing any package we should make sure that our repositories are up to date:# sudo apt-get update\nOnce we are done with the update, we need to install the build-essentials package. This package contains an informational list of packages which are considered essential for building Debian packages.# sudo apt-get install build-essential\nWe also need to install curl the package. It is a library that lets us make HTTP requests in the command line.# sudo apt-get install curl\nOne curl is installed, we have all packages required prior to installing NodeJS. There are more different ways to install NodeJS. The easiest one is to simply execute:# sudo apt-get install nodejs\nHowever, the latest Node.js version might not be in the standard repository. In order to make sure that we have the latest version we are going to download the source, compile and install it, rather than using apt-get. First, we will change our current path to include ~/local/bin directory and then source the .bashrc file:echo 'export PATH=$HOME/local/bin:$PATH' >> ~/.bashrc\n. ~/.bashrc\nThen, we will create the directories required for the installation process:mkdir ~/{local,node-latest-install}\nThen, we switch to the latest-install folder and use curl to download the Node.js archive and then unpack it using tar.cd ~/node-latest-install\ncurl http://nodejs.org/dist/node-latest.tar.gz | tar xz --strip-components=1\nNext, we will set the parameters so Node.JS is installed for the current user and run the installation:./configure --prefix=~/local\nmake install\nOnce Node.JS is installed, we will also install the node package manager (npm), which is the official package manager for Node.JScurl https://npmjs.org/install.sh | sh\nIn order to check which Node.JS version we have currently installed on our server, we should execute:# node -v\nThat is all. Now we node.js installed and we are ready to create and deploy our first application."},{"id":19,"Title":"How To Create a SSL Certificate on Nginx for Ubuntu","Slug":"resources/tutorials/how-to-create-a-ssl-certificate-on-nginx-for-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Security is always very important when it comes to any type internet communication. SSL certificates are one way to get higher level of security for web servers. When a web server runs using secure protocols, it is using public and private keys in order to encrypt the traffic.</p><p style=\"margin-left:0px;\">The traffic is encrypted on the server, then send to the client (still encrypted) and then it is decrypted at client’s side (using the certificates). This actually makes data unreadable for any potential intruder. The SSL certificates are usually issued by certificate authority but we can create our own, self-signed certificates as well.</p><p style=\"margin-left:0px;\">In order to create SSL certificate for Nginx, the first think to do is to make sure that we have Nginx already installed:</p><pre><code class=\"language-plaintext\"># sudo apt-get install nginx\n</code></pre><p style=\"margin-left:0px;\">Before we proceed and create certificates, we should crate directory where are going to store the certificates and access them later. We will create the directory inside Nginx installation folder:</p><pre><code class=\"language-plaintext\"># sudo mkdir /etc/nginx/ssl\n</code></pre><p style=\"margin-left:0px;\">Once the directory is created, we will perform all the required steps, inside that directory so all output files will be saved there.</p><pre><code class=\"language-plaintext\"># cd /etc/nginx/ssl\n</code></pre><p style=\"margin-left:0px;\">The first file that we need to create is the private key. While creating the key, we will be asked for a passphrase. We must make sure to remember the passphrase since we will not be able to access the certificate without it. We will remove the passphrase later though. The following command will generate the private key:</p><pre><code class=\"language-plaintext\"># sudo openssl genrsa -des3 -out server.key 1024\n</code></pre><p style=\"margin-left:0px;\">Once we have the key created, we will use the key on order to create Certificate Signing Request:</p><pre><code class=\"language-plaintext\"># sudo openssl req -new -key server.key -out server.csr\n</code></pre><p style=\"margin-left:0px;\">After we execute this command, we will be prompt to enter some information, like Country, Company, Address, Email and possible some other fileds.. We should fill in the information properly since that information will be visible to the public once the certificate is created and used on our website. The most important is “common name” value. Our fully qualified domain name should be entered here. We leave the optional company name and challenge password blank.</p><p style=\"margin-left:0px;\">Now that we have the .key and .csr file, we are ready to create the certificate. Having the passphrase on the key file adds extra security, but it might be inconvenient In case of automatic server reboot or similar situations.</p><p style=\"margin-left:0px;\">If we have a passphrase it has to be typed in manually, so if there is not person available to do it, the website will be offline for a long time. That is why we are going to remove the passphrase from the key file, using the following commands:</p><pre><code class=\"language-plaintext\"># sudo cp server.key server.key.org\n# sudo openssl rsa -in server.key.org -out server.key\n</code></pre><p style=\"margin-left:0px;\">Now we are ready to create and sign our certificate:</p><pre><code class=\"language-plaintext\"># sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n</code></pre><p style=\"margin-left:0px;\">It will be valid for 1 year (365 days). That is something that can be changed if needed. Now we can use the certificate and assign to a virtual host. We can copy the Nginx sample configuration file in a new file and use that. Most important section in the file is the following:</p><pre><code class=\"language-plaintext\">server {\n  listen 443;\n  server_name our-domain.com;\n\n  root /var/www;\n  index index.html index.htm;\n\n  ssl on;\n  ssl_certificate /etc/nginx/ssl/server.crt;\n  ssl_certificate_key /etc/nginx/ssl/server.key;\n}\n</code></pre><p style=\"margin-left:0px;\">After making the changes and saving the file, we should copy the virtual host configuration file into /etc/nginx/sites-enabled/ and then restart Nginx.</p><pre><code class=\"language-plaintext\"># sudo service nginx restart\n</code></pre><p style=\"margin-left:0px;\">After then restart, if we point our browser to https://our-domain.com we will be able to find the certificate on the page. That’s it. We have added the certificates and all traffic on our website is now encrypted.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:22:16.623Z","created_at":"2021-03-30T04:22:13.817Z","updated_at":"2021-03-30T04:22:16.828Z","PostSEO":{"id":493,"GoogleSEO":{"id":484,"Title":"How To Create a SSL Certificate on Nginx for Ubuntu - VEXXHOST","Description":"Security is always very important when it comes to any type internet communication. SSL certificates are one way to get higher level of security for web"},"FacebookSEO":{"id":480,"Title":"How To Create a SSL Certificate on Nginx for Ubuntu - VEXXHOST","Url":null,"Description":"Security is always very important when it comes to any type internet communication. SSL certificates are one way to get higher level of security for web","SiteName":"VEXXHOST","Image":{"id":606,"name":"How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078087/small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"small_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":148.28,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078086/medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"medium_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":327.3,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078085/thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"thumbnail_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":39.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}}},"hash":"How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","ext":".png","mime":"image/png","size":322.75,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078084/How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"},"created_at":"2021-03-30T04:21:27.715Z","updated_at":"2021-03-30T04:21:27.724Z"}},"TwitterSEO":{"id":480,"Description":"Security is always very important when it comes to any type internet communication. SSL certificates are one way to get higher level of security for web","Title":"How To Create a SSL Certificate on Nginx for Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":606,"name":"How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078087/small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"small_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":148.28,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078086/medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"medium_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":327.3,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078085/thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"thumbnail_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":39.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}}},"hash":"How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","ext":".png","mime":"image/png","size":322.75,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078084/How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"},"created_at":"2021-03-30T04:21:27.715Z","updated_at":"2021-03-30T04:21:27.724Z"}}},"LinkToResource":{"id":411,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":606,"name":"How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078087/small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"small_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":148.28,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078086/medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"medium_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":327.3,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078085/thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","hash":"thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","mime":"image/png","name":"thumbnail_How-To-Create-a-SSL-Certificate-on-Nginx-for-Ubuntu-800x400.png","path":null,"size":39.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"}}},"hash":"How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","ext":".png","mime":"image/png","size":322.75,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078084/How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Create_a_SSL_Certificate_on_Nginx_for_Ubuntu_800x400_8f974cc107","resource_type":"image"},"created_at":"2021-03-30T04:21:27.715Z","updated_at":"2021-03-30T04:21:27.724Z"},"TextContent":"Security is always very important when it comes to any type internet communication. SSL certificates are one way to get higher level of security for web servers. When a web server runs using secure protocols, it is using public and private keys in order to encrypt the traffic.The traffic is encrypted on the server, then send to the client (still encrypted) and then it is decrypted at client’s side (using the certificates). This actually makes data unreadable for any potential intruder. The SSL certificates are usually issued by certificate authority but we can create our own, self-signed certificates as well.In order to create SSL certificate for Nginx, the first think to do is to make sure that we have Nginx already installed:# sudo apt-get install nginx\nBefore we proceed and create certificates, we should crate directory where are going to store the certificates and access them later. We will create the directory inside Nginx installation folder:# sudo mkdir /etc/nginx/ssl\nOnce the directory is created, we will perform all the required steps, inside that directory so all output files will be saved there.# cd /etc/nginx/ssl\nThe first file that we need to create is the private key. While creating the key, we will be asked for a passphrase. We must make sure to remember the passphrase since we will not be able to access the certificate without it. We will remove the passphrase later though. The following command will generate the private key:# sudo openssl genrsa -des3 -out server.key 1024\nOnce we have the key created, we will use the key on order to create Certificate Signing Request:# sudo openssl req -new -key server.key -out server.csr\nAfter we execute this command, we will be prompt to enter some information, like Country, Company, Address, Email and possible some other fileds.. We should fill in the information properly since that information will be visible to the public once the certificate is created and used on our website. The most important is “common name” value. Our fully qualified domain name should be entered here. We leave the optional company name and challenge password blank.Now that we have the .key and .csr file, we are ready to create the certificate. Having the passphrase on the key file adds extra security, but it might be inconvenient In case of automatic server reboot or similar situations.If we have a passphrase it has to be typed in manually, so if there is not person available to do it, the website will be offline for a long time. That is why we are going to remove the passphrase from the key file, using the following commands:# sudo cp server.key server.key.org\n# sudo openssl rsa -in server.key.org -out server.key\nNow we are ready to create and sign our certificate:# sudo openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\nIt will be valid for 1 year (365 days). That is something that can be changed if needed. Now we can use the certificate and assign to a virtual host. We can copy the Nginx sample configuration file in a new file and use that. Most important section in the file is the following:server {\n  listen 443;\n  server_name our-domain.com;\n\n  root /var/www;\n  index index.html index.htm;\n\n  ssl on;\n  ssl_certificate /etc/nginx/ssl/server.crt;\n  ssl_certificate_key /etc/nginx/ssl/server.key;\n}\nAfter making the changes and saving the file, we should copy the virtual host configuration file into /etc/nginx/sites-enabled/ and then restart Nginx.# sudo service nginx restart\nAfter then restart, if we point our browser to https://our-domain.com we will be able to find the certificate on the page. That’s it. We have added the certificates and all traffic on our website is now encrypted."},{"id":21,"Title":"How To Install Linux, Nginx, MySQL, PHP (LEMP) stack on Ubuntu","Slug":"resources/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">The acronym LEMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for building high-availability heavy-duty dynamic web sites, and capable of serving tens of thousands of requests simultaneously. The LEMP acronym stands for: Linux, Nginx (Engine X), MySQL and PHP.</p><p style=\"margin-left:0px;\">We are assuming that we already have the Ubuntu operating system installed. The first thing to start with is Nginx installation. Nginx is an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer, HTTP cache, and a web server . The nginx project started with a strong focus on high concurrency, high performance and low memory usage.</p><p style=\"margin-left:0px;\">First, we need to make sure that our repository information is up to date and then install Nginx</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n# sudo apt-get install nginx\n# sudo service nginx start\n</code></pre><p style=\"margin-left:0px;\">That is all regarding nginx installation. It is running and listening for incoming connections on port 80 now. The next step is to install MySQL. MySQL is very popular, widely used open source relation database management system. To install MySQL, we execute the following command:</p><pre><code class=\"language-plaintext\"># sudo apt-get install mysql-server mysql php5-mysql\n</code></pre><p style=\"margin-left:0px;\">It will install the MySQL server and the required libraries in order to establish communication with PHP. During the installation, we will get prompt to enter new MySQL root password. We need to make sure that we use secure password. Once the installation is finished, we need to install MySQL system tables:</p><pre><code class=\"language-plaintext\"># sudo mysql_install_db\n</code></pre><p style=\"margin-left:0px;\">The next step is to make sure MySQL installation is secure. This can be done manually by editing the default configuration file. If you feel that you have enough knowledge you can skip the next step and set the configuration manually, otherwise execute the following command:</p><pre><code class=\"language-plaintext\"># sudo /usr/bin/mysql_secure_installation\n</code></pre><p style=\"margin-left:0px;\">We will be prompt for the MySQL root password. During the process, we will be asked a lot of question. Basically, every “yes” answer, means increased security, so if we want to make our installation more secure, we should answer “yes” to all questions. After that, the new configuration will be applied, MySQL server process will be restarted and we it will be ready to use and listening for incoming connection on port 3306.</p><p style=\"margin-left:0px;\">The last step is to install PHP. PHP (recursive acronym for PHP: Hypertext Preprocessor) is a widely-used open source general-purpose scripting language that is especially suited for web development and can be embedded into HTML. To install it, execute:</p><pre><code class=\"language-plaintext\"># sudo apt-get install php5-fpm\n</code></pre><p style=\"margin-left:0px;\">The next step is to configure php and nginx details so they can communicate each other. First, we need to open /etc/php5/fpm/php.ini file using our favorite editor and change the line: cgi.fix_pathinfo=1 to cgi.fix_pathinfo=0. If we do not change this value to 0, we might have potential security risk. If this is set to 0, the interpreter will only process the exact file path, which is much safer solution.</p><p style=\"margin-left:0px;\">By default, the php5-fpm daemon will listen on port 9000, but we would rather establish socket level communication, which is faster and safer. To do that, we should open /etc/php5/fpm/pool.d/www.conf in our favorite editor and change 127.0.0.1:9000 to /var/run/php5-fpm.sock. In order to apply the changes, we need to restart php5-fpm:</p><pre><code class=\"language-plaintext\"># sudo service php5-fpm restart\n</code></pre><p style=\"margin-left:0px;\">Now we need to tell Nginx how to “talk” to php5-fpm on the socket that we defined earlier. To do that, we open the default virtual host file,/etc/nginx/sites-available/default and make sure that we have the following rule:</p><pre><code class=\"language-plaintext\"># pass the PHP scripts to FastCGI server listening on /var/run/php5-fpm.sock\nlocation ~ .php$ {\n  try_files $uri =404;\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n  fastcgi_index index.php;\n  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n  include fastcgi_params;\n}\n</code></pre><p style=\"margin-left:0px;\">This concludes the LEMP installation. Now we can create test file and put it in our web root directory. We should create file with the following content:</p><pre><code class=\"language-plaintext\">&lt;?php\nphpinfo();\n</code></pre><p style=\"margin-left:0px;\">Once done with this step, simply request to restart Nginx in order to apply the configuration that we’ve defined above.</p><pre><code class=\"language-plaintext\"># sudo service nginx restart\n</code></pre><p style=\"margin-left:0px;\">If we point our web browser to our web server and that file, we should get basic report of our PHP installation and about modules and libraries included.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:25:05.712Z","created_at":"2021-03-30T04:25:00.107Z","updated_at":"2021-03-30T04:25:06.026Z","PostSEO":{"id":495,"GoogleSEO":{"id":486,"Title":"How To Install Linux, Nginx, MySQL, PHP (LEMP) stack on Ubuntu - VEXXHOST","Description":"The acronym LEMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for"},"FacebookSEO":{"id":482,"Title":"How To Install Linux, Nginx, MySQL, PHP (LEMP) stack on Ubuntu - VEXXHOST","Url":null,"Description":"The acronym LEMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for","SiteName":"VEXXHOST","Image":{"id":608,"name":"How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078251/small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"small_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":82.5,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078250/medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"medium_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":195.09,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078247/thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"thumbnail_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":20.29,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}}},"hash":"How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","ext":".png","mime":"image/png","size":165.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078247/How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"},"created_at":"2021-03-30T04:24:11.704Z","updated_at":"2021-03-30T04:24:11.815Z"}},"TwitterSEO":{"id":482,"Description":"The acronym LEMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for","Title":"How To Install Linux, Nginx, MySQL, PHP (LEMP) stack on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":608,"name":"How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078251/small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"small_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":82.5,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078250/medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"medium_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":195.09,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078247/thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"thumbnail_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":20.29,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}}},"hash":"How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","ext":".png","mime":"image/png","size":165.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078247/How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"},"created_at":"2021-03-30T04:24:11.704Z","updated_at":"2021-03-30T04:24:11.815Z"}}},"LinkToResource":{"id":413,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":608,"name":"How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078251/small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"small_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":82.5,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078250/medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"medium_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":195.09,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078247/thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","hash":"thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","mime":"image/png","name":"thumbnail_How-To-Install-Linux-Nginx-MySQL-PHP-LEMP-stack-on-Ubuntu-800x400.png","path":null,"size":20.29,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"}}},"hash":"How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","ext":".png","mime":"image/png","size":165.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078247/How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Linux_Nginx_My_SQL_PHP_LEMP_stack_on_Ubuntu_800x400_7925ceee69","resource_type":"image"},"created_at":"2021-03-30T04:24:11.704Z","updated_at":"2021-03-30T04:24:11.815Z"},"TextContent":"The acronym LEMP refers to first letters of the four components of a solution stack, composed entirely of free and open-source software, suitable for building high-availability heavy-duty dynamic web sites, and capable of serving tens of thousands of requests simultaneously. The LEMP acronym stands for: Linux, Nginx (Engine X), MySQL and PHP.We are assuming that we already have the Ubuntu operating system installed. The first thing to start with is Nginx installation. Nginx is an open source reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer, HTTP cache, and a web server . The nginx project started with a strong focus on high concurrency, high performance and low memory usage.First, we need to make sure that our repository information is up to date and then install Nginx# sudo apt-get update\n# sudo apt-get install nginx\n# sudo service nginx start\nThat is all regarding nginx installation. It is running and listening for incoming connections on port 80 now. The next step is to install MySQL. MySQL is very popular, widely used open source relation database management system. To install MySQL, we execute the following command:# sudo apt-get install mysql-server mysql php5-mysql\nIt will install the MySQL server and the required libraries in order to establish communication with PHP. During the installation, we will get prompt to enter new MySQL root password. We need to make sure that we use secure password. Once the installation is finished, we need to install MySQL system tables:# sudo mysql_install_db\nThe next step is to make sure MySQL installation is secure. This can be done manually by editing the default configuration file. If you feel that you have enough knowledge you can skip the next step and set the configuration manually, otherwise execute the following command:# sudo /usr/bin/mysql_secure_installation\nWe will be prompt for the MySQL root password. During the process, we will be asked a lot of question. Basically, every “yes” answer, means increased security, so if we want to make our installation more secure, we should answer “yes” to all questions. After that, the new configuration will be applied, MySQL server process will be restarted and we it will be ready to use and listening for incoming connection on port 3306.The last step is to install PHP. PHP (recursive acronym for PHP: Hypertext Preprocessor) is a widely-used open source general-purpose scripting language that is especially suited for web development and can be embedded into HTML. To install it, execute:# sudo apt-get install php5-fpm\nThe next step is to configure php and nginx details so they can communicate each other. First, we need to open /etc/php5/fpm/php.ini file using our favorite editor and change the line: cgi.fix_pathinfo=1 to cgi.fix_pathinfo=0. If we do not change this value to 0, we might have potential security risk. If this is set to 0, the interpreter will only process the exact file path, which is much safer solution.By default, the php5-fpm daemon will listen on port 9000, but we would rather establish socket level communication, which is faster and safer. To do that, we should open /etc/php5/fpm/pool.d/www.conf in our favorite editor and change 127.0.0.1:9000 to /var/run/php5-fpm.sock. In order to apply the changes, we need to restart php5-fpm:# sudo service php5-fpm restart\nNow we need to tell Nginx how to “talk” to php5-fpm on the socket that we defined earlier. To do that, we open the default virtual host file,/etc/nginx/sites-available/default and make sure that we have the following rule:# pass the PHP scripts to FastCGI server listening on /var/run/php5-fpm.sock\nlocation ~ .php$ {\n  try_files $uri =404;\n  fastcgi_pass unix:/var/run/php5-fpm.sock;\n  fastcgi_index index.php;\n  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n  include fastcgi_params;\n}\nThis concludes the LEMP installation. Now we can create test file and put it in our web root directory. We should create file with the following content:<?php\nphpinfo();\nOnce done with this step, simply request to restart Nginx in order to apply the configuration that we’ve defined above.# sudo service nginx restart\nIf we point our web browser to our web server and that file, we should get basic report of our PHP installation and about modules and libraries included."},{"id":31,"Title":"How To Customize your Ghost Instance","Slug":"resources/tutorials/how-to-customize-your-ghost-instance","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Ghost is an Open Source application created and dedicated to blogging. It allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It is simple, elegant, and designed so that we can spend less time making our blog work and more time blogging.</p><p style=\"margin-left:0px;\">In this tutorial, we are assuming that we have already installed and configured ghost on our Ubuntu 12.04 server and we will be focusing on using ghost customization like setting up our own theme or other settings specific for our instance only.</p><p style=\"margin-left:0px;\">One of the cool features that ghost offers is theme support. We can completely change the look and feel of our blog simply by choosing different themes. There are a lot of themes available for ghost. Some of them are free and for some of them, we must pay if we want to use them.</p><p style=\"margin-left:0px;\">In order to choose our theme, we should visit the official Ghost website where themes and lots of other stuff can be found. We will choose on the free themes, named mtheme. If we click on it, we will be redirected to the theme’s GitHub page.</p><p style=\"margin-left:0px;\">Before we install the theme, we need to make sure that we have git binaries installed on our server. In order to install it, we should execute the two following commands to update our sources and make sure that git is installed:</p><pre><code class=\"language-plaintext\"># apt-get update\n# apt-get install -y git-core\n</code></pre><p style=\"margin-left:0px;\">Once we are sure that we have git installed, we should change to our theme directory and clone the project directly from its git repository:</p><pre><code class=\"language-plaintext\"># cd /var/www/ghost/content/themes\n# git clone https://github.com/readypress/mtheme.git\n</code></pre><p style=\"margin-left:0px;\">The GitHub URL for the project can be found on the GitHub home page. After it is cloned, we should change the ownership of the theme directory and set Ghost as owner. Once done, we will restart Ghost to make the new theme available</p><pre><code class=\"language-plaintext\"># chown –R ghost:ghost mtheme\n# /etc/init.d/ghost restart\n</code></pre><p style=\"margin-left:0px;\">After, that, we all we need to do in order to change the theme, is to open our website in the browser, and access the following URL:</p><p style=\"margin-left:0px;\">http://yourdomain.com/ghost/settings/general</p><p style=\"margin-left:0px;\">If we scroll down, we will find the “theme” section. We should simply choose our newly installed theme from the combo box and click “save”. That is all. The next time we visit our blog, it will be using the new theme. We can repeat this procedure to install and apply any other theme.</p><p style=\"margin-left:0px;\">We can use the same URL that we used to set the theme, in order to change some other blog-related settings. Once we navigate to:</p><p style=\"margin-left:0px;\">http://yourdomain.com/ghost/settings/general</p><p style=\"margin-left:0px;\">We will be able to set the following settings:</p><ul><li>Blog title – to set the name of our blog</li><li>Blog description – to describe what is about blog about</li><li>Blog logo – to upload the logo for our blog</li><li>Blog cover – to upload cover images for our blog</li></ul><p style=\"margin-left:0px;\">If we click on the “User” tab on the left side we have the ability to change our personal information and insert information like our real name, email, location, etc. On the bottom of the user’s page, we also have the ability to change our password.</p><p style=\"margin-left:0px;\">We can see how easy it is to use Ghost for blogging. It is completely focused on users’ needs, making everyone able to present their ideas to the world without having to deal with all technicalities.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:44:19.324Z","created_at":"2021-03-30T04:44:16.009Z","updated_at":"2021-03-30T04:44:19.911Z","PostSEO":{"id":505,"GoogleSEO":{"id":496,"Title":"How To Customize your Ghost Instance - VEXXHOST","Description":"Ghost is an Open Source application created and dedicated to blogging. It allows us to write and publish our own blog, giving you the tools to make it"},"FacebookSEO":{"id":492,"Title":"How To Customize your Ghost Instance - VEXXHOST","Url":null,"Description":"Ghost is an Open Source application created and dedicated to blogging. It allows us to write and publish our own blog, giving you the tools to make it","SiteName":"VEXXHOST","Image":{"id":618,"name":"How-To-Customize-your-Ghost-Instance-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079408/small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"small_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":35.21,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079407/medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"medium_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":75.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079405/thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"thumbnail_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":9.12,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}}},"hash":"How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","ext":".png","mime":"image/png","size":63.02,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079404/How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"},"created_at":"2021-03-30T04:43:28.536Z","updated_at":"2021-03-30T04:43:28.617Z"}},"TwitterSEO":{"id":492,"Description":"Ghost is an Open Source application created and dedicated to blogging. It allows us to write and publish our own blog, giving you the tools to make it","Title":"How To Customize your Ghost Instance - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":618,"name":"How-To-Customize-your-Ghost-Instance-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079408/small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"small_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":35.21,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079407/medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"medium_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":75.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079405/thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"thumbnail_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":9.12,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}}},"hash":"How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","ext":".png","mime":"image/png","size":63.02,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079404/How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"},"created_at":"2021-03-30T04:43:28.536Z","updated_at":"2021-03-30T04:43:28.617Z"}}},"LinkToResource":{"id":423,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":618,"name":"How-To-Customize-your-Ghost-Instance-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079408/small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"small_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":35.21,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079407/medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"medium_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":75.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079405/thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","hash":"thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","mime":"image/png","name":"thumbnail_How-To-Customize-your-Ghost-Instance-800x400.png","path":null,"size":9.12,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"}}},"hash":"How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","ext":".png","mime":"image/png","size":63.02,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079404/How_To_Customize_your_Ghost_Instance_800x400_ed61c54617.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Customize_your_Ghost_Instance_800x400_ed61c54617","resource_type":"image"},"created_at":"2021-03-30T04:43:28.536Z","updated_at":"2021-03-30T04:43:28.617Z"},"TextContent":"Ghost is an Open Source application created and dedicated to blogging. It allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It is simple, elegant, and designed so that we can spend less time making our blog work and more time blogging.In this tutorial, we are assuming that we have already installed and configured ghost on our Ubuntu 12.04 server and we will be focusing on using ghost customization like setting up our own theme or other settings specific for our instance only.One of the cool features that ghost offers is theme support. We can completely change the look and feel of our blog simply by choosing different themes. There are a lot of themes available for ghost. Some of them are free and for some of them, we must pay if we want to use them.In order to choose our theme, we should visit the official Ghost website where themes and lots of other stuff can be found. We will choose on the free themes, named mtheme. If we click on it, we will be redirected to the theme’s GitHub page.Before we install the theme, we need to make sure that we have git binaries installed on our server. In order to install it, we should execute the two following commands to update our sources and make sure that git is installed:# apt-get update\n# apt-get install -y git-core\nOnce we are sure that we have git installed, we should change to our theme directory and clone the project directly from its git repository:# cd /var/www/ghost/content/themes\n# git clone https://github.com/readypress/mtheme.git\nThe GitHub URL for the project can be found on the GitHub home page. After it is cloned, we should change the ownership of the theme directory and set Ghost as owner. Once done, we will restart Ghost to make the new theme available# chown –R ghost:ghost mtheme\n# /etc/init.d/ghost restart\nAfter, that, we all we need to do in order to change the theme, is to open our website in the browser, and access the following URL:http://yourdomain.com/ghost/settings/generalIf we scroll down, we will find the “theme” section. We should simply choose our newly installed theme from the combo box and click “save”. That is all. The next time we visit our blog, it will be using the new theme. We can repeat this procedure to install and apply any other theme.We can use the same URL that we used to set the theme, in order to change some other blog-related settings. Once we navigate to:http://yourdomain.com/ghost/settings/generalWe will be able to set the following settings:Blog title – to set the name of our blogBlog description – to describe what is about blog aboutBlog logo – to upload the logo for our blogBlog cover – to upload cover images for our blogIf we click on the “User” tab on the left side we have the ability to change our personal information and insert information like our real name, email, location, etc. On the bottom of the user’s page, we also have the ability to change our password.We can see how easy it is to use Ghost for blogging. It is completely focused on users’ needs, making everyone able to present their ideas to the world without having to deal with all technicalities."},{"id":22,"Title":"How To Install & Configure Varnish with Apache on Ubuntu","Slug":"resources/tutorials/how-to-install-and-configure-varnish-with-apache-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Varnish is an HTTP accelerator designed for content-heavy dynamic web sites. In contrast to other web accelerators, such as Squid, which began life as a client-side cache, or Apache and nginx, which are primarily origin servers, Varnish was designed as an HTTP accelerator. Varnish is focused exclusively on HTTP, unlike other proxy servers that often support FTP, SMTP and other network protocols.</p><p style=\"margin-left:0px;\">Before we install Varnish, we should have apache already installed. To install Apache, we should simple execute:</p><pre><code class=\"language-plaintext\"># sudo apt-get install apache2\n</code></pre><p style=\"margin-left:0px;\">Varnish should be available for install in the standard Ubuntu repositories. However, before we uninstall it we need to make sure that we are going to import the correct and latest varnish repository. We will start with importing their key:</p><pre><code class=\"language-plaintext\"># sudo curl http://repo.varnish-cache.org/debian/GPG-key.txt | sudo apt-key add -\n</code></pre><p style=\"margin-left:0px;\">Then, we should open /etc/apt/sources.list file for editing and add the following line:</p><pre><code class=\"language-plaintext\">deb http://repo.varnish-cache.org/ubuntu/ lucid varnish-3.0\n</code></pre><p style=\"margin-left:0px;\">We need make sure that our repositories are up-to-date. After then, we are ready to install Varnish.</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n# sudo apt-get install varnish\n</code></pre><p style=\"margin-left:0px;\">Once we have Varnish installed, we should setup some basic configuration parameters. By default, Varnish will listen on port 80, so we need to edit Apache configuration and set apache to listen on different port. In order to change that port that Apache listens on another port, we should open the /etc/apache2/ports.conf file and edit as follows:</p><pre><code class=\"language-plaintext\">NameVirtualHost 127.0.0.1:8080\nListen 127.0.0.1:8080\n</code></pre><p style=\"margin-left:0px;\">Then, we should also make changes in the default virtual host file (and in every other virtual host file that exists):</p><pre><code class=\"language-plaintext\">&lt;VirtualHost 127.0.0.1:8080&gt;\n</code></pre><p style=\"margin-left:0px;\">In order to set varnish parameters, we should open the default Varnish configuration file, /etc/default/varnish, using our favorite editor, and uncomment the following directive:</p><pre><code class=\"language-plaintext\">DAEMON_OPTS=\"-a :80\n             -T localhost:6082\n             -f /etc/varnish/default.vcl\n             -S /etc/varnish/secret\n             -s malloc,256m\"\n</code></pre><p style=\"margin-left:0px;\">That is all that we need to change in that file. Next, we open /etc/varnish/default.vcl file and edit as follows:</p><pre><code class=\"language-plaintext\">backend default {\n    .host = \"127.0.0.1\";\n    .port = \"8080\";\n}\n</code></pre><p style=\"margin-left:0px;\">Please note that in 8080 is the port on which Apache listens. If we choose another port for Apache to listen on, that we should use that port number instead. We are done with the basic configuration. Next, we need to restart the services and all traffic will go through Varnish:</p><pre><code class=\"language-plaintext\"># sudo service apache2 restart\n# sudo service varnish restart\n</code></pre><p style=\"margin-left:0px;\">If we want to check the current Varnish status and the cached sessions and content that is served through Varnish, we should execute:</p><pre><code class=\"language-plaintext\"># varnishstat\nHitrate ratio:        3        3        3\nHitrate avg:     0.3745   0.3745   0.3745\n\n       869844         4.97         2.89 Client connections accepted\n     31200592       164.04       103.52 Client requests received\n     11705560        58.66        38.84 Cache hits\n</code></pre><p style=\"margin-left:0px;\">Your pages are not being cached using Varnish and you can start by further referring to Varnish documentation to optimize your configuration.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:26:19.628Z","created_at":"2021-03-30T04:26:15.883Z","updated_at":"2021-03-30T04:26:20.526Z","PostSEO":{"id":496,"GoogleSEO":{"id":487,"Title":"How To Install & Configure Varnish with Apache on Ubuntu - VEXXHOST","Description":"Varnish is an HTTP accelerator designed for content-heavy dynamic web sites. In contrast to other web accelerators, such as Squid, which began life as a"},"FacebookSEO":{"id":483,"Title":"How To Install & Configure Varnish with Apache on Ubuntu - VEXXHOST","Url":null,"Description":"Varnish is an HTTP accelerator designed for content-heavy dynamic web sites. In contrast to other web accelerators, such as Squid, which began life as a","SiteName":"VEXXHOST","Image":{"id":609,"name":"How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078328/small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"small_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":40.81,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078327/medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"medium_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":123.54,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078323/thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"thumbnail_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":8.47,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}}},"hash":"How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","ext":".png","mime":"image/png","size":70.64,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078323/How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"},"created_at":"2021-03-30T04:25:29.040Z","updated_at":"2021-03-30T04:25:29.210Z"}},"TwitterSEO":{"id":483,"Description":"Varnish is an HTTP accelerator designed for content-heavy dynamic web sites. In contrast to other web accelerators, such as Squid, which began life as a","Title":"How To Install & Configure Varnish with Apache on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":609,"name":"How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078328/small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"small_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":40.81,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078327/medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"medium_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":123.54,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078323/thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"thumbnail_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":8.47,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}}},"hash":"How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","ext":".png","mime":"image/png","size":70.64,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078323/How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"},"created_at":"2021-03-30T04:25:29.040Z","updated_at":"2021-03-30T04:25:29.210Z"}}},"LinkToResource":{"id":414,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":609,"name":"How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078328/small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"small_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":40.81,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078327/medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"medium_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":123.54,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078323/thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","hash":"thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","mime":"image/png","name":"thumbnail_How-To-Install-and-Configure-Varnish-with-Apache-on-Ubuntu-800x400.png","path":null,"size":8.47,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"}}},"hash":"How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","ext":".png","mime":"image/png","size":70.64,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078323/How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Configure_Varnish_with_Apache_on_Ubuntu_800x400_1ee030f7a4","resource_type":"image"},"created_at":"2021-03-30T04:25:29.040Z","updated_at":"2021-03-30T04:25:29.210Z"},"TextContent":"Varnish is an HTTP accelerator designed for content-heavy dynamic web sites. In contrast to other web accelerators, such as Squid, which began life as a client-side cache, or Apache and nginx, which are primarily origin servers, Varnish was designed as an HTTP accelerator. Varnish is focused exclusively on HTTP, unlike other proxy servers that often support FTP, SMTP and other network protocols.Before we install Varnish, we should have apache already installed. To install Apache, we should simple execute:# sudo apt-get install apache2\nVarnish should be available for install in the standard Ubuntu repositories. However, before we uninstall it we need to make sure that we are going to import the correct and latest varnish repository. We will start with importing their key:# sudo curl http://repo.varnish-cache.org/debian/GPG-key.txt | sudo apt-key add -\nThen, we should open /etc/apt/sources.list file for editing and add the following line:deb http://repo.varnish-cache.org/ubuntu/ lucid varnish-3.0\nWe need make sure that our repositories are up-to-date. After then, we are ready to install Varnish.# sudo apt-get update\n# sudo apt-get install varnish\nOnce we have Varnish installed, we should setup some basic configuration parameters. By default, Varnish will listen on port 80, so we need to edit Apache configuration and set apache to listen on different port. In order to change that port that Apache listens on another port, we should open the /etc/apache2/ports.conf file and edit as follows:NameVirtualHost 127.0.0.1:8080\nListen 127.0.0.1:8080\nThen, we should also make changes in the default virtual host file (and in every other virtual host file that exists):<VirtualHost 127.0.0.1:8080>\nIn order to set varnish parameters, we should open the default Varnish configuration file, /etc/default/varnish, using our favorite editor, and uncomment the following directive:DAEMON_OPTS=\"-a :80\n             -T localhost:6082\n             -f /etc/varnish/default.vcl\n             -S /etc/varnish/secret\n             -s malloc,256m\"\nThat is all that we need to change in that file. Next, we open /etc/varnish/default.vcl file and edit as follows:backend default {\n    .host = \"127.0.0.1\";\n    .port = \"8080\";\n}\nPlease note that in 8080 is the port on which Apache listens. If we choose another port for Apache to listen on, that we should use that port number instead. We are done with the basic configuration. Next, we need to restart the services and all traffic will go through Varnish:# sudo service apache2 restart\n# sudo service varnish restart\nIf we want to check the current Varnish status and the cached sessions and content that is served through Varnish, we should execute:# varnishstat\nHitrate ratio:        3        3        3\nHitrate avg:     0.3745   0.3745   0.3745\n\n       869844         4.97         2.89 Client connections accepted\n     31200592       164.04       103.52 Client requests received\n     11705560        58.66        38.84 Cache hits\nYour pages are not being cached using Varnish and you can start by further referring to Varnish documentation to optimize your configuration."},{"id":28,"Title":"How To Install & Host Ghost with Nginx on Ubuntu","Slug":"resources/tutorials/how-to-install-host-ghost-with-nginx-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Ghost is an Open Source application which allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It’s simple, elegant, and designed so that we can spend less time making our blog work and more time blogging.</p><p style=\"margin-left:0px;\">Before we start installing it on our VPS, we should make sure that we meet all requirements. We need to have our Ubuntu server operating properly, we need to point our domain to it and we have to obtain a copy of Ghost.</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n</code></pre><p style=\"margin-left:0px;\">In order to install npm, we should execute the following command. These will install npm and all its prerequisites.</p><pre><code class=\"language-plaintext\"># sudo apt-get install python-software-properties python g++ make\n# sudo add-apt-repository ppa:chris-lea/node.js\n# sudo apt-get update\n# sudo apt-get install nodejs\n</code></pre><p style=\"margin-left:0px;\">Now we should have npm installed. If we simply try to execute nom command, we should get its help information in the console. We are ready to install Ghost now.</p><pre><code class=\"language-plaintext\"># cd ~\n# wget https://ghost.org/zip/ghost-0.4.2.zip.\n# unzip ghost-0.4.2.zip\n# cd ghost-0.4.2\n# npm install --production\n</code></pre><p style=\"margin-left:0px;\">The next step is to install nginx. Nginx installation is pretty easy and straight forward:</p><pre><code class=\"language-plaintext\"># sudo apt-get install nginx\n</code></pre><p style=\"margin-left:0px;\">That’s it, nginx is installed. Now we need to configure it. First, we change to nginx directory and remove the default configuration file and create a new one:</p><pre><code class=\"language-plaintext\"># cd /etc/nginx/\n# rm sites-enabled/default\n# cd sites-available\n# touch ghost\n</code></pre><p style=\"margin-left:0px;\">Then, we need to open /etc/nginx/sites-available/ghost in our favorite editor, and the paste the following content inside:</p><pre><code class=\"language-plaintext\">server {\n    listen 0.0.0.0:80;\n    server_name **your-domain-name.com**;\n    access_log /var/log/nginx/ghost.log;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        proxy_pass http://127.0.0.1:2368;\n        proxy_redirect off;\n    }\n}\n</code></pre><p style=\"margin-left:0px;\">Next, we need to create a symbolic link to activate the configuration.</p><pre><code class=\"language-plaintext\"># ln -s /etc/nginx/sites-available/ghost /etc/nginx/sites-enabled/ghost\n</code></pre><p style=\"margin-left:0px;\">If we restart nginx and start ghost again, we should get Ghost welcome page in our browser. If that is the case, we are done with the installation. The last thing we need to do is to make us able to start/stop the Ghost service like any other server on Ubuntu, using service start and service stop commands. In order to do that we need to create new file in /etc/init directory.</p><pre><code class=\"language-plaintext\"># cd /etc/init\n# edit ghost.conf\n</code></pre><p style=\"margin-left:0px;\">and paste the following content in it:</p><pre><code class=\"language-plaintext\"># ghost\n\n# description \"An Upstart task to make sure that my Ghost server is always running\"\n# author \"Your Name Here\"\n\nstart on startup\n\nscript\n    cd /root/ghost\n    npm start\nend script\n</code></pre><p style=\"margin-left:0px;\">That concludes the configuration. Now we have fully functional ghost server that will start automatically when system boots up. We can enjoy our blogging on a beautifully designed platform dedicated to that.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:38:59.914Z","created_at":"2021-03-30T04:38:56.992Z","updated_at":"2021-03-30T04:39:00.716Z","PostSEO":{"id":502,"GoogleSEO":{"id":493,"Title":"How To Install & Host Ghost with Nginx on Ubuntu - VEXXHOST","Description":"Ghost is an Open Source application which allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It’s"},"FacebookSEO":{"id":489,"Title":"How To Install & Host Ghost with Nginx on Ubuntu - VEXXHOST","Url":null,"Description":"Ghost is an Open Source application which allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It’s","SiteName":"VEXXHOST","Image":{"id":615,"name":"How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079090/small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"small_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":52.35,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079089/medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"medium_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":150.52,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079085/thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"thumbnail_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":10.71,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}}},"hash":"How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","ext":".png","mime":"image/png","size":72.84,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079085/How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"},"created_at":"2021-03-30T04:38:10.641Z","updated_at":"2021-03-30T04:38:10.710Z"}},"TwitterSEO":{"id":489,"Description":"Ghost is an Open Source application which allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It’s","Title":"How To Install & Host Ghost with Nginx on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":615,"name":"How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079090/small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"small_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":52.35,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079089/medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"medium_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":150.52,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079085/thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"thumbnail_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":10.71,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}}},"hash":"How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","ext":".png","mime":"image/png","size":72.84,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079085/How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"},"created_at":"2021-03-30T04:38:10.641Z","updated_at":"2021-03-30T04:38:10.710Z"}}},"LinkToResource":{"id":420,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":615,"name":"How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079090/small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"small_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":52.35,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079089/medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"medium_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":150.52,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079085/thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","hash":"thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","mime":"image/png","name":"thumbnail_How-To-Install-Host-Ghost-with-Nginx-on-Ubuntu-800x400.png","path":null,"size":10.71,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"}}},"hash":"How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","ext":".png","mime":"image/png","size":72.84,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079085/How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Host_Ghost_with_Nginx_on_Ubuntu_800x400_85a1c5c548","resource_type":"image"},"created_at":"2021-03-30T04:38:10.641Z","updated_at":"2021-03-30T04:38:10.710Z"},"TextContent":"Ghost is an Open Source application which allows us to write and publish our own blog, giving you the tools to make it easy and even fun to do. It’s simple, elegant, and designed so that we can spend less time making our blog work and more time blogging.Before we start installing it on our VPS, we should make sure that we meet all requirements. We need to have our Ubuntu server operating properly, we need to point our domain to it and we have to obtain a copy of Ghost.# sudo apt-get update\nIn order to install npm, we should execute the following command. These will install npm and all its prerequisites.# sudo apt-get install python-software-properties python g++ make\n# sudo add-apt-repository ppa:chris-lea/node.js\n# sudo apt-get update\n# sudo apt-get install nodejs\nNow we should have npm installed. If we simply try to execute nom command, we should get its help information in the console. We are ready to install Ghost now.# cd ~\n# wget https://ghost.org/zip/ghost-0.4.2.zip.\n# unzip ghost-0.4.2.zip\n# cd ghost-0.4.2\n# npm install --production\nThe next step is to install nginx. Nginx installation is pretty easy and straight forward:# sudo apt-get install nginx\nThat’s it, nginx is installed. Now we need to configure it. First, we change to nginx directory and remove the default configuration file and create a new one:# cd /etc/nginx/\n# rm sites-enabled/default\n# cd sites-available\n# touch ghost\nThen, we need to open /etc/nginx/sites-available/ghost in our favorite editor, and the paste the following content inside:server {\n    listen 0.0.0.0:80;\n    server_name **your-domain-name.com**;\n    access_log /var/log/nginx/ghost.log;\n\n    location / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header Host $http_host;\n        proxy_set_header X-NginX-Proxy true;\n\n        proxy_pass http://127.0.0.1:2368;\n        proxy_redirect off;\n    }\n}\nNext, we need to create a symbolic link to activate the configuration.# ln -s /etc/nginx/sites-available/ghost /etc/nginx/sites-enabled/ghost\nIf we restart nginx and start ghost again, we should get Ghost welcome page in our browser. If that is the case, we are done with the installation. The last thing we need to do is to make us able to start/stop the Ghost service like any other server on Ubuntu, using service start and service stop commands. In order to do that we need to create new file in /etc/init directory.# cd /etc/init\n# edit ghost.conf\nand paste the following content in it:# ghost\n\n# description \"An Upstart task to make sure that my Ghost server is always running\"\n# author \"Your Name Here\"\n\nstart on startup\n\nscript\n    cd /root/ghost\n    npm start\nend script\nThat concludes the configuration. Now we have fully functional ghost server that will start automatically when system boots up. We can enjoy our blogging on a beautifully designed platform dedicated to that."},{"id":24,"Title":"How To Configure a Galera Cluster with MariaDB on Ubuntu 12.04","Slug":"resources/tutorials/how-to-configure-a-galera-cluster-with-mariadb-on-ubuntu-12-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Every online system use database to store its information. Keeping the data safe and secure is top priority for such system. There are a lot of possible solutions to achieve that nowadays. One of the most widely used solution for relational databases is Master-slave replication.</p><p style=\"margin-left:0px;\">In master-slave replication, the master host is the one that is handling all data manipulations operations in the databases and then it distributes the data to number of different hosts. If something happens to the master host at any time, each of the slaves is able to takeover at any time and become the new master.</p><p style=\"margin-left:0px;\">However, it will be far better if each of the hosts could be able to perform data manipulations operations and then sync the data with all other hosts. This setup (known as master-master) is a bit more complicated and restrictive. MariaDB version for Ubuntu 12.04 doesn’t have stable version in the default repositories, but there is set of patches for MariaDB, known as “Galera”, that has master-master replication implemented.</p><p style=\"margin-left:0px;\">We will be using the minimum recommend number of nodes for a production system which is three, so we will have three nodes in our cluster. Since both MariaDB and Galera packages are not available in the default Ubuntu repositories, the first step is to add their repositories on every Ubuntu 12.04 instance in our cluster. In order to add the repositories, first we install another package:</p><pre><code class=\"language-plaintext\"># sudo apt-get install python-software-properties\n</code></pre><p style=\"margin-left:0px;\">Once it is installed, we can add the keys for the repository and the actual repositories then install MariaDB and Galera patches. During the installation we will be asked to set MariaDB admin password.</p><pre><code class=\"language-plaintext\"># sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db\n# sudo add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.5/ubuntu precise main'\n# sudo apt-get update\n# sudo apt-get install rsync mariadb-galera-server galera\n</code></pre><p style=\"margin-left:0px;\">Now that we have all the required packages on all three servers, it is time to start the cluster configuration. Every node should have same configuration, so we will create the configuration on one of the nodes and then copy it to the other two servers. We will create our file inside /etc/mysql/conf.d. MariaDB is monitoring this folder and processing all configuration files in it on startup. We will save our file as /etc/mysql/conf.d/cluster.cnf with the following content:</p><pre><code class=\"language-plaintext\">[mysqld]\nquery_cache_size=0\nbinlog_format=ROW\ndefault-storage-engine=innodb\ninnodb_autoinc_lock_mode=2\nquery_cache_type=0\nbind-address=0.0.0.0\n\n# Galera Provider Configuration\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\n#wsrep_provider_options=\"gcache.size=32G\"\n\n# Galera Cluster Configuration\nwsrep_cluster_name=\"our_cluster\"\nwsrep_cluster_address=\"gcomm://**node1_ip,node2_ip,node3_ip**\"\n\n# Galera Synchronization Congifuration\nwsrep_sst_method=rsync\n#wsrep_sst_auth=user:pass\n\n# Galera Node Configuration\nwsrep_node_address=\"**local_node_ip**\"\nwsrep_node_name=\"**local_node_name**\"\n</code></pre><p style=\"margin-left:0px;\">The [mysqld] section contains some basic MySQL settings that will allow MySQL to work properly. The second section, “Galera Provider Configuration” is section that is important for providing WriteSet replication API. There are more options available for this section, but it will work fine with the line that we have in it.</p><p style=\"margin-left:0px;\">The third section, “Galera Cluster Configuration”, is used to define the cluster. In this section, we should set the name for our cluster and the IP addresses for every of the nodes in the cluster. In the “Galera synchronization configuration”, we set the method that is used for the synchronization. In this case we are using rsync. And, finally in that last section, we should enter the IP of the machine where the file will be saved, as well as the machine’s name.</p><p style=\"margin-left:0px;\">Once all is set, we should copy this file on same location on the other two servers. We must change the parameters in the last section only, and match the configuration on the server where the file resides.</p><p style=\"margin-left:0px;\">Before we start and test the cluster, we must fix one thing first. During MariaDB installation on Ubuntu, special maintenance user is created. This used is created with random login credentials, so they are different on each server. That means that each maintenance user will be able to access its local node database only. In order to fix this, we should get the maintenance file for one of the servers and copy it to the other two. We don’t have to copy the entire file, the [client] section is enough.</p><pre><code class=\"language-plaintext\">[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = 03P8rdlknkXr1upf\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = 03P8rdlknkXr1upf\nsocket   = /var/run/mysqld/mysqld.sock\nbasedir  = /usr\n</code></pre><p style=\"margin-left:0px;\">We should open the file /etc/mysql/debian.cnf on every server, and make sure that the lines above are same on each of them. After that, we are ready to start the cluster. First, we should make sure that the service is not running, by executing:</p><pre><code class=\"language-plaintext\"># sudo service mysql stop\n</code></pre><p style=\"margin-left:0px;\">Then, we start the service on the first node:</p><pre><code class=\"language-plaintext\"># sudo service mysql start --wsrep-new-cluster\n</code></pre><p style=\"margin-left:0px;\">On the other two nodes, the same command will work, but it will suffice to start the servers with:</p><pre><code class=\"language-plaintext\"># sudo service mysql start\n</code></pre><p style=\"margin-left:0px;\">This should conclude everything and our new three node cluster should be up and running. The only thing left for us to do is to test it. The best way to test is it to connect to all three nodes, using command line or our favorite MySQL client manager software. We can start with creating database with some tables on the first nodes, then insert some new data from the second node, then edit the data from the third node. Regardless where we made the changes, the data should be up to date on all three servers in the cluster almost immediately after making the changes on any node. The point of our test is to prove that we can write data on any of the nodes and have it available everywhere.</p><p style=\"margin-left:0px;\">The setup that we just did, will help a lot with application with high write demands in production environment. Instead having one server for writing we have three. There are also some techniques that allow adding additional nodes without any interruption on the existing ones. Master-Master replication is possible in the standard MySQL server (without MariaDB and Galera patches), but it is far more complicated to setup and configure. MariaDB and Galera patches make it simple and easy to use.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:28:59.418Z","created_at":"2021-03-30T04:28:54.337Z","updated_at":"2021-03-30T04:29:00.310Z","PostSEO":{"id":498,"GoogleSEO":{"id":489,"Title":"How To Configure a Galera Cluster with MariaDB on Ubuntu 12.04 - VEXXHOST","Description":"Every online system use database to store its information. Keeping the data safe and secure is top priority for such system. There are a lot of possible"},"FacebookSEO":{"id":485,"Title":"How To Configure a Galera Cluster with MariaDB on Ubuntu 12.04 - VEXXHOST","Url":null,"Description":"Every online system use database to store its information. Keeping the data safe and secure is top priority for such system. There are a lot of possible","SiteName":"VEXXHOST","Image":{"id":611,"name":"How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078478/small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"small_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":118.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078478/medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"medium_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":285.78,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078475/thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"thumbnail_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":32.94,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}}},"hash":"How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","ext":".png","mime":"image/png","size":226.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078474/How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"},"created_at":"2021-03-30T04:27:59.224Z","updated_at":"2021-03-30T04:27:59.412Z"}},"TwitterSEO":{"id":485,"Description":"Every online system use database to store its information. Keeping the data safe and secure is top priority for such system. There are a lot of possible","Title":"How To Configure a Galera Cluster with MariaDB on Ubuntu 12.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":611,"name":"How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078478/small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"small_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":118.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078478/medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"medium_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":285.78,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078475/thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"thumbnail_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":32.94,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}}},"hash":"How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","ext":".png","mime":"image/png","size":226.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078474/How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"},"created_at":"2021-03-30T04:27:59.224Z","updated_at":"2021-03-30T04:27:59.412Z"}}},"LinkToResource":{"id":416,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":611,"name":"How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078478/small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"small_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":118.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078478/medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"medium_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":285.78,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078475/thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","hash":"thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","mime":"image/png","name":"thumbnail_How-To-Configure-a-Galera-Cluster-with-MariaDB-on-Ubuntu-12.041-800x400.png","path":null,"size":32.94,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"}}},"hash":"How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","ext":".png","mime":"image/png","size":226.48,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078474/How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Configure_a_Galera_Cluster_with_Maria_DB_on_Ubuntu_12_041_800x400_5af2cbf1ee","resource_type":"image"},"created_at":"2021-03-30T04:27:59.224Z","updated_at":"2021-03-30T04:27:59.412Z"},"TextContent":"Every online system use database to store its information. Keeping the data safe and secure is top priority for such system. There are a lot of possible solutions to achieve that nowadays. One of the most widely used solution for relational databases is Master-slave replication.In master-slave replication, the master host is the one that is handling all data manipulations operations in the databases and then it distributes the data to number of different hosts. If something happens to the master host at any time, each of the slaves is able to takeover at any time and become the new master.However, it will be far better if each of the hosts could be able to perform data manipulations operations and then sync the data with all other hosts. This setup (known as master-master) is a bit more complicated and restrictive. MariaDB version for Ubuntu 12.04 doesn’t have stable version in the default repositories, but there is set of patches for MariaDB, known as “Galera”, that has master-master replication implemented.We will be using the minimum recommend number of nodes for a production system which is three, so we will have three nodes in our cluster. Since both MariaDB and Galera packages are not available in the default Ubuntu repositories, the first step is to add their repositories on every Ubuntu 12.04 instance in our cluster. In order to add the repositories, first we install another package:# sudo apt-get install python-software-properties\nOnce it is installed, we can add the keys for the repository and the actual repositories then install MariaDB and Galera patches. During the installation we will be asked to set MariaDB admin password.# sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xcbcb082a1bb943db\n# sudo add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.5/ubuntu precise main'\n# sudo apt-get update\n# sudo apt-get install rsync mariadb-galera-server galera\nNow that we have all the required packages on all three servers, it is time to start the cluster configuration. Every node should have same configuration, so we will create the configuration on one of the nodes and then copy it to the other two servers. We will create our file inside /etc/mysql/conf.d. MariaDB is monitoring this folder and processing all configuration files in it on startup. We will save our file as /etc/mysql/conf.d/cluster.cnf with the following content:[mysqld]\nquery_cache_size=0\nbinlog_format=ROW\ndefault-storage-engine=innodb\ninnodb_autoinc_lock_mode=2\nquery_cache_type=0\nbind-address=0.0.0.0\n\n# Galera Provider Configuration\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\n#wsrep_provider_options=\"gcache.size=32G\"\n\n# Galera Cluster Configuration\nwsrep_cluster_name=\"our_cluster\"\nwsrep_cluster_address=\"gcomm://**node1_ip,node2_ip,node3_ip**\"\n\n# Galera Synchronization Congifuration\nwsrep_sst_method=rsync\n#wsrep_sst_auth=user:pass\n\n# Galera Node Configuration\nwsrep_node_address=\"**local_node_ip**\"\nwsrep_node_name=\"**local_node_name**\"\nThe [mysqld] section contains some basic MySQL settings that will allow MySQL to work properly. The second section, “Galera Provider Configuration” is section that is important for providing WriteSet replication API. There are more options available for this section, but it will work fine with the line that we have in it.The third section, “Galera Cluster Configuration”, is used to define the cluster. In this section, we should set the name for our cluster and the IP addresses for every of the nodes in the cluster. In the “Galera synchronization configuration”, we set the method that is used for the synchronization. In this case we are using rsync. And, finally in that last section, we should enter the IP of the machine where the file will be saved, as well as the machine’s name.Once all is set, we should copy this file on same location on the other two servers. We must change the parameters in the last section only, and match the configuration on the server where the file resides.Before we start and test the cluster, we must fix one thing first. During MariaDB installation on Ubuntu, special maintenance user is created. This used is created with random login credentials, so they are different on each server. That means that each maintenance user will be able to access its local node database only. In order to fix this, we should get the maintenance file for one of the servers and copy it to the other two. We don’t have to copy the entire file, the [client] section is enough.[client]\nhost     = localhost\nuser     = debian-sys-maint\npassword = 03P8rdlknkXr1upf\nsocket   = /var/run/mysqld/mysqld.sock\n[mysql_upgrade]\nhost     = localhost\nuser     = debian-sys-maint\npassword = 03P8rdlknkXr1upf\nsocket   = /var/run/mysqld/mysqld.sock\nbasedir  = /usr\nWe should open the file /etc/mysql/debian.cnf on every server, and make sure that the lines above are same on each of them. After that, we are ready to start the cluster. First, we should make sure that the service is not running, by executing:# sudo service mysql stop\nThen, we start the service on the first node:# sudo service mysql start --wsrep-new-cluster\nOn the other two nodes, the same command will work, but it will suffice to start the servers with:# sudo service mysql start\nThis should conclude everything and our new three node cluster should be up and running. The only thing left for us to do is to test it. The best way to test is it to connect to all three nodes, using command line or our favorite MySQL client manager software. We can start with creating database with some tables on the first nodes, then insert some new data from the second node, then edit the data from the third node. Regardless where we made the changes, the data should be up to date on all three servers in the cluster almost immediately after making the changes on any node. The point of our test is to prove that we can write data on any of the nodes and have it available everywhere.The setup that we just did, will help a lot with application with high write demands in production environment. Instead having one server for writing we have three. There are also some techniques that allow adding additional nodes without any interruption on the existing ones. Master-Master replication is possible in the standard MySQL server (without MariaDB and Galera patches), but it is far more complicated to setup and configure. MariaDB and Galera patches make it simple and easy to use."},{"id":25,"Title":"How To Install GitLab As Your Private GitHub Clone","Slug":"resources/tutorials/how-to-install-gitlab-as-your-private-github-clone","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Git is a distributed revision control and source code management (SCM) system with an emphasis on speed. Every Git working directory is a full-fledged repository with complete history and full version tracking capabilities, not dependent on network access or a central server. Git is free software distributed under the terms of the GNU General Public License version 2.</p><p style=\"margin-left:0px;\">GitHub is a web-based hosting service for software development projects that use the Git revision control system. GitHub offers both paid plans for private repositories and free accounts for open-source projects.</p><p style=\"margin-left:0px;\">In this tutorial, we will explain how to get your own GitHub instance running on your own Ubuntu 12.04 VPS. Ubuntu 12.04 is recommended because of some incompatibilities between Python and Ruby on other Linux distributions. Also, make sure you have at least 1GB RAM memory on your VPS. Our first step is to install some required packages and dependencies.</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n# sudo apt-get install -y build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libreadline-dev libncurses5-dev libffi-dev curl git-core openssh-server redis-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev\n</code></pre><p style=\"margin-left:0px;\">Then, we are going to install Ruby 2.0.</p><pre><code class=\"language-plaintext\"># mkdir /tmp/ruby &amp;&amp; cd /tmp/ruby\n# curl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz | tar xz\n# cd ruby-2.0.0-p247\n# ./configure\n# make\n# sudo make install\n</code></pre><p style=\"margin-left:0px;\">Once it is finished, we should make sure we are having the required version with and we should get an output with the Ruby version:</p><pre><code class=\"language-plaintext\"># ruby –version\n</code></pre><p style=\"margin-left:0px;\">Then, we need to install Bundler gem. Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed. We also need to add a</p><pre><code class=\"language-plaintext\">git\n</code></pre><p style=\"margin-left:0px;\">user that will be used by GitLab.</p><pre><code class=\"language-plaintext\"># sudo gem install bundler --no-ri --no-rdoc\n# sudo adduser --disabled-login --gecos 'GitLab' git\n</code></pre><p style=\"margin-left:0px;\">Once we are done with this, our next task is to clone the GitLab shell from its repository and set the environment.</p><pre><code class=\"language-plaintext\"># cd /home/git\n# sudo -u git -H git clone https://github.com/gitlabhq/gitlab-shell.git\n# cd gitlab-shell\n# sudo -u git -H git checkout v1.7.0\n# sudo -u git -H cp config.yml.example config.yml\n</code></pre><p style=\"margin-left:0px;\">Now we have a local copy of the GitLab shell. There should be a sample config.yml file with it. We should open config.yml using our favourite text editor and edit as follows:</p><pre><code class=\"language-plaintext\">gitlab_url: \"http://**yourdomain.com**/\"\n</code></pre><p style=\"margin-left:0px;\">Once that’s done, you can move on to running the GitLab shell installer:</p><pre><code class=\"language-plaintext\"># sudo -u git -H ./bin/install\n</code></pre><p style=\"margin-left:0px;\">We will use MySQL as the database backend and connect GitLab to it. We need to install MySQL database server packages first. We will be asked to set a password during the installation. Make sure you remember or write it down because we will need it later.</p><pre><code class=\"language-plaintext\"># sudo apt-get install -y mysql-server mysql-client libmysqlclient-dev\n</code></pre><p style=\"margin-left:0px;\">Now, we should log in to MySQL, using the password that we set and create the required user and database for GitLab.</p><pre><code class=\"language-plaintext\"># mysql -u root –p\n</code></pre><p style=\"margin-left:0px;\">Once we enter the password, we are in the MySQL command prompt. We will add users, create databases and set the correct privileges to it.</p><pre><code class=\"language-plaintext\">CREATE USER 'gitlab'@'localhost' IDENTIFIED BY '**enter-mysql-password**';\nCREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;\nGRANT SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON `gitlabhq_production`.* TO 'gitlab'@'localhost';\n</code></pre><p style=\"margin-left:0px;\">To make sure your new MySQL user was created successfully let’s log in to mysql using the GitLab user. When you’ll be asked for the password, make sure to enter the one you selected above.</p><pre><code class=\"language-plaintext\"># mysql -u gitlab –p\n</code></pre><p style=\"margin-left:0px;\">If everything worked fine, we can proceed with the GitLab installation:</p><pre><code class=\"language-plaintext\"># cd /home/git\n# sudo -u git -H git clone https://github.com/gitlabhq/gitlabhq.git gitlab\n# cd /home/git/gitlab\n# sudo -u git -H git checkout 6-0-stable\n# sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml\n</code></pre><p style=\"margin-left:0px;\">Similar like we did with the GitLab shell set up if we have a domain configured for our VPS we need to edit the config.yml to use that domain. We should edit the file as follows:</p><pre><code class=\"language-plaintext\">gitlab:\n## Web server settings\nhost: **yourdomain.com**\nport: 80\nhttps: false\n</code></pre><p style=\"margin-left:0px;\">Now we need to execute several commands in order to set the proper privileges for everything we installed:</p><pre><code class=\"language-plaintext\">cd /home/git/gitlab\nsudo chown -R git log/\nsudo chown -R git tmp/\nsudo chmod -R u+rwX  log/\nsudo chmod -R u+rwX  tmp/\nsudo -u git -H mkdir /home/git/gitlab-satellites\nsudo -u git -H mkdir tmp/pids/\nsudo -u git -H mkdir tmp/sockets/\nsudo chmod -R u+rwX  tmp/pids/\nsudo chmod -R u+rwX  tmp/sockets/\nsudo -u git -H mkdir public/uploads\nsudo chmod -R u+rwX  public/uploads\nsudo -u git -H cp config/unicorn.rb.example config/unicorn.rb\nsudo -u git -H git config --global user.name \"GitLab\"\nsudo -u git -H git config --global user.email \"gitlab@localhost\"\nsudo -u git -H git config --global core.autocrlf input\nsudo -u git cp config/database.yml.mysql config/database.yml\n</code></pre><p style=\"margin-left:0px;\">Now we need to configure GitLab to be able to connect to the MySQL database using the user we set up earlier. To do this, we need to edit the config/database.yml file as follows:</p><pre><code class=\"language-plaintext\">production:\n  adapter: mysql2\n  encoding: utf8\n  reconnect: false\n  database: gitlabhq_production\n  pool: 10\n  username: gitlab\n  password: \"**enter-mysql-password**\"\n</code></pre><p style=\"margin-left:0px;\">Once we save the file, we should change its access level, so the other users can’t find our password:</p><pre><code class=\"language-plaintext\"># sudo -u git -H chmod o-rwx config/database.yml\n</code></pre><p style=\"margin-left:0px;\">Now we need to install a few gem and the final step (enter yes when asked):</p><pre><code class=\"language-plaintext\"># cd /home/git/gitlab\n# sudo gem install charlock_holmes --version '0.6.9.4'\n# sudo -u git -H bundle install --deployment --without development test postgres aws\n# sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production\n</code></pre><p style=\"margin-left:0px;\">If everything is installed successfully, we will get output similar to:</p><pre><code class=\"language-plaintext\">Administrator account created:\n\nlogin.........admin@local.host\npassword......**your-password**\n</code></pre><p style=\"margin-left:0px;\">Remember to change the password after the first login. We should set GitLab to start on server boot:</p><pre><code class=\"language-plaintext\"># sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab\n# sudo chmod +x /etc/init.d/gitlab\n# sudo update-rc.d gitlab defaults 21\n</code></pre><p style=\"margin-left:0px;\">In order to make sure that everything is running, we execute the following command. If no error message is displayed, we are good. We can proceed and start GitLab</p><pre><code class=\"language-plaintext\"># sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production\n# sudo service gitlab start\n</code></pre><p style=\"margin-left:0px;\">Now we need to install and make everything accessible via the web. We will use Nginx for this, once you install it, we copy the same configuration file that came with GitLab.</p><pre><code class=\"language-plaintext\"># cd /home/git/gitlab\n# sudo cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab\n# sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab\n</code></pre><p style=\"margin-left:0px;\">We need to edit /etc/nginx/sites-available/gitlab file to use your domain name. The setting is in the beginning on the file, so it should look similar to:</p><pre><code class=\"language-plaintext\">server {\n  listen *:80 default_server;         # e.g., listen 192.168.1.1:80; In most cases *:80 is a good idea\n  server_name **yourdomain.com**;     #\n</code></pre><p style=\"margin-left:0px;\">You will have to put your fully qualified domain name instead of <strong>yourdomain.com</strong> then restart Nginx:</p><pre><code class=\"language-plaintext\"># sudo service nginx restart\n</code></pre><p style=\"margin-left:0px;\">That should be all. We have our own GitLab server fully functional. If we point our browser to the domain name we used for this installation, we will get the GitLab login prompt. We can log in with the username and provided that you used when installing, but we should change it right away. Now we can host and manage as many projects as we like.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:30:15.428Z","created_at":"2021-03-30T04:30:11.341Z","updated_at":"2021-03-30T04:30:15.718Z","PostSEO":{"id":499,"GoogleSEO":{"id":490,"Title":"How To Install GitLab As Your Private GitHub Clone - VEXXHOST","Description":"Git is a distributed revision control and source code management (SCM) system with an emphasis on speed. Every Git working directory is a full-fledged"},"FacebookSEO":{"id":486,"Title":"How To Install GitLab As Your Private GitHub Clone - VEXXHOST","Url":null,"Description":"Git is a distributed revision control and source code management (SCM) system with an emphasis on speed. Every Git working directory is a full-fledged","SiteName":"VEXXHOST","Image":{"id":612,"name":"How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078563/small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"small_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":266.58,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078563/medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"medium_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":588.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078561/thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"thumbnail_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":71.13,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}}},"hash":"How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","ext":".png","mime":"image/png","size":533.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078561/How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"},"created_at":"2021-03-30T04:29:24.129Z","updated_at":"2021-03-30T04:29:24.137Z"}},"TwitterSEO":{"id":486,"Description":"Git is a distributed revision control and source code management (SCM) system with an emphasis on speed. Every Git working directory is a full-fledged","Title":"How To Install GitLab As Your Private GitHub Clone - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":612,"name":"How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078563/small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"small_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":266.58,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078563/medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"medium_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":588.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078561/thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"thumbnail_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":71.13,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}}},"hash":"How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","ext":".png","mime":"image/png","size":533.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078561/How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"},"created_at":"2021-03-30T04:29:24.129Z","updated_at":"2021-03-30T04:29:24.137Z"}}},"LinkToResource":{"id":417,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":612,"name":"How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078563/small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"small_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":266.58,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078563/medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"medium_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":588.96,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078561/thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","hash":"thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","mime":"image/png","name":"thumbnail_How-To-Install-GitLab-As-Your-Private-GitHub-Clone-800x400.png","path":null,"size":71.13,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"}}},"hash":"How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","ext":".png","mime":"image/png","size":533.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078561/How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_Git_Lab_As_Your_Private_Git_Hub_Clone_800x400_9996b3085d","resource_type":"image"},"created_at":"2021-03-30T04:29:24.129Z","updated_at":"2021-03-30T04:29:24.137Z"},"TextContent":"Git is a distributed revision control and source code management (SCM) system with an emphasis on speed. Every Git working directory is a full-fledged repository with complete history and full version tracking capabilities, not dependent on network access or a central server. Git is free software distributed under the terms of the GNU General Public License version 2.GitHub is a web-based hosting service for software development projects that use the Git revision control system. GitHub offers both paid plans for private repositories and free accounts for open-source projects.In this tutorial, we will explain how to get your own GitHub instance running on your own Ubuntu 12.04 VPS. Ubuntu 12.04 is recommended because of some incompatibilities between Python and Ruby on other Linux distributions. Also, make sure you have at least 1GB RAM memory on your VPS. Our first step is to install some required packages and dependencies.# sudo apt-get update\n# sudo apt-get install -y build-essential zlib1g-dev libyaml-dev libssl-dev libgdbm-dev libreadline-dev libncurses5-dev libffi-dev curl git-core openssh-server redis-server checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev libicu-dev\nThen, we are going to install Ruby 2.0.# mkdir /tmp/ruby && cd /tmp/ruby\n# curl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz | tar xz\n# cd ruby-2.0.0-p247\n# ./configure\n# make\n# sudo make install\nOnce it is finished, we should make sure we are having the required version with and we should get an output with the Ruby version:# ruby –version\nThen, we need to install Bundler gem. Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed. We also need to add agit\nuser that will be used by GitLab.# sudo gem install bundler --no-ri --no-rdoc\n# sudo adduser --disabled-login --gecos 'GitLab' git\nOnce we are done with this, our next task is to clone the GitLab shell from its repository and set the environment.# cd /home/git\n# sudo -u git -H git clone https://github.com/gitlabhq/gitlab-shell.git\n# cd gitlab-shell\n# sudo -u git -H git checkout v1.7.0\n# sudo -u git -H cp config.yml.example config.yml\nNow we have a local copy of the GitLab shell. There should be a sample config.yml file with it. We should open config.yml using our favourite text editor and edit as follows:gitlab_url: \"http://**yourdomain.com**/\"\nOnce that’s done, you can move on to running the GitLab shell installer:# sudo -u git -H ./bin/install\nWe will use MySQL as the database backend and connect GitLab to it. We need to install MySQL database server packages first. We will be asked to set a password during the installation. Make sure you remember or write it down because we will need it later.# sudo apt-get install -y mysql-server mysql-client libmysqlclient-dev\nNow, we should log in to MySQL, using the password that we set and create the required user and database for GitLab.# mysql -u root –p\nOnce we enter the password, we are in the MySQL command prompt. We will add users, create databases and set the correct privileges to it.CREATE USER 'gitlab'@'localhost' IDENTIFIED BY '**enter-mysql-password**';\nCREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;\nGRANT SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON `gitlabhq_production`.* TO 'gitlab'@'localhost';\nTo make sure your new MySQL user was created successfully let’s log in to mysql using the GitLab user. When you’ll be asked for the password, make sure to enter the one you selected above.# mysql -u gitlab –p\nIf everything worked fine, we can proceed with the GitLab installation:# cd /home/git\n# sudo -u git -H git clone https://github.com/gitlabhq/gitlabhq.git gitlab\n# cd /home/git/gitlab\n# sudo -u git -H git checkout 6-0-stable\n# sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml\nSimilar like we did with the GitLab shell set up if we have a domain configured for our VPS we need to edit the config.yml to use that domain. We should edit the file as follows:gitlab:\n## Web server settings\nhost: **yourdomain.com**\nport: 80\nhttps: false\nNow we need to execute several commands in order to set the proper privileges for everything we installed:cd /home/git/gitlab\nsudo chown -R git log/\nsudo chown -R git tmp/\nsudo chmod -R u+rwX  log/\nsudo chmod -R u+rwX  tmp/\nsudo -u git -H mkdir /home/git/gitlab-satellites\nsudo -u git -H mkdir tmp/pids/\nsudo -u git -H mkdir tmp/sockets/\nsudo chmod -R u+rwX  tmp/pids/\nsudo chmod -R u+rwX  tmp/sockets/\nsudo -u git -H mkdir public/uploads\nsudo chmod -R u+rwX  public/uploads\nsudo -u git -H cp config/unicorn.rb.example config/unicorn.rb\nsudo -u git -H git config --global user.name \"GitLab\"\nsudo -u git -H git config --global user.email \"gitlab@localhost\"\nsudo -u git -H git config --global core.autocrlf input\nsudo -u git cp config/database.yml.mysql config/database.yml\nNow we need to configure GitLab to be able to connect to the MySQL database using the user we set up earlier. To do this, we need to edit the config/database.yml file as follows:production:\n  adapter: mysql2\n  encoding: utf8\n  reconnect: false\n  database: gitlabhq_production\n  pool: 10\n  username: gitlab\n  password: \"**enter-mysql-password**\"\nOnce we save the file, we should change its access level, so the other users can’t find our password:# sudo -u git -H chmod o-rwx config/database.yml\nNow we need to install a few gem and the final step (enter yes when asked):# cd /home/git/gitlab\n# sudo gem install charlock_holmes --version '0.6.9.4'\n# sudo -u git -H bundle install --deployment --without development test postgres aws\n# sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production\nIf everything is installed successfully, we will get output similar to:Administrator account created:\n\nlogin.........admin@local.host\npassword......**your-password**\nRemember to change the password after the first login. We should set GitLab to start on server boot:# sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab\n# sudo chmod +x /etc/init.d/gitlab\n# sudo update-rc.d gitlab defaults 21\nIn order to make sure that everything is running, we execute the following command. If no error message is displayed, we are good. We can proceed and start GitLab# sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production\n# sudo service gitlab start\nNow we need to install and make everything accessible via the web. We will use Nginx for this, once you install it, we copy the same configuration file that came with GitLab.# cd /home/git/gitlab\n# sudo cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab\n# sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab\nWe need to edit /etc/nginx/sites-available/gitlab file to use your domain name. The setting is in the beginning on the file, so it should look similar to:server {\n  listen *:80 default_server;         # e.g., listen 192.168.1.1:80; In most cases *:80 is a good idea\n  server_name **yourdomain.com**;     #\nYou will have to put your fully qualified domain name instead of yourdomain.com then restart Nginx:# sudo service nginx restart\nThat should be all. We have our own GitLab server fully functional. If we point our browser to the domain name we used for this installation, we will get the GitLab login prompt. We can log in with the username and provided that you used when installing, but we should change it right away. Now we can host and manage as many projects as we like."},{"id":26,"Title":"How To Deploy Django on Nginx, Gunicorn with Postgres","Slug":"resources/tutorials/how-to-deploy-django-on-nginx-gunicorn-with-postgres","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Django is a free and open source web application framework, written in Python, which follows the model–view–controller architectural pattern. It is maintained by the Django Software Foundation (DSF) and its primary goal is to ease the creation of complex, database-driven websites.</p><p style=\"margin-left:0px;\">This tutorial applies to Debian 7. (but might work on the similar distributions). Before we start with the installation, we need to make sure that our system and our repositories are up to date and then we need to install and create virtualenv.</p><pre><code class=\"language-plaintext\"># sudo apt-get update\n# sudo apt-get upgrade\n# sudo apt-get install python-virtualenv\n# sudo virtualenv /opt/virtualenv\n</code></pre><p style=\"margin-left:0px;\">We have now created the directory which will be the home for virtualenv. Before we proceed with Python packages installation, we need to activate our virtualenv.</p><pre><code class=\"language-plaintext\"># source /opt/virtualenv/bin/activate\n</code></pre><p style=\"margin-left:0px;\">We will now notice that see that (virtualenv) has been appended to the beginning of the terminal prompt. This will help us know when our virtualenv is active and which virtualenv is active (in case we have multiple virtualenv’s on the VPS). Now it is time to install Django. To do this, we will use pip, a Python package manager much like easy_install:</p><pre><code class=\"language-plaintext\"># pip install django\n</code></pre><p style=\"margin-left:0px;\">We now have Django installed. The next step is the database. Most Django users prefer to use PostgreSQL as their database server. It is much more robust than MySQL and the Django ORM works much better with PostgreSQL than MySQL, MSSQL, or others. We don’t need Virtualenv active for PostgreSQL installation, so we can deactivate it:</p><pre><code class=\"language-plaintext\"># deactivate\n</code></pre><p style=\"margin-left:0px;\">Then we need to install dependencies for PostgreSQL to work with Django and install PostgreSQL database service:</p><pre><code class=\"language-plaintext\"># sudo apt-get install libpq-dev python-dev\n# sudo apt-get install postgresql postgresql-contrib\n</code></pre><p style=\"margin-left:0px;\">PostgreSQL is now installed on our VPS. Next thing to install is nginx. We will use nginx as web server, since it fast, light-weight server and compatible with Python. To install it, we simply execute:</p><pre><code class=\"language-plaintext\"># sudo apt-get install nginx\n</code></pre><p style=\"margin-left:0px;\">Gunicorn is a very powerful Python WSGI HTTP Server. It is a Python package we need to first activate our virtualenv to install it. With our virtualenv active, we are going to run this command:</p><pre><code class=\"language-plaintext\"># source /opt/myenv/bin/activate\n# pip install gunicorn\n</code></pre><p style=\"margin-left:0px;\">Gunicorn is now installed in our virtualenv. At this point we have everything we need installed. Now, we need to proceed with the services configuration process. We will start our configuration with PostgreSQL. With PostgreSQL we need to create a database, create a user, and grant the user we created access to the database we created. Start off by running the following command:</p><pre><code class=\"language-plaintext\"># sudo su – postgres\n</code></pre><p style=\"margin-left:0px;\">Then, we run this command to create your database and once we have now a database that is named newdb, we will create database user:</p><pre><code class=\"language-plaintext\"># created newdb\n# createuser –P\n</code></pre><p style=\"margin-left:0px;\">We will get a series of 6 prompts during the process. The first one will ask you for the name of the new user. The next two prompts are for our password and confirmation of password for the new user. For the last 3 prompts just enter “n” and hit “enter”. This just ensures your new users only has access to what you give it access to and nothing else. Now we can start PostgreSQL console and set access for the new user that we just created:</p><pre><code class=\"language-plaintext\"># psql\n# GRANT ALL PRIVILEGES ON DATABASE newdb TO newuser;\n</code></pre><p style=\"margin-left:0px;\">Now that we have database with user that is able to access it, we need to set those parameters in our Django project. We are going to create new Django project. In order to do that, we need to change to virtualenv directory, activate it and then create new project:</p><pre><code class=\"language-plaintext\"># cd /opt/myenv\n# source /opt/myenv/bin/activate\n# django-admin.py startproject newproject\n</code></pre><p style=\"margin-left:0px;\">We should be able to see a new directory called “newproject” inside our virtualenv directory. This is where our new Django project files live. In order for our project to be able to talk to our database we need to install a additional packages with using pip (while virtualenv still active).</p><pre><code class=\"language-plaintext\"># pip install psycopg2\n</code></pre><p style=\"margin-left:0px;\">Now, we change into our new project’s directory and edit settings.py file using our favorite editor. The database settings in the file should look like:</p><pre><code class=\"language-plaintext\">    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.\n            'NAME': 'newdb',                      # Or path to database file if using sqlite3.\n            # The following settings are not used with sqlite3:\n            'USER': 'newuser',\n            'PASSWORD': 'password',\n            'HOST': 'localhost',                      # Empty for localhost through domain sockets or           '127.0.0.1' for localhost through TCP.\n            'PORT': '',                      # Set to empty string for default.\n        }\n</code></pre><p style=\"margin-left:0px;\">Now, we should move to our main project directory and make sure virtualenv is activated. Once we make sure that virtualenv is active, we can run the following command so that Django can add its initial configuration and other tables to our database:</p><pre><code class=\"language-plaintext\"># cd /opt/virtualenv/newproject\n# source /opt/myenv/bin/activate\n# python manage.py syncdb\n</code></pre><p style=\"margin-left:0px;\">We should get some output describing what tables were installed, followed by a prompt asking if you want to create a superuser. This is optional and depends on if we want to use Django’s authentication system or the Django admin.</p><p style=\"margin-left:0px;\">Gunicorn configuration is very specific to our applications needs. First we will go over running Gunicorn with default settings. Here is the command to just run default Gunicorn:</p><pre><code class=\"language-plaintext\"># gunicorn_django --bind **your-fully-qualified-domain-name.com**:8001\n</code></pre><p style=\"margin-left:0px;\">If we now point our browser to our-fully-qualified-domain-name.com:8001, we should get the Django welcome screen. Using the command above, we started one worker process only. In production environment we will need more than one. We can control the number of processes from the command line, so if we want to start 5 worker processes, the command will be:</p><pre><code class=\"language-plaintext\"># gunicorn_django –workers=5 --bind **your-fully-qualified-domain-name.com**:8001\n</code></pre><p style=\"margin-left:0px;\">If we want to rung Gunicorn and user other than root, then we have:</p><pre><code class=\"language-plaintext\"># gunicorn_django --workers=5 --user=nobody --bind **your-fully-qualified-domain-name.com**:8001\n</code></pre><p style=\"margin-left:0px;\">Since we might end up having a lot of different input parameters, it is better if we just create configuration file and use that when starting Gunicorn. We can create our configuration file in virtualenv directory for example (/opt/virtualenv/gunicorn_cfg.py), and put the following configuration for the setting we used before:</p><pre><code class=\"language-plaintext\">command = '/opt/myenv/bin/gunicorn'\npythonpath = '/opt/myenv/myproject'\nbind = '127.0.0.1:8001'\nworkers = 5\nuser = 'nobody'\n</code></pre><p style=\"margin-left:0px;\">Now, if we want to run the server, we should execute the following command:</p><pre><code class=\"language-plaintext\"># /opt/myenv/bin/gunicorn -c /opt/myenv/gunicorn_config.py myproject.wsgi\n</code></pre><p style=\"margin-left:0px;\">The “-c” flag, tells gunicorn that we have a config file we want to use, which we pass in just after the “-c” flag. We also pass in a Python dotted notation reference to our WSGI file so that Gunicorn knows where our WSGI file is. For further information about Gunicorn, please read the Gunicorn documentation found at gunicorn.org for more on this topic.</p><p style=\"margin-left:0px;\">The last thing we need to do is to configure nginx. Since we are only setting NGINX to handle static files we need to first decide where our static files will be stored. We should open our settings.py file for our Django project and edit the STATIC_ROOT line to look like this:</p><pre><code class=\"language-plaintext\">STATIC_ROOT = \"/opt/virtualenv/static/\"\n</code></pre><p style=\"margin-left:0px;\">Now that you’ve set up where your static files will be located, we need to configure NGINX to handle the static files and be able to connect to Gunicorn. We should create a new file named /etc/nginx/sites-enabled/newproject and put the following content inside:</p><pre><code class=\"language-plaintext\">server {\n    server_name **your-fully-qualified-domain-name.com**;\n\n    access_log off;\n\n    location /static/ {\n        alias /opt/virtualenv/static/;\n    }\n\n    location / {\n        proxy_pass http://127.0.0.1:8001;\n        proxy_set_header X-Forwarded-Host $server_name;\n        proxy_set_header X-Real-IP $remote_addr;\n        add_header P3P 'CP=\"ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV\"';\n    }\n}\n</code></pre><p style=\"margin-left:0px;\">In order to apply settings, we need to restart Nginx and we are good to go:</p><pre><code class=\"language-plaintext\"># sudo service nginx restart\n</code></pre><p style=\"margin-left:0px;\">We are done are ready to go now. We can repeated the procedure for creating new application, have another Gunicorn instance running on another port and have additional nginx configuration file. That way we will be able to have many projects and host many website on our VPS.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:36:23.239Z","created_at":"2021-03-30T04:36:15.633Z","updated_at":"2021-03-30T04:36:23.510Z","PostSEO":{"id":500,"GoogleSEO":{"id":491,"Title":"How To Deploy Django on Nginx, Gunicorn with Postgres - VEXXHOST","Description":"Django is a free and open source web application framework, written in Python, which follows the model–view–controller architectural pattern. It is"},"FacebookSEO":{"id":487,"Title":"How To Deploy Django on Nginx, Gunicorn with Postgres - VEXXHOST","Url":null,"Description":"Django is a free and open source web application framework, written in Python, which follows the model–view–controller architectural pattern. It is","SiteName":"VEXXHOST","Image":{"id":613,"name":"How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078924/small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"small_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":30.54,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078924/medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"medium_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":83.68,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078922/thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"thumbnail_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":7.21,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}}},"hash":"How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","ext":".png","mime":"image/png","size":48.14,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078921/How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"},"created_at":"2021-03-30T04:35:25.215Z","updated_at":"2021-03-30T04:35:25.228Z"}},"TwitterSEO":{"id":487,"Description":"Django is a free and open source web application framework, written in Python, which follows the model–view–controller architectural pattern. It is","Title":"How To Deploy Django on Nginx, Gunicorn with Postgres - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":613,"name":"How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078924/small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"small_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":30.54,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078924/medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"medium_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":83.68,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078922/thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"thumbnail_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":7.21,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}}},"hash":"How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","ext":".png","mime":"image/png","size":48.14,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078921/How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"},"created_at":"2021-03-30T04:35:25.215Z","updated_at":"2021-03-30T04:35:25.228Z"}}},"LinkToResource":{"id":418,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":613,"name":"How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078924/small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"small_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":30.54,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078924/medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"medium_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":83.68,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078922/thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","hash":"thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","mime":"image/png","name":"thumbnail_How-To-Deploy-Django-on-Nginx-Gunicorn-with-Postgres-800x400.png","path":null,"size":7.21,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"}}},"hash":"How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","ext":".png","mime":"image/png","size":48.14,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617078921/How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Deploy_Django_on_Nginx_Gunicorn_with_Postgres_800x400_02350f8a58","resource_type":"image"},"created_at":"2021-03-30T04:35:25.215Z","updated_at":"2021-03-30T04:35:25.228Z"},"TextContent":"Django is a free and open source web application framework, written in Python, which follows the model–view–controller architectural pattern. It is maintained by the Django Software Foundation (DSF) and its primary goal is to ease the creation of complex, database-driven websites.This tutorial applies to Debian 7. (but might work on the similar distributions). Before we start with the installation, we need to make sure that our system and our repositories are up to date and then we need to install and create virtualenv.# sudo apt-get update\n# sudo apt-get upgrade\n# sudo apt-get install python-virtualenv\n# sudo virtualenv /opt/virtualenv\nWe have now created the directory which will be the home for virtualenv. Before we proceed with Python packages installation, we need to activate our virtualenv.# source /opt/virtualenv/bin/activate\nWe will now notice that see that (virtualenv) has been appended to the beginning of the terminal prompt. This will help us know when our virtualenv is active and which virtualenv is active (in case we have multiple virtualenv’s on the VPS). Now it is time to install Django. To do this, we will use pip, a Python package manager much like easy_install:# pip install django\nWe now have Django installed. The next step is the database. Most Django users prefer to use PostgreSQL as their database server. It is much more robust than MySQL and the Django ORM works much better with PostgreSQL than MySQL, MSSQL, or others. We don’t need Virtualenv active for PostgreSQL installation, so we can deactivate it:# deactivate\nThen we need to install dependencies for PostgreSQL to work with Django and install PostgreSQL database service:# sudo apt-get install libpq-dev python-dev\n# sudo apt-get install postgresql postgresql-contrib\nPostgreSQL is now installed on our VPS. Next thing to install is nginx. We will use nginx as web server, since it fast, light-weight server and compatible with Python. To install it, we simply execute:# sudo apt-get install nginx\nGunicorn is a very powerful Python WSGI HTTP Server. It is a Python package we need to first activate our virtualenv to install it. With our virtualenv active, we are going to run this command:# source /opt/myenv/bin/activate\n# pip install gunicorn\nGunicorn is now installed in our virtualenv. At this point we have everything we need installed. Now, we need to proceed with the services configuration process. We will start our configuration with PostgreSQL. With PostgreSQL we need to create a database, create a user, and grant the user we created access to the database we created. Start off by running the following command:# sudo su – postgres\nThen, we run this command to create your database and once we have now a database that is named newdb, we will create database user:# created newdb\n# createuser –P\nWe will get a series of 6 prompts during the process. The first one will ask you for the name of the new user. The next two prompts are for our password and confirmation of password for the new user. For the last 3 prompts just enter “n” and hit “enter”. This just ensures your new users only has access to what you give it access to and nothing else. Now we can start PostgreSQL console and set access for the new user that we just created:# psql\n# GRANT ALL PRIVILEGES ON DATABASE newdb TO newuser;\nNow that we have database with user that is able to access it, we need to set those parameters in our Django project. We are going to create new Django project. In order to do that, we need to change to virtualenv directory, activate it and then create new project:# cd /opt/myenv\n# source /opt/myenv/bin/activate\n# django-admin.py startproject newproject\nWe should be able to see a new directory called “newproject” inside our virtualenv directory. This is where our new Django project files live. In order for our project to be able to talk to our database we need to install a additional packages with using pip (while virtualenv still active).# pip install psycopg2\nNow, we change into our new project’s directory and edit settings.py file using our favorite editor. The database settings in the file should look like:    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.\n            'NAME': 'newdb',                      # Or path to database file if using sqlite3.\n            # The following settings are not used with sqlite3:\n            'USER': 'newuser',\n            'PASSWORD': 'password',\n            'HOST': 'localhost',                      # Empty for localhost through domain sockets or           '127.0.0.1' for localhost through TCP.\n            'PORT': '',                      # Set to empty string for default.\n        }\nNow, we should move to our main project directory and make sure virtualenv is activated. Once we make sure that virtualenv is active, we can run the following command so that Django can add its initial configuration and other tables to our database:# cd /opt/virtualenv/newproject\n# source /opt/myenv/bin/activate\n# python manage.py syncdb\nWe should get some output describing what tables were installed, followed by a prompt asking if you want to create a superuser. This is optional and depends on if we want to use Django’s authentication system or the Django admin.Gunicorn configuration is very specific to our applications needs. First we will go over running Gunicorn with default settings. Here is the command to just run default Gunicorn:# gunicorn_django --bind **your-fully-qualified-domain-name.com**:8001\nIf we now point our browser to our-fully-qualified-domain-name.com:8001, we should get the Django welcome screen. Using the command above, we started one worker process only. In production environment we will need more than one. We can control the number of processes from the command line, so if we want to start 5 worker processes, the command will be:# gunicorn_django –workers=5 --bind **your-fully-qualified-domain-name.com**:8001\nIf we want to rung Gunicorn and user other than root, then we have:# gunicorn_django --workers=5 --user=nobody --bind **your-fully-qualified-domain-name.com**:8001\nSince we might end up having a lot of different input parameters, it is better if we just create configuration file and use that when starting Gunicorn. We can create our configuration file in virtualenv directory for example (/opt/virtualenv/gunicorn_cfg.py), and put the following configuration for the setting we used before:command = '/opt/myenv/bin/gunicorn'\npythonpath = '/opt/myenv/myproject'\nbind = '127.0.0.1:8001'\nworkers = 5\nuser = 'nobody'\nNow, if we want to run the server, we should execute the following command:# /opt/myenv/bin/gunicorn -c /opt/myenv/gunicorn_config.py myproject.wsgi\nThe “-c” flag, tells gunicorn that we have a config file we want to use, which we pass in just after the “-c” flag. We also pass in a Python dotted notation reference to our WSGI file so that Gunicorn knows where our WSGI file is. For further information about Gunicorn, please read the Gunicorn documentation found at gunicorn.org for more on this topic.The last thing we need to do is to configure nginx. Since we are only setting NGINX to handle static files we need to first decide where our static files will be stored. We should open our settings.py file for our Django project and edit the STATIC_ROOT line to look like this:STATIC_ROOT = \"/opt/virtualenv/static/\"\nNow that you’ve set up where your static files will be located, we need to configure NGINX to handle the static files and be able to connect to Gunicorn. We should create a new file named /etc/nginx/sites-enabled/newproject and put the following content inside:server {\n    server_name **your-fully-qualified-domain-name.com**;\n\n    access_log off;\n\n    location /static/ {\n        alias /opt/virtualenv/static/;\n    }\n\n    location / {\n        proxy_pass http://127.0.0.1:8001;\n        proxy_set_header X-Forwarded-Host $server_name;\n        proxy_set_header X-Real-IP $remote_addr;\n        add_header P3P 'CP=\"ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV\"';\n    }\n}\nIn order to apply settings, we need to restart Nginx and we are good to go:# sudo service nginx restart\nWe are done are ready to go now. We can repeated the procedure for creating new application, have another Gunicorn instance running on another port and have additional nginx configuration file. That way we will be able to have many projects and host many website on our VPS. Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost."},{"id":29,"Title":"How To Install and Use EasyEngine (ee) on Ubuntu","Slug":"resources/tutorials/how-to-install-and-use-easyengine-ee-on-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">EasyEngine (ee) is a linux shell-script collection, which makes managing your WordPress and Nginx sites on an Ubuntu server easy and fun. EasyEngine makes it very easy to manage Nginx and we will no longer need to recall complex commands or depend on system administrators. As an interface for Nginx, EasyEngine is known to perform better and faster than Apache, particularly when the number of concurrent site visitors is on the rise.</p><p style=\"margin-left:0px;\">Easy Engine would work on any Debian-based distribution, but for these tutorial we are using Ubuntu. Most of the official tests are also done on Ubuntu. In order to install it our Ubuntu server, we need to have full root access. Installation process consists of several commands and it is actually pretty simple and straight forward:</p><pre><code class=\"language-plaintext\"># curl -sL rt.cx/ee | sudo bash\n# ee system install\n</code></pre><p style=\"margin-left:0px;\">The first command will install easy engine, and the second command will install all other required packages. EE will always install the latest stable version of the packages (Latest PHP, MySQL, etc.) During the installation we will get few prompts where we need to answer “yes” in order for the installation to complete. Once we have it installed, we can create new wordpress with the command:</p><pre><code class=\"language-plaintext\"># ee site create our-domain.com --wp\n</code></pre><p style=\"margin-left:0px;\">This will create and install fresh and clean WordPress installation that will be accessible at http://our-domain.com. EasyEngine supports several types of WordPress websites as well as non WordPress websites. Here is a list of all websites and commands to create them:</p><p style=\"margin-left:0px;\"><strong>Standard WordPress Sites</strong></p><pre><code class=\"language-plaintext\">ee site create example.com --wp     # install wordpress without any page caching\nee site create example.com --w3tc     # install wordpress with w3-total-cache plugin\nee site create example.com --wpsc     # install wordpress with wp-super-cache plugin\nee site create example.com --wpfc     # install wordpress + nginx fastcgi_cache\n</code></pre><p style=\"margin-left:0px;\"><strong>Multisite WordPress with sub-directory</strong></p><pre><code class=\"language-plaintext\">ee site create example.com --wpsubdir     # install wpmu-subdirectory without any page caching\nee site create example.com --wpsubdir --w3tc     # install wpmu-subdirectory with w3-total-cache plugin\nee site create example.com --wpsubdir --wpsc     # install wpmu-subdirectory with wp-super-cache plugin\nee site create example.com --wpsubdir --wpfc     # install wpmu-subdirectory + nginx fastcgi_cache\n</code></pre><p style=\"margin-left:0px;\"><strong>Multisite WordPress with sub-domain</strong></p><pre><code class=\"language-plaintext\">ee site create example.com --wpsubdom     # install wpmu-subdomain without any page caching\nee site create example.com --wpsubdom --w3tc     # install wpmu-subdomain with w3-total-cache plugin\nee site create example.com --wpsubdom --wpsc     # install wpmu-subdomain with wp-super-cache plugin\nee site create example.com --wpsubdom --wpfc     # install wpmu-subdomain + nginx fastcgi_cache\n</code></pre><p style=\"margin-left:0px;\"><strong>Standard Website</strong></p><pre><code class=\"language-plaintext\">ee site create example.com --html           # create example.com for static/html sites\nee site create example.com --php      # create example.com with php support\nee site create example.com --mysql      # create example.com with php &amp; mysql support\n</code></pre><p style=\"margin-left:0px;\">Different configuration options for EasyEngine can be set in the /etc/easyengine/ee.conf file. We can choose to use remote MySQL host, set basic HTTP authentication, default username and password for new wordpress installations, etc. All we have to do is open the file and using our favorite text editor and do the changes. The file is very well documented.</p><p style=\"margin-left:0px;\">Upgrading easy engine is the latest version is also very easy. If we are upgrading from easyengine 1.0 to 1.1 and above, we should use the command:</p><pre><code class=\"language-plaintext\"># /bin/bash\n\nIf we are upgrading from version 1.1 and above we should use the command\n\n# ee update\n</code></pre><p style=\"margin-left:0px;\">This concludes the easy part, installation and configuration. According to EasyEngine created, the hardest part is the create WordPress page with high traffic and heavy enough to crash it. So, you can give it a try on your VPS.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:41:45.536Z","created_at":"2021-03-30T04:41:39.328Z","updated_at":"2021-03-30T04:41:45.829Z","PostSEO":{"id":503,"GoogleSEO":{"id":494,"Title":"How To Install and Use EasyEngine (ee) on Ubuntu - VEXXHOST","Description":"EasyEngine (ee) is a linux shell-script collection, which makes managing your WordPress and Nginx sites on an Ubuntu server easy and fun. EasyEngine makes"},"FacebookSEO":{"id":490,"Title":"How To Install and Use EasyEngine (ee) on Ubuntu - VEXXHOST","Url":null,"Description":"EasyEngine (ee) is a linux shell-script collection, which makes managing your WordPress and Nginx sites on an Ubuntu server easy and fun. EasyEngine makes","SiteName":"VEXXHOST","Image":{"id":616,"name":"How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079243/small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"small_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":96.78,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079242/medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"medium_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":223.68,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079240/thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"thumbnail_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":26.36,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}}},"hash":"How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","ext":".png","mime":"image/png","size":185.27,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079240/How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"},"created_at":"2021-03-30T04:40:43.711Z","updated_at":"2021-03-30T04:40:43.734Z"}},"TwitterSEO":{"id":490,"Description":"EasyEngine (ee) is a linux shell-script collection, which makes managing your WordPress and Nginx sites on an Ubuntu server easy and fun. EasyEngine makes","Title":"How To Install and Use EasyEngine (ee) on Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":616,"name":"How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079243/small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"small_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":96.78,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079242/medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"medium_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":223.68,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079240/thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"thumbnail_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":26.36,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}}},"hash":"How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","ext":".png","mime":"image/png","size":185.27,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079240/How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"},"created_at":"2021-03-30T04:40:43.711Z","updated_at":"2021-03-30T04:40:43.734Z"}}},"LinkToResource":{"id":421,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":616,"name":"How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079243/small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"small_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":96.78,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079242/medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"medium_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":223.68,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079240/thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","hash":"thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","mime":"image/png","name":"thumbnail_How-To-Install-and-Use-EasyEngine-ee-on-Ubuntu-800x400.png","path":null,"size":26.36,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"}}},"hash":"How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","ext":".png","mime":"image/png","size":185.27,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079240/How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Install_and_Use_Easy_Engine_ee_on_Ubuntu_800x400_3e0ce7f052","resource_type":"image"},"created_at":"2021-03-30T04:40:43.711Z","updated_at":"2021-03-30T04:40:43.734Z"},"TextContent":"EasyEngine (ee) is a linux shell-script collection, which makes managing your WordPress and Nginx sites on an Ubuntu server easy and fun. EasyEngine makes it very easy to manage Nginx and we will no longer need to recall complex commands or depend on system administrators. As an interface for Nginx, EasyEngine is known to perform better and faster than Apache, particularly when the number of concurrent site visitors is on the rise.Easy Engine would work on any Debian-based distribution, but for these tutorial we are using Ubuntu. Most of the official tests are also done on Ubuntu. In order to install it our Ubuntu server, we need to have full root access. Installation process consists of several commands and it is actually pretty simple and straight forward:# curl -sL rt.cx/ee | sudo bash\n# ee system install\nThe first command will install easy engine, and the second command will install all other required packages. EE will always install the latest stable version of the packages (Latest PHP, MySQL, etc.) During the installation we will get few prompts where we need to answer “yes” in order for the installation to complete. Once we have it installed, we can create new wordpress with the command:# ee site create our-domain.com --wp\nThis will create and install fresh and clean WordPress installation that will be accessible at http://our-domain.com. EasyEngine supports several types of WordPress websites as well as non WordPress websites. Here is a list of all websites and commands to create them:Standard WordPress Sitesee site create example.com --wp     # install wordpress without any page caching\nee site create example.com --w3tc     # install wordpress with w3-total-cache plugin\nee site create example.com --wpsc     # install wordpress with wp-super-cache plugin\nee site create example.com --wpfc     # install wordpress + nginx fastcgi_cache\nMultisite WordPress with sub-directoryee site create example.com --wpsubdir     # install wpmu-subdirectory without any page caching\nee site create example.com --wpsubdir --w3tc     # install wpmu-subdirectory with w3-total-cache plugin\nee site create example.com --wpsubdir --wpsc     # install wpmu-subdirectory with wp-super-cache plugin\nee site create example.com --wpsubdir --wpfc     # install wpmu-subdirectory + nginx fastcgi_cache\nMultisite WordPress with sub-domainee site create example.com --wpsubdom     # install wpmu-subdomain without any page caching\nee site create example.com --wpsubdom --w3tc     # install wpmu-subdomain with w3-total-cache plugin\nee site create example.com --wpsubdom --wpsc     # install wpmu-subdomain with wp-super-cache plugin\nee site create example.com --wpsubdom --wpfc     # install wpmu-subdomain + nginx fastcgi_cache\nStandard Websiteee site create example.com --html           # create example.com for static/html sites\nee site create example.com --php      # create example.com with php support\nee site create example.com --mysql      # create example.com with php & mysql support\nDifferent configuration options for EasyEngine can be set in the /etc/easyengine/ee.conf file. We can choose to use remote MySQL host, set basic HTTP authentication, default username and password for new wordpress installations, etc. All we have to do is open the file and using our favorite text editor and do the changes. The file is very well documented.Upgrading easy engine is the latest version is also very easy. If we are upgrading from easyengine 1.0 to 1.1 and above, we should use the command:# /bin/bash\n\nIf we are upgrading from version 1.1 and above we should use the command\n\n# ee update\nThis concludes the easy part, installation and configuration. According to EasyEngine created, the hardest part is the create WordPress page with high traffic and heavy enough to crash it. So, you can give it a try on your VPS."},{"id":27,"Title":"How To Mitigate & Fix OpenSSL Heartbeat on CentOS or Ubuntu","Slug":"resources/tutorials/how-to-mitigate-and-fix-openssl-heartbeat-on-centos-or-ubuntu","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">An extremely critical security issue was recently discovered in OpenSSL. It has been found affecting versions 1.0.1 through 1.0.1f. All CentOS 6.5 versions are packaged with OpenSSL 1.0.1e-15 are all vulnerable to this bug. Note that older stable CentOS versions are not vulnerable to this bug. All Ubuntu versions since Ubuntu 12.04. This bug even got its own name, “heartbleed”.</p><p style=\"margin-left:0px;\">The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. This weakness allows stealing the information protected, under normal conditions, by the SSL/TLS encryption used to secure the Internet. SSL/TLS provides communication security and privacy over the Internet for applications such as web, email, instant messaging (IM) and some virtual private networks (VPNs).</p><p style=\"margin-left:0px;\">The Heartbleed bug allows anyone on the Internet to read and “steal” 64k of memory of the systems protected by the vulnerable versions of the OpenSSL software. This compromises the secret keys used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users.</p><p style=\"margin-left:0px;\">Fixing it is relatively simple now that most Linux distributions have pushed out changes to their repositories containing a fixed version of OpenSSL. In order to patch this vulnerability, affected users should update to the latest OpenSSL version. So, the update should be as easy as:</p><pre><code class=\"language-plaintext\">**Fedora/CentOS**\n# yum clean all\n# yum check-update\n# yum update\n\n**Ubuntu/Debian**\n# sudo apt-get update\n# sudo apt-get upgrade openssl\n</code></pre><p style=\"margin-left:0px;\">If all went without errors, that’s it. Now, let’s make sure that we are running the version without security issues.</p><pre><code class=\"language-plaintext\">**Fedora/CentOS**\n# rpm -qa | grep openssl\nopenssl-1.0.1e-16.el6_5.7.x86_64\nopenssl-devel-1.0.1e-16.el6_5.7.x86_64\n\n**Ubuntu/Debian**\n# openssl version\nOpenSSL 1.0.1 14 Mar 2012\n</code></pre><p style=\"margin-left:0px;\">Now, after we made sure we are using the latest version, we need to regenerate your certificate using a new private key. This process is standard, first, we should create a certificate signing request, create a new key and then create the certificate itself (if we are using our own certificates, or send CSR to certificate authority issuer to create the new certificate). Then, replace the old certificate and start using the new ones.</p><p style=\"margin-left:0px;\">The next step is to make sure that we restart all the services that are using SSL certificates. For example, if we have apache webserver we should execute:</p><pre><code class=\"language-plaintext\">**Fedora/CentOS**\n# /etc/init.d/httpd restart\n\n**Ubuntu/Debian**\n# sudo service apache2 restart\n</code></pre><p style=\"margin-left:0px;\">We should do that same for any other webserver or any other service that we use (Nginx, vsftpd, MySQL etc). Now we can sit back and relax. We are protected from the Heartbleed bug.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:37:49.217Z","created_at":"2021-03-30T04:37:43.305Z","updated_at":"2021-03-30T04:37:49.810Z","PostSEO":{"id":501,"GoogleSEO":{"id":492,"Title":"How To Mitigate & Fix OpenSSL Heartbeat on CentOS or Ubuntu - VEXXHOST","Description":"An extremely critical security issue was recently discovered in OpenSSL. It has been found affecting versions 1.0.1 through 1.0.1f. All CentOS 6.5"},"FacebookSEO":{"id":488,"Title":"How To Mitigate & Fix OpenSSL Heartbeat on CentOS or Ubuntu - VEXXHOST","Url":null,"Description":"An extremely critical security issue was recently discovered in OpenSSL. It has been found affecting versions 1.0.1 through 1.0.1f. All CentOS 6.5","SiteName":"VEXXHOST","Image":{"id":614,"name":"How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079009/small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"small_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":184.12,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079008/medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"medium_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":407,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079006/thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"thumbnail_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":50.81,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}}},"hash":"How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","ext":".png","mime":"image/png","size":349.37,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079006/How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"},"created_at":"2021-03-30T04:36:49.646Z","updated_at":"2021-03-30T04:36:49.726Z"}},"TwitterSEO":{"id":488,"Description":"An extremely critical security issue was recently discovered in OpenSSL. It has been found affecting versions 1.0.1 through 1.0.1f. All CentOS 6.5","Title":"How To Mitigate & Fix OpenSSL Heartbeat on CentOS or Ubuntu - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":614,"name":"How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079009/small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"small_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":184.12,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079008/medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"medium_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":407,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079006/thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"thumbnail_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":50.81,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}}},"hash":"How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","ext":".png","mime":"image/png","size":349.37,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079006/How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"},"created_at":"2021-03-30T04:36:49.646Z","updated_at":"2021-03-30T04:36:49.726Z"}}},"LinkToResource":{"id":419,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":614,"name":"How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079009/small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"small_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":184.12,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079008/medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"medium_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":407,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079006/thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","hash":"thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","mime":"image/png","name":"thumbnail_How-to-mitigate-and-fix-OpenSSL-Heartbeat-on-CentOS-or-Ubuntu-800x400.png","path":null,"size":50.81,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"}}},"hash":"How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","ext":".png","mime":"image/png","size":349.37,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079006/How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_mitigate_and_fix_Open_SSL_Heartbeat_on_Cent_OS_or_Ubuntu_800x400_28db035b37","resource_type":"image"},"created_at":"2021-03-30T04:36:49.646Z","updated_at":"2021-03-30T04:36:49.726Z"},"TextContent":"An extremely critical security issue was recently discovered in OpenSSL. It has been found affecting versions 1.0.1 through 1.0.1f. All CentOS 6.5 versions are packaged with OpenSSL 1.0.1e-15 are all vulnerable to this bug. Note that older stable CentOS versions are not vulnerable to this bug. All Ubuntu versions since Ubuntu 12.04. This bug even got its own name, “heartbleed”.The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. This weakness allows stealing the information protected, under normal conditions, by the SSL/TLS encryption used to secure the Internet. SSL/TLS provides communication security and privacy over the Internet for applications such as web, email, instant messaging (IM) and some virtual private networks (VPNs).The Heartbleed bug allows anyone on the Internet to read and “steal” 64k of memory of the systems protected by the vulnerable versions of the OpenSSL software. This compromises the secret keys used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users.Fixing it is relatively simple now that most Linux distributions have pushed out changes to their repositories containing a fixed version of OpenSSL. In order to patch this vulnerability, affected users should update to the latest OpenSSL version. So, the update should be as easy as:**Fedora/CentOS**\n# yum clean all\n# yum check-update\n# yum update\n\n**Ubuntu/Debian**\n# sudo apt-get update\n# sudo apt-get upgrade openssl\nIf all went without errors, that’s it. Now, let’s make sure that we are running the version without security issues.**Fedora/CentOS**\n# rpm -qa | grep openssl\nopenssl-1.0.1e-16.el6_5.7.x86_64\nopenssl-devel-1.0.1e-16.el6_5.7.x86_64\n\n**Ubuntu/Debian**\n# openssl version\nOpenSSL 1.0.1 14 Mar 2012\nNow, after we made sure we are using the latest version, we need to regenerate your certificate using a new private key. This process is standard, first, we should create a certificate signing request, create a new key and then create the certificate itself (if we are using our own certificates, or send CSR to certificate authority issuer to create the new certificate). Then, replace the old certificate and start using the new ones.The next step is to make sure that we restart all the services that are using SSL certificates. For example, if we have apache webserver we should execute:**Fedora/CentOS**\n# /etc/init.d/httpd restart\n\n**Ubuntu/Debian**\n# sudo service apache2 restart\nWe should do that same for any other webserver or any other service that we use (Nginx, vsftpd, MySQL etc). Now we can sit back and relax. We are protected from the Heartbleed bug. Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost."},{"id":33,"Title":"Ruby on Rails vs. Laravel: Getting Started","Slug":"resources/tutorials/ruby-on-rails-vs-laravel-getting-started","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">There are currently many popular frameworks for online web application development. There are also different types of frameworks, such as those with plenty of additions and extras, which allow for faster iteration (such as Rails) or others that are very simple and low-level (such as Flask).</p><p style=\"margin-left:0px;\">Two of the more popular frameworks for web application development is Ruby on Rails and Laravel. They are both very mature projects which have been around for quite some time. Ruby on Rails was introduced in December of 2005 and Laravel was in February of 2012.</p><p style=\"margin-left:0px;\">As shown by the date of the first release, Laravel is newer however this doesn’t make Rails old, as the community has always innovated and continued to iterate the project by introducing newer, smarter and better tooling. Also, Laravel has picked up extremely quickly.</p><p style=\"margin-left:0px;\">A very small and simple indicator of developer interest is the number of GitHub stars of the project. Ruby on Rails has accumulated 22,000 over 8 years yet Laravel has around 11,000 in around 2 years only. However, this could very well be because PHP is a far more common language that is more accessible than Ruby on Rails.</p><p style=\"margin-left:0px;\">We are going to have a quick look over different components that are important when designing and developing web applications and the pro’s and con’s of each framework in these components. The criteria we selected is based on what we consider important as developers ourselves. In this article, we talk about how easy it is to get started with both Ruby on Rails and Laravel.</p><h3>Getting Started</h3><p style=\"margin-left:0px;\">One of the criteria we selected was how easy it was to get started within a framework. In this case, it’s basically how fast you can start to write your web application code.</p><h4>Rails</h4><p style=\"margin-left:0px;\">With Rails, as long as you have Ruby installed on the machine you want to develop on, all you need to do is run the following command:</p><pre><code class=\"language-plaintext\">$ gem install rails\n</code></pre><p style=\"margin-left:0px;\">With that simple command, it will pull in all the dependencies required for Ruby on Rails and install it on your machine. With most OS X machines coming pre-installed with Ruby and Linux machines being a command away from Ruby being installed on your machine, it makes it even easier.</p><p style=\"margin-left:0px;\">If you want an Ubuntu 14.04 LTS environment with Ruby on Rails on our cloud computing service, all you need to do is boot a new server, login to it, install Ruby then install Rails. Just that easy.</p><pre><code class=\"language-plaintext\">$ nova boot --flavor nb.2G --image \"Ubuntu 14.04 LTS\" --key-name MacBook rails-dev\n$ nova ssh rails-dev\nWelcome to Ubuntu 14.04 LTS (GNU/Linux 3.13.0-29-generic x86_64)\n\n* Documentation:  https://help.ubuntu.com/\nroot@rails-dev:~# apt-get update\nroot@rails-dev:~# apt-get install -y ruby ruby-dev make\nroot@rails-dev:~# gem install --no-ri --no-rdoc rails\n</code></pre><p style=\"margin-left:0px;\">That is all you need to install Rails. Once it is installed, you just need to create a new application and start hacking away. This is probably the easiest part of this all.</p><pre><code class=\"language-plaintext\">$ rails new weblog\n</code></pre><p style=\"margin-left:0px;\">To start the built-in Ruby on Rails server, you just need to start the built-in Ruby on Rails server by changing into the project folder and starting it.</p><pre><code class=\"language-plaintext\">$ rails server\n</code></pre><p style=\"margin-left:0px;\">You are now ready to serve requests and write your web application code. This process most likely takes less than 5 minutes including Ruby installation. If you already have all this installed, it is probably less than a minute to start a project.</p><h4>Laravel</h4><p style=\"margin-left:0px;\">PHP is most likely the most accessible language for web developers. The reason for this is that the majority of hosting services provide PHP as a language which can be used on the server side. However, for the scope of this article, we will assume that the user will be running it on their machine or on a server. However, it is a strong getting started advantage that it can be used on most typical hosting platforms.</p><p style=\"margin-left:0px;\">PHP comes shipping by default with OS X and it can also easily be installed on any machine, Laravel has an extremely simple and easy to use installer.</p><p style=\"margin-left:0px;\">If you want to get a Ubuntu 14.04 LTS environment with Laravel on our cloud computing service, you would just need to create a server, install PHP on it then run a few simple commands as follows</p><pre><code class=\"language-plaintext\">$ nova boot --flavor nb.1G --image \"Ubuntu 14.04 LTS\" --key-name MacBook laravel-dev\n$ nova ssh laravel-dev\nWelcome to Ubuntu 14.04 LTS (GNU/Linux 3.13.0-29-generic x86_64)\n\n* Documentation:  https://help.ubuntu.com/\nroot@laravel-dev:~# apt-get install -y php5-cli php5-curl php5-mcrypt\nroot@laravel-dev:~# php5enmod mcrypt\nroot@laravel-dev:~# wget -O /usr/local/bin/laravel http://laravel.com/laravel.phar\nroot@laravel-dev:~# chmod +x /usr/local/bin/laravel\n</code></pre><p style=\"margin-left:0px;\">That’s all you need to install Laravel. The next step is to create an application and the process is just as easy as Rails.</p><pre><code class=\"language-plaintext\">$ laravel new weblog\n</code></pre><p style=\"margin-left:0px;\">If you want to use the built-in PHP development server, all you need to do is to be in the directory of your application and run the following command:</p><pre><code class=\"language-plaintext\">$ php artisan serve\n</code></pre><p style=\"margin-left:0px;\">That’s it. You can now just go to the URL provided there and you’re ready to start writing your application. This entire process takes around 5 minutes for a clean install and probably less than a minute for new projects.</p><h3>Conclusion</h3><p style=\"margin-left:0px;\">It seems that both applications are <i>extremely</i> easy to get started with and require less than 5 minutes to setup from scratch and even less if you already have them installed. This means less time tinkering around to get the right development environment and more time solving solutions.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:54:39.018Z","created_at":"2021-03-30T04:54:35.971Z","updated_at":"2021-03-30T04:54:39.518Z","PostSEO":{"id":507,"GoogleSEO":{"id":498,"Title":"Ruby on Rails vs. Laravel: Getting Started - VEXXHOST","Description":"There are currently many popular frameworks for online web application development. There are also different types of frameworks, such as those with"},"FacebookSEO":{"id":494,"Title":"Ruby on Rails vs. Laravel: Getting Started - VEXXHOST","Url":null,"Description":"There are currently many popular frameworks for online web application development. There are also different types of frameworks, such as those with","SiteName":"VEXXHOST","Image":{"id":620,"name":"Ruby-on-Rails-Laravel-Getting-Started-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080030/small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"small_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":88.48,"width":500,"height":250,"provider_metadata":{"public_id":"small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080029/medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"medium_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":219.85,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080025/thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"thumbnail_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":23.99,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}}},"hash":"Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","ext":".png","mime":"image/png","size":148.02,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080025/Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"},"created_at":"2021-03-30T04:53:50.528Z","updated_at":"2021-03-30T04:53:50.614Z"}},"TwitterSEO":{"id":494,"Description":"There are currently many popular frameworks for online web application development. There are also different types of frameworks, such as those with","Title":"Ruby on Rails vs. Laravel: Getting Started - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":620,"name":"Ruby-on-Rails-Laravel-Getting-Started-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080030/small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"small_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":88.48,"width":500,"height":250,"provider_metadata":{"public_id":"small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080029/medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"medium_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":219.85,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080025/thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"thumbnail_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":23.99,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}}},"hash":"Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","ext":".png","mime":"image/png","size":148.02,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080025/Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"},"created_at":"2021-03-30T04:53:50.528Z","updated_at":"2021-03-30T04:53:50.614Z"}}},"LinkToResource":{"id":425,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool?<br>Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":620,"name":"Ruby-on-Rails-Laravel-Getting-Started-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080030/small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"small_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":88.48,"width":500,"height":250,"provider_metadata":{"public_id":"small_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080029/medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"medium_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":219.85,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080025/thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","hash":"thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","mime":"image/png","name":"thumbnail_Ruby-on-Rails-Laravel-Getting-Started-800x400.png","path":null,"size":23.99,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"}}},"hash":"Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","ext":".png","mime":"image/png","size":148.02,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080025/Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Ruby_on_Rails_Laravel_Getting_Started_800x400_fa29c4a86c","resource_type":"image"},"created_at":"2021-03-30T04:53:50.528Z","updated_at":"2021-03-30T04:53:50.614Z"},"TextContent":"There are currently many popular frameworks for online web application development. There are also different types of frameworks, such as those with plenty of additions and extras, which allow for faster iteration (such as Rails) or others that are very simple and low-level (such as Flask).Two of the more popular frameworks for web application development is Ruby on Rails and Laravel. They are both very mature projects which have been around for quite some time. Ruby on Rails was introduced in December of 2005 and Laravel was in February of 2012.As shown by the date of the first release, Laravel is newer however this doesn’t make Rails old, as the community has always innovated and continued to iterate the project by introducing newer, smarter and better tooling. Also, Laravel has picked up extremely quickly.A very small and simple indicator of developer interest is the number of GitHub stars of the project. Ruby on Rails has accumulated 22,000 over 8 years yet Laravel has around 11,000 in around 2 years only. However, this could very well be because PHP is a far more common language that is more accessible than Ruby on Rails.We are going to have a quick look over different components that are important when designing and developing web applications and the pro’s and con’s of each framework in these components. The criteria we selected is based on what we consider important as developers ourselves. In this article, we talk about how easy it is to get started with both Ruby on Rails and Laravel.Getting StartedOne of the criteria we selected was how easy it was to get started within a framework. In this case, it’s basically how fast you can start to write your web application code.RailsWith Rails, as long as you have Ruby installed on the machine you want to develop on, all you need to do is run the following command:$ gem install rails\nWith that simple command, it will pull in all the dependencies required for Ruby on Rails and install it on your machine. With most OS X machines coming pre-installed with Ruby and Linux machines being a command away from Ruby being installed on your machine, it makes it even easier.If you want an Ubuntu 14.04 LTS environment with Ruby on Rails on our cloud computing service, all you need to do is boot a new server, login to it, install Ruby then install Rails. Just that easy.$ nova boot --flavor nb.2G --image \"Ubuntu 14.04 LTS\" --key-name MacBook rails-dev\n$ nova ssh rails-dev\nWelcome to Ubuntu 14.04 LTS (GNU/Linux 3.13.0-29-generic x86_64)\n\n* Documentation:  https://help.ubuntu.com/\nroot@rails-dev:~# apt-get update\nroot@rails-dev:~# apt-get install -y ruby ruby-dev make\nroot@rails-dev:~# gem install --no-ri --no-rdoc rails\nThat is all you need to install Rails. Once it is installed, you just need to create a new application and start hacking away. This is probably the easiest part of this all.$ rails new weblog\nTo start the built-in Ruby on Rails server, you just need to start the built-in Ruby on Rails server by changing into the project folder and starting it.$ rails server\nYou are now ready to serve requests and write your web application code. This process most likely takes less than 5 minutes including Ruby installation. If you already have all this installed, it is probably less than a minute to start a project.LaravelPHP is most likely the most accessible language for web developers. The reason for this is that the majority of hosting services provide PHP as a language which can be used on the server side. However, for the scope of this article, we will assume that the user will be running it on their machine or on a server. However, it is a strong getting started advantage that it can be used on most typical hosting platforms.PHP comes shipping by default with OS X and it can also easily be installed on any machine, Laravel has an extremely simple and easy to use installer.If you want to get a Ubuntu 14.04 LTS environment with Laravel on our cloud computing service, you would just need to create a server, install PHP on it then run a few simple commands as follows$ nova boot --flavor nb.1G --image \"Ubuntu 14.04 LTS\" --key-name MacBook laravel-dev\n$ nova ssh laravel-dev\nWelcome to Ubuntu 14.04 LTS (GNU/Linux 3.13.0-29-generic x86_64)\n\n* Documentation:  https://help.ubuntu.com/\nroot@laravel-dev:~# apt-get install -y php5-cli php5-curl php5-mcrypt\nroot@laravel-dev:~# php5enmod mcrypt\nroot@laravel-dev:~# wget -O /usr/local/bin/laravel http://laravel.com/laravel.phar\nroot@laravel-dev:~# chmod +x /usr/local/bin/laravel\nThat’s all you need to install Laravel. The next step is to create an application and the process is just as easy as Rails.$ laravel new weblog\nIf you want to use the built-in PHP development server, all you need to do is to be in the directory of your application and run the following command:$ php artisan serve\nThat’s it. You can now just go to the URL provided there and you’re ready to start writing your application. This entire process takes around 5 minutes for a clean install and probably less than a minute for new projects.ConclusionIt seems that both applications are extremely easy to get started with and require less than 5 minutes to setup from scratch and even less if you already have them installed. This means less time tinkering around to get the right development environment and more time solving solutions."},{"id":30,"Title":"How To Get Started with Apache libcloud & OpenStack","Slug":"resources/tutorials/how-to-get-started-with-apache-libcloud-and-openstack","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Libcloud is a Python library that provides an abstract API to interact with many popular cloud service providers. It allows you to write code once in a unified API and have it work with all the different providers that it supports.</p><p style=\"margin-left:0px;\">Currently, there is an OpenStack driver for the compute component of Libcloud. It allows you to create, manage and delete all of your existing cloud servers in an OpenStack cloud. In this short tutorial, we will explain on how to get started with it on our cloud computing platform as an example.</p><h3>Installation</h3><p style=\"margin-left:0px;\">The first step to using libcloud is to install the library on your machine. In this tutorial, we are going to assume you have a basic Python installation which you can install modules to using pip.</p><pre><code class=\"language-plaintext\"># pip install apache-libcloud\n</code></pre><p style=\"margin-left:0px;\">pip should take care of installing all the necessary dependencies for you and it will let you know once it’s installed. You can now start using it in your projects, however, you will likely need a cloud computing account somewhere to use this account.</p><h3>API Credentials</h3><p style=\"margin-left:0px;\">Please note that this part is provider specific. We are going to demonstrate on how to get your API credentials from our cloud service, however, we are going to discuss the case of general Vanilla OpenStack clouds (such as private clouds) and what fields you need.</p><p style=\"margin-left:0px;\">In order to get started with it, you will be needing the Keystone API endpoint, username, tenant name and password. Typically, you can acquire this information from Horizon if you’re running a vanilla OpenStack cloud. It will be available under “Access &amp; Security”.</p><p style=\"margin-left:0px;\">If you are using our service, you an simply login to your own control panel by logging to your customer centre and clicking on “CloudConsole”. From there, you can click on “API credentials” and you will see all your API credentials displayed there.</p><h3>Getting Started</h3><p style=\"margin-left:0px;\">We will go over the basics of getting libcloud configured with your OpenStack cloud. The sample code below should allow you to authenticate to your private OpenStack Cloud or to our cloud computing service. In the example, we’ll be connecting to our cloud platform.</p><p style=\"margin-left:0px;\">You will need to make sure that the ex_force_service_name, ex_force_service_region and other arguments are matching the ones that you are using from your cloud. If you’re not sure of those, you should be able to list them from Keystone or ask for assistance from your cloud operator.</p><pre><code class=\"language-plaintext\">from libcloud.compute.types import Provider\nfrom libcloud.compute.providers import get_driver\n\nimport libcloud.security\n\n# This assumes you don't have SSL set up.\n# Note: Code like this poses a security risk (MITM attack) and\n# that's the reason why you should never use it for anything else\n# besides testing. You have been warned.\nlibcloud.security.VERIFY_SSL_CERT = False\n\nOpenStack = get_driver(Provider.OPENSTACK)\ndriver = OpenStack('**insert_tenant_username**',\n                   '**insert_tenant_password**',\n                   ex_force_auth_version='2.0_password',\n                   ex_force_auth_url='http://auth.api.thenebulacloud.com:5000',\n                   ex_tenant_name='**insert_tenant_name**',\n                   ex_force_service_name='nova',\n                   ex_force_service_region='na-yul-nhs1')\n</code></pre><p style=\"margin-left:0px;\">Once you have that in place, you should be able to use the Compute driver like any other driver in libcloud. The documentation is very detailed and explains many different examples of using it, you can refer to the <a href=\"https://libcloud.readthedocs.org/en/latest/compute/examples.html\">examples</a> page for more information. You can now use libcloud to speak with your cloud service provider of choice, hopefully, us!</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:43:05.727Z","created_at":"2021-03-30T04:43:01.229Z","updated_at":"2021-03-30T04:43:06.026Z","PostSEO":{"id":504,"GoogleSEO":{"id":495,"Title":"How To Get Started with Apache libcloud & OpenStack - VEXXHOST","Description":"Libcloud is a Python library that provides an abstract API to interact with many popular cloud service providers. It allows you to write code once in a"},"FacebookSEO":{"id":491,"Title":"How To Get Started with Apache libcloud & OpenStack - VEXXHOST","Url":null,"Description":"Libcloud is a Python library that provides an abstract API to interact with many popular cloud service providers. It allows you to write code once in a","SiteName":"VEXXHOST","Image":{"id":617,"name":"How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079329/small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"small_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":225.03,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079328/medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"medium_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":496.62,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079327/thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"thumbnail_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":58.49,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}}},"hash":"How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","ext":".png","mime":"image/png","size":455,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079326/How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"},"created_at":"2021-03-30T04:42:09.956Z","updated_at":"2021-03-30T04:42:10.109Z"}},"TwitterSEO":{"id":491,"Description":"Libcloud is a Python library that provides an abstract API to interact with many popular cloud service providers. It allows you to write code once in a","Title":"How To Get Started with Apache libcloud & OpenStack - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":617,"name":"How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079329/small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"small_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":225.03,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079328/medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"medium_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":496.62,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079327/thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"thumbnail_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":58.49,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}}},"hash":"How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","ext":".png","mime":"image/png","size":455,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079326/How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"},"created_at":"2021-03-30T04:42:09.956Z","updated_at":"2021-03-30T04:42:10.109Z"}}},"LinkToResource":{"id":422,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":617,"name":"How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079329/small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"small_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":225.03,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079328/medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"medium_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":496.62,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079327/thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","hash":"thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","mime":"image/png","name":"thumbnail_How-To-Get-Started-with-Apache-libcloud-and-OpenStack-800x400.png","path":null,"size":58.49,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"}}},"hash":"How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","ext":".png","mime":"image/png","size":455,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079326/How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Get_Started_with_Apache_libcloud_and_Open_Stack_800x400_c3f5032551","resource_type":"image"},"created_at":"2021-03-30T04:42:09.956Z","updated_at":"2021-03-30T04:42:10.109Z"},"TextContent":"Libcloud is a Python library that provides an abstract API to interact with many popular cloud service providers. It allows you to write code once in a unified API and have it work with all the different providers that it supports.Currently, there is an OpenStack driver for the compute component of Libcloud. It allows you to create, manage and delete all of your existing cloud servers in an OpenStack cloud. In this short tutorial, we will explain on how to get started with it on our cloud computing platform as an example.InstallationThe first step to using libcloud is to install the library on your machine. In this tutorial, we are going to assume you have a basic Python installation which you can install modules to using pip.# pip install apache-libcloud\npip should take care of installing all the necessary dependencies for you and it will let you know once it’s installed. You can now start using it in your projects, however, you will likely need a cloud computing account somewhere to use this account.API CredentialsPlease note that this part is provider specific. We are going to demonstrate on how to get your API credentials from our cloud service, however, we are going to discuss the case of general Vanilla OpenStack clouds (such as private clouds) and what fields you need.In order to get started with it, you will be needing the Keystone API endpoint, username, tenant name and password. Typically, you can acquire this information from Horizon if you’re running a vanilla OpenStack cloud. It will be available under “Access & Security”.If you are using our service, you an simply login to your own control panel by logging to your customer centre and clicking on “CloudConsole”. From there, you can click on “API credentials” and you will see all your API credentials displayed there.Getting StartedWe will go over the basics of getting libcloud configured with your OpenStack cloud. The sample code below should allow you to authenticate to your private OpenStack Cloud or to our cloud computing service. In the example, we’ll be connecting to our cloud platform.You will need to make sure that the ex_force_service_name, ex_force_service_region and other arguments are matching the ones that you are using from your cloud. If you’re not sure of those, you should be able to list them from Keystone or ask for assistance from your cloud operator.from libcloud.compute.types import Provider\nfrom libcloud.compute.providers import get_driver\n\nimport libcloud.security\n\n# This assumes you don't have SSL set up.\n# Note: Code like this poses a security risk (MITM attack) and\n# that's the reason why you should never use it for anything else\n# besides testing. You have been warned.\nlibcloud.security.VERIFY_SSL_CERT = False\n\nOpenStack = get_driver(Provider.OPENSTACK)\ndriver = OpenStack('**insert_tenant_username**',\n                   '**insert_tenant_password**',\n                   ex_force_auth_version='2.0_password',\n                   ex_force_auth_url='http://auth.api.thenebulacloud.com:5000',\n                   ex_tenant_name='**insert_tenant_name**',\n                   ex_force_service_name='nova',\n                   ex_force_service_region='na-yul-nhs1')\nOnce you have that in place, you should be able to use the Compute driver like any other driver in libcloud. The documentation is very detailed and explains many different examples of using it, you can refer to the examples page for more information. You can now use libcloud to speak with your cloud service provider of choice, hopefully, us!"},{"id":32,"Title":"How To Host Multiple Ghost Instances On A Single Server","Slug":"resources/tutorials/how-to-host-multiple-ghost-instances-on-a-single-server","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Ghost is a great and simple to use blogging platform, with a clean and easy to use interface, having just the options that every user need in order to create and maintain their blog. In this tutorial, we will discuss how to have more ghost instances on a single Ubuntu server, each of them completely independent having its own content and specific settings. We are assuming that we already have one ghost single instance properly running for our domain my-first-blog.com using Nginx as web server.</p><p style=\"margin-left:0px;\">Before we proceed to add our second ghost instance, it is better if we stop the related servers that are running:</p><pre><code class=\"language-plaintext\"># service ghost stop\n# service nginx stop\n</code></pre><p style=\"margin-left:0px;\">Now that we have the services stopped, first, we need to modify nginx configuration. While having one instance, we were using on default nginx configuration file for our website. Now, we must have a separate configuration file for every ghost instance that we are going to host on our server. We change to nginx configuration folder and execute the following commands:</p><pre><code class=\"language-plaintext\"># cd /etc/nginx/sites-enabled\n# mv default my-first-blog.com\n# cp my-first-blog.com my-second-blog.com\n</code></pre><p style=\"margin-left:0px;\">Now, we need to open both files using our favourite editor and edit the server_name directive to match our domain name. For the first file, we should have:</p><pre><code class=\"language-plaintext\">server_name my-first-blog.com\n</code></pre><p style=\"margin-left:0px;\">Similar, in the second file, we should have:</p><pre><code class=\"language-plaintext\">server_name my-second-blog.com\n</code></pre><p style=\"margin-left:0px;\">Another parameter that we need to change is the port on which nginx connects to ghost. By default, when we have one instance, all traffic is sent to one port. We can use any port number higher than 1024 which is currently not in use. Let’s pick the first one, 1025, open my-second-blog.com the configuration file in our favourite editor and change to the port parameter as follows:</p><pre><code class=\"language-plaintext\">proxy_pass http://localhost:1025\n</code></pre><p style=\"margin-left:0px;\">We are done with nginx configuration modification, so we can start Nginx</p><pre><code class=\"language-plaintext\"># service nginx start\n</code></pre><p style=\"margin-left:0px;\">Now, we need to configure ghost. First, we need to go to the /var/www directory and create a separate folder for each Ghost instance:</p><pre><code class=\"language-plaintext\"># cd /var/www/\n# mkdir my-first-blog.com\n# mkdir my-second-blog.com\n</code></pre><p style=\"margin-left:0px;\">Then, we need to copy the content of the ghost directory in each of the newly created folders:</p><pre><code class=\"language-plaintext\"># cp -r ghost my-first-blog.com\n# cp -r ghost my-second-blog.com\n</code></pre><p style=\"margin-left:0px;\">Next, we need to locate config.js file which is inside ghost/ directory. For the first site, the file location is /var/www/my-first-blog.com/ghost/config.js and we need to change the URL parameter only, so it looks as follows:</p><pre><code class=\"language-plaintext\">production: {\n    url: 'http://my-first-blog.com'\n</code></pre><p style=\"margin-left:0px;\">For the second blog, the file location is /var/www/my-second-blog.com/ghost/config.js and we need to change the URL and port parameter as well, so it looks as follows:</p><pre><code class=\"language-plaintext\">production: {\n    url: 'http://my-second-blog.com'\n...\n    port: '1025'\n</code></pre><p style=\"margin-left:0px;\">Now we are done with the configuration. We need to create a way to easy start/stop each Ghost instance. In order to do that, we will create a separate file inside /etc/init directory for each instance. For example, for our first blog, we will have the file /etc/init/ghost-my-first-blog.conf with the following content:</p><pre><code class=\"language-plaintext\">start on startup\n\nscript\n    cd /var/www/my-first-blog.com/ghost\n    npm start --production\nend script\n</code></pre><p style=\"margin-left:0px;\">Similar, for the second file, we will have the file /etc/init/ghost-my-second-blog.conf with the following content:</p><pre><code class=\"language-plaintext\">start on startup\n\nscript\n    cd /var/www/my-second-blog.com/ghost\n    npm start --production\nend script\n</code></pre><p style=\"margin-left:0px;\">After this is saved, we can start the blogs with</p><pre><code class=\"language-plaintext\"># service ghost-my-first-blog start\n# service ghost-my-second-blog start\n</code></pre><p style=\"margin-left:0px;\">As long as we are using the different port numbers, we can repeat this procedure as many times as we need and have multiple blog instances hosted on our server.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:53:25.332Z","created_at":"2021-03-30T04:53:20.339Z","updated_at":"2021-03-30T04:53:25.723Z","PostSEO":{"id":506,"GoogleSEO":{"id":497,"Title":"How To Host Multiple Ghost Instances On A Single Server - VEXXHOST","Description":"Ghost is a great and simple to use blogging platform, with a clean and easy to use interface, having just the options that every user need in order to"},"FacebookSEO":{"id":493,"Title":"How To Host Multiple Ghost Instances On A Single Server - VEXXHOST","Url":null,"Description":"Ghost is a great and simple to use blogging platform, with a clean and easy to use interface, having just the options that every user need in order to","SiteName":"VEXXHOST","Image":{"id":619,"name":"How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079952/small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"small_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":176.65,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079951/medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"medium_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":393.4,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079950/thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"thumbnail_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":43.48,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}}},"hash":"How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","ext":".png","mime":"image/png","size":417.19,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079949/How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"},"created_at":"2021-03-30T04:52:33.082Z","updated_at":"2021-03-30T04:52:33.089Z"}},"TwitterSEO":{"id":493,"Description":"Ghost is a great and simple to use blogging platform, with a clean and easy to use interface, having just the options that every user need in order to","Title":"How To Host Multiple Ghost Instances On A Single Server - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":619,"name":"How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079952/small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"small_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":176.65,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079951/medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"medium_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":393.4,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079950/thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"thumbnail_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":43.48,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}}},"hash":"How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","ext":".png","mime":"image/png","size":417.19,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079949/How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"},"created_at":"2021-03-30T04:52:33.082Z","updated_at":"2021-03-30T04:52:33.089Z"}}},"LinkToResource":{"id":424,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":619,"name":"How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079952/small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"small_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":176.65,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079951/medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"medium_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":393.4,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079950/thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","hash":"thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","mime":"image/png","name":"thumbnail_How-to-host-multiple-Ghost-instances-on-a-single-server2-800x400 (1).png","path":null,"size":43.48,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"}}},"hash":"How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","ext":".png","mime":"image/png","size":417.19,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617079949/How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_host_multiple_Ghost_instances_on_a_single_server2_800x400_1_052d2168af","resource_type":"image"},"created_at":"2021-03-30T04:52:33.082Z","updated_at":"2021-03-30T04:52:33.089Z"},"TextContent":"Ghost is a great and simple to use blogging platform, with a clean and easy to use interface, having just the options that every user need in order to create and maintain their blog. In this tutorial, we will discuss how to have more ghost instances on a single Ubuntu server, each of them completely independent having its own content and specific settings. We are assuming that we already have one ghost single instance properly running for our domain my-first-blog.com using Nginx as web server.Before we proceed to add our second ghost instance, it is better if we stop the related servers that are running:# service ghost stop\n# service nginx stop\nNow that we have the services stopped, first, we need to modify nginx configuration. While having one instance, we were using on default nginx configuration file for our website. Now, we must have a separate configuration file for every ghost instance that we are going to host on our server. We change to nginx configuration folder and execute the following commands:# cd /etc/nginx/sites-enabled\n# mv default my-first-blog.com\n# cp my-first-blog.com my-second-blog.com\nNow, we need to open both files using our favourite editor and edit the server_name directive to match our domain name. For the first file, we should have:server_name my-first-blog.com\nSimilar, in the second file, we should have:server_name my-second-blog.com\nAnother parameter that we need to change is the port on which nginx connects to ghost. By default, when we have one instance, all traffic is sent to one port. We can use any port number higher than 1024 which is currently not in use. Let’s pick the first one, 1025, open my-second-blog.com the configuration file in our favourite editor and change to the port parameter as follows:proxy_pass http://localhost:1025\nWe are done with nginx configuration modification, so we can start Nginx# service nginx start\nNow, we need to configure ghost. First, we need to go to the /var/www directory and create a separate folder for each Ghost instance:# cd /var/www/\n# mkdir my-first-blog.com\n# mkdir my-second-blog.com\nThen, we need to copy the content of the ghost directory in each of the newly created folders:# cp -r ghost my-first-blog.com\n# cp -r ghost my-second-blog.com\nNext, we need to locate config.js file which is inside ghost/ directory. For the first site, the file location is /var/www/my-first-blog.com/ghost/config.js and we need to change the URL parameter only, so it looks as follows:production: {\n    url: 'http://my-first-blog.com'\nFor the second blog, the file location is /var/www/my-second-blog.com/ghost/config.js and we need to change the URL and port parameter as well, so it looks as follows:production: {\n    url: 'http://my-second-blog.com'\n...\n    port: '1025'\nNow we are done with the configuration. We need to create a way to easy start/stop each Ghost instance. In order to do that, we will create a separate file inside /etc/init directory for each instance. For example, for our first blog, we will have the file /etc/init/ghost-my-first-blog.conf with the following content:start on startup\n\nscript\n    cd /var/www/my-first-blog.com/ghost\n    npm start --production\nend script\nSimilar, for the second file, we will have the file /etc/init/ghost-my-second-blog.conf with the following content:start on startup\n\nscript\n    cd /var/www/my-second-blog.com/ghost\n    npm start --production\nend script\nAfter this is saved, we can start the blogs with# service ghost-my-first-blog start\n# service ghost-my-second-blog start\nAs long as we are using the different port numbers, we can repeat this procedure as many times as we need and have multiple blog instances hosted on our server."},{"id":34,"Title":"10 Essential Laravel 4 Packages Everyone Should Use","Slug":"resources/tutorials/10-essential-laravel-4-packages-everyone-should-use","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Laravel is a very popular and easy to use PHP framework which allows you to quickly build applications by providing a solid foundation of tools such as RESTful routing, built-in ORM, templating and much more. This means that you spend less time building the boilerplate of your application and giving you more time on writing your web application.</p><p style=\"margin-left:0px;\">We’ve listed below 10 essential Laravel 4 packages which make it easier to get common functionality in your Laravel web application without having to implement it yourself. This means that you don’t have to spend a lot of time on common parts of a web application such as authentication, debugging, site optimization, etc. This list is in order of popularity, based on the number of downloads from <a href=\"https://packagist.org/\">Packagist</a>.</p><h3>Laravel Generators</h3><p style=\"margin-left:0px;\">One of the more common things that you do when writing a web application is building new models, views, controllers and other modules. The manual work involved in doing these becomes a bit tedious. With these <a href=\"https://github.com/JeffreyWay/Laravel-4-Generators\">Laravel generators</a>, you’ll be able to increase your productivity by simplifying that process into a few PHP Artisan commands.</p><h3>Laravel IDE Helper</h3><p style=\"margin-left:0px;\">The <a href=\"https://github.com/barryvdh/laravel-ide-helper\">Laravel IDE Helper</a> package generates a file for your IDE so that it can provide you with accurate complementation. The generation is done by using the files inside your project so they are always up-to-date. Alternately, you can use a <a href=\"https://gist.github.com/barryvdh/5227822\">pre-generated helper file</a> however it may not be up to date. This helps reduce the number of documentation lookups when writing your web application.</p><h3>Behat</h3><p style=\"margin-left:0px;\">In very simple terms, <a href=\"https://github.com/Behat/Behat\">Behat</a> is a PHP framework that facilitates the process of testing your Laravel application. It allows you to use the process of behaviour-driven development within your Laravel application, making it easy to write behavioral tests for your application. This is very useful if you want to follow a BDD pattern and if you find yourself more productive using that pattern.</p><h3>Ardent</h3><p style=\"margin-left:0px;\"><a href=\"https://github.com/laravelbook/ardent\">Ardent</a> provides self-validating smart models for the built-in Eloquent ORM of Laravel. In easier terms to understand, it allows you to define validation rules inside the models which removes the need to have them inside your views. Your views become much smaller and the long list of validation rules are defined in the model file, where they should belong. With this, you can easily define your models and not worry about a large amount of validation in your views.</p><h3>Laravel Debug Bar</h3><p style=\"margin-left:0px;\">The <a href=\"https://github.com/maximebf/php-debugbar\">PHP Debug bar</a> project is a huge success in making debugging of application much easier so that you no longer have to put var_dump() everywhere in your code. The <a href=\"https://github.com/maximebf/php-debugbar\">Laravel Debug Bar</a> project extends the debug bar to include all sorts of other information regarding routes, views, events and much more. This makes debugging a faster and easier process, allowing you to be more productive.</p><h3>Confide</h3><p style=\"margin-left:0px;\">In almost all web applications, there is some sort of basic authentication which involves registration, login, logout, password resets, etc. The process of writing all this code takes time, can possibly lead to security problems if not properly implemented and uses up useful time which can be dedicated to writing your application. With <a href=\"https://github.com/zizaco/confide\">Confide</a>, you get all the basic authentication features you need without writing a line of code. More time writing your web application, less time writing boilerplate.</p><h3>Entrust</h3><p style=\"margin-left:0px;\">The second most popular web application feature is role-based permissions. Many times, you’ll find the need to allow users of a specific role to access a feature. An example of this is having both “Administrator” and “User” roles inside of a web application. <a href=\"https://github.com/Zizaco/entrust\">Entrust</a> allows you to do all this without writing a full RBAC system. All you need to do is define a few roles and filter routes based on them.</p><h3>Former</h3><p style=\"margin-left:0px;\">Forms are everywhere in web applications. If you have any type of user interaction inside your application, it usually involves forms. However, they eventually become a pain to maintain. <a href=\"https://github.com/Anahkiasen/former\">Former</a> makes it much easier to define forms within PHP and render them automatically using your favourite CSS frameworks such as Bootstrap or Foundation. This makes maintaining your forms much easier and makes getting them done much faster.</p><h3>Laravel HTML Minify</h3><p style=\"margin-left:0px;\">One of the simplest and easiest ways to reduce your page size is by minifying your HTML source code. The <a href=\"https://github.com/fitztrev/laravel-html-minify\">Laravel HTML Minify</a> package allows you to get a reduction of up to 18% of the file size without doing any changes at all except adding a provider in your application. This is such a tiny and small amount of work which results in a fairly significant improvement in performance.</p><h3>Laravel Administrator</h3><p style=\"margin-left:0px;\">An administrative interface is almost a requirement for any web application. The basis of administrative interfaces is typically very simple however it’s an extra amount of work to do that is quite repetitive. <a href=\"https://github.com/FrozenNode/Laravel-Administrator\">Laravel Administrator</a> provides you with an easy to use administration interface which allows you to focus on building your web application and not on the back-end management of your website.</p><h3>More Packages</h3><p style=\"margin-left:0px;\">There is an abundance of packages to help you accomplish whatever task that you need to do within Laravel, we could never put them all together, however, a few other useful ones to mention in here are:</p><p style=\"margin-left:0px;\">In conclusion, you’ll almost always find a package that solves the problem which you’re looking for inside Laravel. Therefore, it’s extremely useful to do some research before starting to write code because someone most likely has already attempted to solve the problem which you’re trying to accomplish. We hope to have covered the most essential packages however if we have missed any, feel free to let us know in the comments!</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:55:55.821Z","created_at":"2021-03-30T04:55:51.724Z","updated_at":"2021-03-30T04:55:56.122Z","PostSEO":{"id":508,"GoogleSEO":{"id":499,"Title":"10 Essential Laravel 4 Packages Everyone Should Use - VEXXHOST","Description":"Laravel is a very popular and easy to use PHP framework which allows you to quickly build applications by providing a solid foundation of tools such as"},"FacebookSEO":{"id":495,"Title":"10 Essential Laravel 4 Packages Everyone Should Use - VEXXHOST","Url":null,"Description":"Laravel is a very popular and easy to use PHP framework which allows you to quickly build applications by providing a solid foundation of tools such as","SiteName":"VEXXHOST","Image":{"id":621,"name":"10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080103/small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"small_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":144.74,"width":500,"height":250,"provider_metadata":{"public_id":"small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080102/medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"medium_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":332.1,"width":750,"height":375,"provider_metadata":{"public_id":"medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080100/thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"thumbnail_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":37.34,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}}},"hash":"10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","ext":".png","mime":"image/png","size":315.76,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080100/10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"},"created_at":"2021-03-30T04:55:03.924Z","updated_at":"2021-03-30T04:55:03.933Z"}},"TwitterSEO":{"id":495,"Description":"Laravel is a very popular and easy to use PHP framework which allows you to quickly build applications by providing a solid foundation of tools such as","Title":"10 Essential Laravel 4 Packages Everyone Should Use - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":621,"name":"10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080103/small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"small_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":144.74,"width":500,"height":250,"provider_metadata":{"public_id":"small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080102/medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"medium_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":332.1,"width":750,"height":375,"provider_metadata":{"public_id":"medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080100/thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"thumbnail_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":37.34,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}}},"hash":"10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","ext":".png","mime":"image/png","size":315.76,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080100/10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"},"created_at":"2021-03-30T04:55:03.924Z","updated_at":"2021-03-30T04:55:03.933Z"}}},"LinkToResource":{"id":426,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":621,"name":"10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080103/small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"small_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":144.74,"width":500,"height":250,"provider_metadata":{"public_id":"small_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080102/medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"medium_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":332.1,"width":750,"height":375,"provider_metadata":{"public_id":"medium_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080100/thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","hash":"thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","mime":"image/png","name":"thumbnail_10-Essential-Laravel-4-Packages-Everyone-Should-Use-800x400.png","path":null,"size":37.34,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"}}},"hash":"10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","ext":".png","mime":"image/png","size":315.76,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080100/10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"10_Essential_Laravel_4_Packages_Everyone_Should_Use_800x400_f1f0644430","resource_type":"image"},"created_at":"2021-03-30T04:55:03.924Z","updated_at":"2021-03-30T04:55:03.933Z"},"TextContent":"Laravel is a very popular and easy to use PHP framework which allows you to quickly build applications by providing a solid foundation of tools such as RESTful routing, built-in ORM, templating and much more. This means that you spend less time building the boilerplate of your application and giving you more time on writing your web application.We’ve listed below 10 essential Laravel 4 packages which make it easier to get common functionality in your Laravel web application without having to implement it yourself. This means that you don’t have to spend a lot of time on common parts of a web application such as authentication, debugging, site optimization, etc. This list is in order of popularity, based on the number of downloads from Packagist.Laravel GeneratorsOne of the more common things that you do when writing a web application is building new models, views, controllers and other modules. The manual work involved in doing these becomes a bit tedious. With these Laravel generators, you’ll be able to increase your productivity by simplifying that process into a few PHP Artisan commands.Laravel IDE HelperThe Laravel IDE Helper package generates a file for your IDE so that it can provide you with accurate complementation. The generation is done by using the files inside your project so they are always up-to-date. Alternately, you can use a pre-generated helper file however it may not be up to date. This helps reduce the number of documentation lookups when writing your web application.BehatIn very simple terms, Behat is a PHP framework that facilitates the process of testing your Laravel application. It allows you to use the process of behaviour-driven development within your Laravel application, making it easy to write behavioral tests for your application. This is very useful if you want to follow a BDD pattern and if you find yourself more productive using that pattern.ArdentArdent provides self-validating smart models for the built-in Eloquent ORM of Laravel. In easier terms to understand, it allows you to define validation rules inside the models which removes the need to have them inside your views. Your views become much smaller and the long list of validation rules are defined in the model file, where they should belong. With this, you can easily define your models and not worry about a large amount of validation in your views.Laravel Debug BarThe PHP Debug bar project is a huge success in making debugging of application much easier so that you no longer have to put var_dump() everywhere in your code. The Laravel Debug Bar project extends the debug bar to include all sorts of other information regarding routes, views, events and much more. This makes debugging a faster and easier process, allowing you to be more productive.ConfideIn almost all web applications, there is some sort of basic authentication which involves registration, login, logout, password resets, etc. The process of writing all this code takes time, can possibly lead to security problems if not properly implemented and uses up useful time which can be dedicated to writing your application. With Confide, you get all the basic authentication features you need without writing a line of code. More time writing your web application, less time writing boilerplate.EntrustThe second most popular web application feature is role-based permissions. Many times, you’ll find the need to allow users of a specific role to access a feature. An example of this is having both “Administrator” and “User” roles inside of a web application. Entrust allows you to do all this without writing a full RBAC system. All you need to do is define a few roles and filter routes based on them.FormerForms are everywhere in web applications. If you have any type of user interaction inside your application, it usually involves forms. However, they eventually become a pain to maintain. Former makes it much easier to define forms within PHP and render them automatically using your favourite CSS frameworks such as Bootstrap or Foundation. This makes maintaining your forms much easier and makes getting them done much faster.Laravel HTML MinifyOne of the simplest and easiest ways to reduce your page size is by minifying your HTML source code. The Laravel HTML Minify package allows you to get a reduction of up to 18% of the file size without doing any changes at all except adding a provider in your application. This is such a tiny and small amount of work which results in a fairly significant improvement in performance.Laravel AdministratorAn administrative interface is almost a requirement for any web application. The basis of administrative interfaces is typically very simple however it’s an extra amount of work to do that is quite repetitive. Laravel Administrator provides you with an easy to use administration interface which allows you to focus on building your web application and not on the back-end management of your website.More PackagesThere is an abundance of packages to help you accomplish whatever task that you need to do within Laravel, we could never put them all together, however, a few other useful ones to mention in here are:In conclusion, you’ll almost always find a package that solves the problem which you’re looking for inside Laravel. Therefore, it’s extremely useful to do some research before starting to write code because someone most likely has already attempted to solve the problem which you’re trying to accomplish. We hope to have covered the most essential packages however if we have missed any, feel free to let us know in the comments!"},{"id":35,"Title":"10 Essential & Useful Ruby on Rails 4 Gems","Slug":"resources/tutorials/10-essential-useful-ruby-on-rails-4-gems","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">The Ruby on Rails framework is an extremely powerful tool for developing web applications. It comes with plenty of built-in features that help accelerate the development of your web application such as intelligent routing and an object-relation mapper, all using an MVC pattern.</p><p style=\"margin-left:0px;\">Rails are designed in a way to be very easily extended using Ruby gems. This has created a large ecosystem of Ruby gems that can extend your application and accelerate your development process even more by reducing the time involved in working in developing common functionality. We’re going to go over a few gems which we consider to be very useful.</p><h3>Devise</h3><p style=\"margin-left:0px;\"><a href=\"https://rubygems.org/gems/devise\">Devise</a> is most probably the most commonly used Gem when using Ruby on Rails. It provides an easy-to-use authentication solution for your Rails application which will allow you to get login, registration, forget the password, account locks and much more account-related features by simply using this Gem.</p><h3>Pundit</h3><p style=\"margin-left:0px;\">It’s important to know the distinction between authentication and authorization. The device helps authenticate users and verify who they are while authorization ensures that the user is allowed to perform an action or access a resource. <a href=\"https://rubygems.org/gems/pundit\">Pundit</a> takes care of this entire process by providing a simple way of defining authorization systems using nothing but Ruby classes.</p><h3>Slim</h3><p style=\"margin-left:0px;\">There are many template systems out there. Ruby on Rails uses the eRuby template system by default, however, it’s typically something that users will choose to replace. <a href=\"https://rubygems.org/gems/slim\">Slim</a> is a common replacement because it allows you to maintain very easy to read templates due to it’s simple syntax while maintaining very fast compilation times.</p><h3>Draper</h3><p style=\"margin-left:0px;\"><a href=\"https://rubygems.org/gems/draper\">Draper</a> allows you to build decorators around your models. It helps make your views much cleaner and lets you avoid writing helpers. Instead of procedurally calling helpers with models, you instead define a decorator which wraps the original model and provides a list of extended method and attributes to your object.</p><h3>Cells</h3><p style=\"margin-left:0px;\">You’ll often re-use many components of your application. Typically, partials are used for this type of behaviour however you must make sure that your controllers that call the parts all have consistent behaviour. <a href=\"https://rubygems.org/gems/cells\">Cells</a> allow you to take parts of your controller and encapsulate them into their own little controller. This helps make your code much cleaner and avoid the long helper/partial/filter mes.</p><h3>FriendlyId</h3><p style=\"margin-left:0px;\">Typically, resource URLs are identified by their primary key which is usually their database ID. However, this can result in unoptimized web page URLs that are not user-friendly to read either. <a href=\"https://rubygems.org/gems/friendly_id\">FriendlyId</a> can easily transform your URLs too much friendlier and easy to remember URLs for little to no code changes in your web application.</p><h3>Simple Form</h3><p style=\"margin-left:0px;\">Forms are at the heart of every single web application. If there is any level of interaction with the user, it typically is done using a web form. <a href=\"https://rubygems.org/gems/simple_form\">Simple Form</a> helps simplify this very simple yet repetitive task. By implementing a simple and easy to use DSL for building forms, you can spend less time writing HTML for your forms and more time on the core business logic of your application.</p><h3>Paperclip</h3><p style=\"margin-left:0px;\">File attachments are never easy to work with. They typically involve a significant amount of work to implement and even more time to make sure that they are implemented in a very secure manner. <a href=\"https://rubygems.org/gems/paperclip\">Paperclip</a> takes care of this entire process for you inside your Rails application and extends it even more to things like transforming images to thumbnails and much more.</p><h3>Kaminari</h3><p style=\"margin-left:0px;\"><a href=\"https://rubygems.org/gems/kaminari\">Kaminari</a> is not a very descriptive name for a Gem, however, it is one of the most popular Gems with almost 5 million downloads. It enables you to paginate anything from ActiveRecord relations to simple arrays using a clean, easy to use and simple scope-based API which is fully agnostic to whatever ORM or template engine you use.</p><h3>Sidekiq</h3><p style=\"margin-left:0px;\">There are many choices for background processing tools when using Ruby on Rails, however, <a href=\"https://rubygems.org/gems/sidekiq\">Sidekiq</a> is one of the most popular ones. The reason behind its popularity is the simplicity of its API and how it scales much better than other background processors.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:57:05.813Z","created_at":"2021-03-30T04:57:03.249Z","updated_at":"2021-03-30T04:57:06.120Z","PostSEO":{"id":509,"GoogleSEO":{"id":500,"Title":"10 Essential & Useful Ruby on Rails 4 Gems - VEXXHOST","Description":"The Ruby on Rails framework is an extremely powerful tool for developing web applications. It comes with plenty of built-in features that help accelerate"},"FacebookSEO":{"id":496,"Title":"10 Essential & Useful Ruby on Rails 4 Gems - VEXXHOST","Url":null,"Description":"The Ruby on Rails framework is an extremely powerful tool for developing web applications. It comes with plenty of built-in features that help accelerate","SiteName":"VEXXHOST","Image":{"id":622,"name":"10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080180/small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"small_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":120.6,"width":500,"height":250,"provider_metadata":{"public_id":"small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080180/medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"medium_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":271.8,"width":750,"height":375,"provider_metadata":{"public_id":"medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080176/thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"thumbnail_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":35.95,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}}},"hash":"10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","ext":".png","mime":"image/png","size":199.55,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080175/10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"},"created_at":"2021-03-30T04:56:21.167Z","updated_at":"2021-03-30T04:56:21.308Z"}},"TwitterSEO":{"id":496,"Description":"The Ruby on Rails framework is an extremely powerful tool for developing web applications. It comes with plenty of built-in features that help accelerate","Title":"10 Essential & Useful Ruby on Rails 4 Gems - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":622,"name":"10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080180/small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"small_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":120.6,"width":500,"height":250,"provider_metadata":{"public_id":"small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080180/medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"medium_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":271.8,"width":750,"height":375,"provider_metadata":{"public_id":"medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080176/thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"thumbnail_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":35.95,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}}},"hash":"10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","ext":".png","mime":"image/png","size":199.55,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080175/10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"},"created_at":"2021-03-30T04:56:21.167Z","updated_at":"2021-03-30T04:56:21.308Z"}}},"LinkToResource":{"id":427,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":622,"name":"10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080180/small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"small_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":120.6,"width":500,"height":250,"provider_metadata":{"public_id":"small_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080180/medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"medium_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":271.8,"width":750,"height":375,"provider_metadata":{"public_id":"medium_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080176/thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","hash":"thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","mime":"image/png","name":"thumbnail_10-Essential-Useful-Ruby-on-Rails-4-Gems2-800x400.png","path":null,"size":35.95,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"}}},"hash":"10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","ext":".png","mime":"image/png","size":199.55,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080175/10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"10_Essential_Useful_Ruby_on_Rails_4_Gems2_800x400_b8d4846b84","resource_type":"image"},"created_at":"2021-03-30T04:56:21.167Z","updated_at":"2021-03-30T04:56:21.308Z"},"TextContent":"The Ruby on Rails framework is an extremely powerful tool for developing web applications. It comes with plenty of built-in features that help accelerate the development of your web application such as intelligent routing and an object-relation mapper, all using an MVC pattern.Rails are designed in a way to be very easily extended using Ruby gems. This has created a large ecosystem of Ruby gems that can extend your application and accelerate your development process even more by reducing the time involved in working in developing common functionality. We’re going to go over a few gems which we consider to be very useful.DeviseDevise is most probably the most commonly used Gem when using Ruby on Rails. It provides an easy-to-use authentication solution for your Rails application which will allow you to get login, registration, forget the password, account locks and much more account-related features by simply using this Gem.PunditIt’s important to know the distinction between authentication and authorization. The device helps authenticate users and verify who they are while authorization ensures that the user is allowed to perform an action or access a resource. Pundit takes care of this entire process by providing a simple way of defining authorization systems using nothing but Ruby classes.SlimThere are many template systems out there. Ruby on Rails uses the eRuby template system by default, however, it’s typically something that users will choose to replace. Slim is a common replacement because it allows you to maintain very easy to read templates due to it’s simple syntax while maintaining very fast compilation times.DraperDraper allows you to build decorators around your models. It helps make your views much cleaner and lets you avoid writing helpers. Instead of procedurally calling helpers with models, you instead define a decorator which wraps the original model and provides a list of extended method and attributes to your object.CellsYou’ll often re-use many components of your application. Typically, partials are used for this type of behaviour however you must make sure that your controllers that call the parts all have consistent behaviour. Cells allow you to take parts of your controller and encapsulate them into their own little controller. This helps make your code much cleaner and avoid the long helper/partial/filter mes.FriendlyIdTypically, resource URLs are identified by their primary key which is usually their database ID. However, this can result in unoptimized web page URLs that are not user-friendly to read either. FriendlyId can easily transform your URLs too much friendlier and easy to remember URLs for little to no code changes in your web application.Simple FormForms are at the heart of every single web application. If there is any level of interaction with the user, it typically is done using a web form. Simple Form helps simplify this very simple yet repetitive task. By implementing a simple and easy to use DSL for building forms, you can spend less time writing HTML for your forms and more time on the core business logic of your application.PaperclipFile attachments are never easy to work with. They typically involve a significant amount of work to implement and even more time to make sure that they are implemented in a very secure manner. Paperclip takes care of this entire process for you inside your Rails application and extends it even more to things like transforming images to thumbnails and much more.KaminariKaminari is not a very descriptive name for a Gem, however, it is one of the most popular Gems with almost 5 million downloads. It enables you to paginate anything from ActiveRecord relations to simple arrays using a clean, easy to use and simple scope-based API which is fully agnostic to whatever ORM or template engine you use.SidekiqThere are many choices for background processing tools when using Ruby on Rails, however, Sidekiq is one of the most popular ones. The reason behind its popularity is the simplicity of its API and how it scales much better than other background processors."},{"id":37,"Title":"CentOS 6 to CentOS 7 Upgrade Procedure","Slug":"resources/tutorials/centos-6-to-centos-7-upgrade-procedure","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">CentOS 7 was released only few weeks after Red Hat Enterprise Linux 7, including the same <a href=\"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/7.0_Release_Notes/\">exciting features RHEL ships</a>. Besides the long awaited Systemd and the right now much discussed Docker this release also features the possibility to perform upgrades from version 6 to version 7 automatically without the need of the installation images. And although the upgrade still requires a reboot and thus is not a live upgrade as such, it comes in very handy for servers which can only be reached remotely.</p><p style=\"margin-left:0px;\">Red Hat has already released and documented the necessary tools. The CentOS team didn’t have time yet to import, test and rebuild the tools but the developers are already <a href=\"http://lists.centos.org/pipermail/centos-devel/2014-July/011277.html\">on it</a> – and they provide untested binaries.</p><p style=\"margin-left:0px;\">Please, note: Since the packages are not tested yet you should not, by any means, try these on anything else than on spare test machines you can easily re-deploy and which do not have any valuable data. Do not try this on your production machines!</p><p style=\"margin-left:0px;\">But if you want to get a first idea of how the tools do basically work, I recommend to set up a simple virtual machine with a fully updated CentOS 6 and as few packages as possible. Next, install the rpms from the CentOS repository mentioned above.</p><p style=\"margin-left:0px;\">Among these is the Preupgrade Assistant, which can be run on a system with no harm: preupg just analyses the system and gives hints what to look out for during an upgrade without performing any tasks.</p><p style=\"margin-left:0px;\">Since I only tested with systems with hardly any services installed I got no real results from preupg. Even a test run on a system with more services installed brought the same output (only showing some examples of the dozens and dozens of lines):</p><pre><code class=\"language-plaintext\">$ sudo preupg\nPreupg tool doesn't do the actual upgrade.\nPlease ensure you have backed up your system and/or data in the event of a failed upgrade\n that would require a full re-install of the system from installation media.\nDo you want to continue? y/n\ny\nGathering logs used by preupgrade assistant:\nAll installed packages : 01/10 ...finished (time 00:00s)\nAll changed files      : 02/10 ...finished (time 00:48s)\nChanged config files   : 03/10 ...finished (time 00:00s)\nAll users              : 04/10 ...finished (time 00:00s)\n...\n042/100 ...done    (samba shared directories selinux)\n043/100 ...done    (CUPS Browsing/BrowsePoll configuration)\n044/100 ...done    (CVS Package Split)\n...\n|samba shared directories selinux          |notapplicable  |\n|CUPS Browsing/BrowsePoll configuration    |notapplicable  |\n|CVS Package Split                         |notapplicable  |\n...\n</code></pre><p style=\"margin-left:0px;\">As mentioned above the Preupgrade Assistant only helps evaluating what problems might come up during the upgrade – the real step must be done with the tool redhat-upgrade-tool-cli. For that to work the CentOS 7 key must be imported first:</p><pre><code class=\"language-plaintext\">$ sudo rpm --import http://isoredirect.centos.org/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7\n</code></pre><p style=\"margin-left:0px;\">Afterwards, the actual upgrade tool can be called. As options it takes the future distribution version and a URL to pull the data from. Additionally I had to add the option \\--force since the tool complained that preupg was not run previously – although it was. As soon as the upgrade tool is called, it starts downloading all necessary information, packages and images, and afterwards asks for a reboot – the reboot does not happen automatically.</p><pre><code class=\"language-plaintext\">$ sudo /usr/bin/redhat-upgrade-tool-cli --force --network 7 --instrepo=http://mirror.centos.org/centos/7/os/x86_64\nsetting up repos...\n.treeinfo                                                                                                                                            | 1.1 kB     00:00\ngetting boot images...\n</code></pre><p style=\"margin-left:0px;\">After the reboot the machine updates itself with the help of the downloaded packages. Note that this phase does take some time, depending on the speed of the machine, expect minutes, not seconds. However, if everything turns out right, the next login will be into a CentOS 7 machine:</p><pre><code class=\"language-plaintext\">$ cat /etc/os-release\nNAME=\"CentOS Linux\"\nVERSION=\"7 (Core)\"\nID=\"centos\"\nID_LIKE=\"rhel fedora\"\nVERSION_ID=\"7\"\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:centos:centos:7\"\nHOME_URL=\"https://www.centos.org/\"\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\n</code></pre><p style=\"margin-left:0px;\">Concluding it can be said that the upgrade tool worked quite nicely. While it is not comparable to a real live upgrade if offers a decent way to upgrade remote servers. I’ve tested it with a clean VM and also with bare metal, remote server, and it worked surprisingly good. The analysis tool unfortunately did not perform how I expected it to work, but that might be due to the untested state or I was not using it properly. I’m looking forward what how that develops and improves over time. <strong>But, again, and as mentioned before – don’t try this on your own prod servers.</strong></p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:59:29.724Z","created_at":"2021-03-30T04:59:25.764Z","updated_at":"2021-03-30T04:59:30.408Z","PostSEO":{"id":511,"GoogleSEO":{"id":502,"Title":"CentOS 6 to CentOS 7 Upgrade Procedure - VEXXHOST","Description":"CentOS 7 was released only few weeks after Red Hat Enterprise Linux 7, including the same exciting features RHEL ships. Besides the long awaited Systemd"},"FacebookSEO":{"id":498,"Title":"CentOS 6 to CentOS 7 Upgrade Procedure - VEXXHOST","Url":null,"Description":"CentOS 7 was released only few weeks after Red Hat Enterprise Linux 7, including the same exciting features RHEL ships. Besides the long awaited Systemd","SiteName":"VEXXHOST","Image":{"id":624,"name":"CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080320/small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"small_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":281.95,"width":500,"height":250,"provider_metadata":{"public_id":"small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080319/medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"medium_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":619.83,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080318/thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"thumbnail_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":75.11,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}}},"hash":"Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","ext":".png","mime":"image/png","size":491.44,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080317/Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"},"created_at":"2021-03-30T04:58:40.978Z","updated_at":"2021-03-30T04:58:41.208Z"}},"TwitterSEO":{"id":498,"Description":"CentOS 7 was released only few weeks after Red Hat Enterprise Linux 7, including the same exciting features RHEL ships. Besides the long awaited Systemd","Title":"CentOS 6 to CentOS 7 Upgrade Procedure - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":624,"name":"CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080320/small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"small_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":281.95,"width":500,"height":250,"provider_metadata":{"public_id":"small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080319/medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"medium_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":619.83,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080318/thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"thumbnail_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":75.11,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}}},"hash":"Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","ext":".png","mime":"image/png","size":491.44,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080317/Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"},"created_at":"2021-03-30T04:58:40.978Z","updated_at":"2021-03-30T04:58:41.208Z"}}},"LinkToResource":{"id":429,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Learn about Zuul the CI/CD project gating tool, download here!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":624,"name":"CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080320/small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"small_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":281.95,"width":500,"height":250,"provider_metadata":{"public_id":"small_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080319/medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"medium_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":619.83,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080318/thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","hash":"thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","mime":"image/png","name":"thumbnail_CentOS-6-to-CentOS-7-Upgrade-Procedure-800x400.png","path":null,"size":75.11,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"}}},"hash":"Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","ext":".png","mime":"image/png","size":491.44,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080317/Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cent_OS_6_to_Cent_OS_7_Upgrade_Procedure_800x400_c33e7f291f","resource_type":"image"},"created_at":"2021-03-30T04:58:40.978Z","updated_at":"2021-03-30T04:58:41.208Z"},"TextContent":"CentOS 7 was released only few weeks after Red Hat Enterprise Linux 7, including the same exciting features RHEL ships. Besides the long awaited Systemd and the right now much discussed Docker this release also features the possibility to perform upgrades from version 6 to version 7 automatically without the need of the installation images. And although the upgrade still requires a reboot and thus is not a live upgrade as such, it comes in very handy for servers which can only be reached remotely.Red Hat has already released and documented the necessary tools. The CentOS team didn’t have time yet to import, test and rebuild the tools but the developers are already on it – and they provide untested binaries.Please, note: Since the packages are not tested yet you should not, by any means, try these on anything else than on spare test machines you can easily re-deploy and which do not have any valuable data. Do not try this on your production machines!But if you want to get a first idea of how the tools do basically work, I recommend to set up a simple virtual machine with a fully updated CentOS 6 and as few packages as possible. Next, install the rpms from the CentOS repository mentioned above.Among these is the Preupgrade Assistant, which can be run on a system with no harm: preupg just analyses the system and gives hints what to look out for during an upgrade without performing any tasks.Since I only tested with systems with hardly any services installed I got no real results from preupg. Even a test run on a system with more services installed brought the same output (only showing some examples of the dozens and dozens of lines):$ sudo preupg\nPreupg tool doesn't do the actual upgrade.\nPlease ensure you have backed up your system and/or data in the event of a failed upgrade\n that would require a full re-install of the system from installation media.\nDo you want to continue? y/n\ny\nGathering logs used by preupgrade assistant:\nAll installed packages : 01/10 ...finished (time 00:00s)\nAll changed files      : 02/10 ...finished (time 00:48s)\nChanged config files   : 03/10 ...finished (time 00:00s)\nAll users              : 04/10 ...finished (time 00:00s)\n...\n042/100 ...done    (samba shared directories selinux)\n043/100 ...done    (CUPS Browsing/BrowsePoll configuration)\n044/100 ...done    (CVS Package Split)\n...\n|samba shared directories selinux          |notapplicable  |\n|CUPS Browsing/BrowsePoll configuration    |notapplicable  |\n|CVS Package Split                         |notapplicable  |\n...\nAs mentioned above the Preupgrade Assistant only helps evaluating what problems might come up during the upgrade – the real step must be done with the tool redhat-upgrade-tool-cli. For that to work the CentOS 7 key must be imported first:$ sudo rpm --import http://isoredirect.centos.org/centos/7/os/x86_64/RPM-GPG-KEY-CentOS-7\nAfterwards, the actual upgrade tool can be called. As options it takes the future distribution version and a URL to pull the data from. Additionally I had to add the option \\--force since the tool complained that preupg was not run previously – although it was. As soon as the upgrade tool is called, it starts downloading all necessary information, packages and images, and afterwards asks for a reboot – the reboot does not happen automatically.$ sudo /usr/bin/redhat-upgrade-tool-cli --force --network 7 --instrepo=http://mirror.centos.org/centos/7/os/x86_64\nsetting up repos...\n.treeinfo                                                                                                                                            | 1.1 kB     00:00\ngetting boot images...\nAfter the reboot the machine updates itself with the help of the downloaded packages. Note that this phase does take some time, depending on the speed of the machine, expect minutes, not seconds. However, if everything turns out right, the next login will be into a CentOS 7 machine:$ cat /etc/os-release\nNAME=\"CentOS Linux\"\nVERSION=\"7 (Core)\"\nID=\"centos\"\nID_LIKE=\"rhel fedora\"\nVERSION_ID=\"7\"\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\nANSI_COLOR=\"0;31\"\nCPE_NAME=\"cpe:/o:centos:centos:7\"\nHOME_URL=\"https://www.centos.org/\"\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\nConcluding it can be said that the upgrade tool worked quite nicely. While it is not comparable to a real live upgrade if offers a decent way to upgrade remote servers. I’ve tested it with a clean VM and also with bare metal, remote server, and it worked surprisingly good. The analysis tool unfortunately did not perform how I expected it to work, but that might be due to the untested state or I was not using it properly. I’m looking forward what how that develops and improves over time. But, again, and as mentioned before – don’t try this on your own prod servers."},{"id":41,"Title":"Getting started with Docker in minutes using Docker Machine","Slug":"resources/tutorials/getting-started-with-docker-in-minutes-using-docker-machine","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Docker is an open source platform designed for system administrators and<br>developers to deploy applications. There are a number of tools around the<br>Docker ecosystem which make it easier to get started with Docker, one of them<br>is the recently released (but still in alpha): Docker Machine.</p><p style=\"margin-left:0px;\">Docker Machine allows you to deploy Docker hosts using a simple command.<br>Typically, you would have to create a new virtual machine, install multiple<br>Docker components until you’re ready to provision new containers. With Docker<br>Machine, it’s a matter of a single command.</p><h3>Installing Docker Machine</h3><p style=\"margin-left:0px;\">Docker Machine is a tool which is installed on your local machine which takes<br>care of deploying a new instance and installing Docker on it. It’s currently<br>still in alpha, but you can always download the latest release from <a href=\"https://github.com/docker/machine/releases\">GitHub</a>.</p><p style=\"margin-left:0px;\">Once you download the appropriate binary for your operating system, it’s best<br>to move it to /usr/local/bin/ so that you can easily access the command again,<br>installing the latest release at the time of writing th is article (which is<br>v0.1.0-rc4) should look like this.</p><pre><code class=\"language-plaintext\">$ wget https://github.com/docker/machine/releases/download/v0.1.0-rc4/docker-machine_darwin-amd64\n$ chmod +x docker-machine_darwin-amd64\n$ mv docker-machine_darwin-amd64 /usr/local/bin/docker-machine\n</code></pre><h3>Configure Environment Variables</h3><p style=\"margin-left:0px;\">When Docker provisions a new instance, it can use the common OpenStack<br>environment variables for your credentials to reduce the number of command-line<br>arguments you have to provide and make it easier for you to use.</p><p style=\"margin-left:0px;\">You can setup your credentials by logging into the CloudConsole control panel,<br>navigating to the “API Credentials” button and you’ll see them listed under the<br>openrc file section, they will be similar to the following:</p><pre><code class=\"language-plaintext\">export OS_TENANT_NAME=\"d433974b-859d-420f-ad6b-bbc7da546e5f\"\nexport OS_USERNAME=\"b569971a-9b81-4c3e-8cea-42f375c0592d\"\nexport OS_PASSWORD=\"D0AfrjJkMhVQl5ZHO5gIrftsjEtCH14FYqNahFNjku3CemmH\"\nexport OS_AUTH_URL=\"http://auth.api.thenebulacloud.com:5000/v2.0/\"\nexport OS_REGION_NAME=\"ca-ymq-1\"\n</code></pre><p style=\"margin-left:0px;\">You can either save this in a file called openrc and then calling it by<br>running source openrc or you can simply run those commands in your shell<br>before moving on.</p><h3>Create Docker Instance</h3><p style=\"margin-left:0px;\">Once you have all the correct information, you can proceed to create your new<br>Docker instance. You will need to provide a flavor and image ID when creating<br>this new instance, so we’ll use the nova CLI commands to get it.</p><pre><code class=\"language-plaintext\">$ nova image-list | grep 'Ubuntu 14.04'\n$ nova flavor-list\n</code></pre><p style=\"margin-left:0px;\">With these commands, you’ll be able to find the Ubuntu image UUID and you can<br>select the flavor you wish to use. In our case, we’ll use the current Ubuntu<br>14.04 LTS image (uuid: dc808930-9d49-4a27-b71a-77e12a3c5b54) and the nb.2G<br>instance type (uuid: 8c6a8477-20cb-4db9-ad1d-be3bc05cdae9).</p><pre><code class=\"language-plaintext\">$ docker-machine create -d openstack \\\n                 --openstack-flavor-id 8c6a8477-20cb-4db9-ad1d-be3bc05cdae9 \\\n                 --openstack-image-id dc808930-9d49-4a27-b71a-77e12a3c5b54 \\\n                 docker-1\n</code></pre><p style=\"margin-left:0px;\">The process will take a few minutes, it will provision a new instance in your<br>cloud account, install the latest release of Docker on it and store the required<br>information on your machine to access it using the Docker client. If you have<br>the docker CLI installed, you will be able to manage it by using the env<br>tool within Docker Machine.</p><pre><code class=\"language-plaintext\">$ $(docker-machine env docker-1)\n$ docker ps\n</code></pre><p style=\"margin-left:0px;\">Now, you can create new containers easily without having to SSH to the host as<br>well. All communication is encrypted using TLS to the remote Docker instance.</p><pre><code class=\"language-plaintext\">$ docker run -i -t ubuntu /bin/bash\nroot@d2a0912ad721:/# ps auxf\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  1.0  0.0  18168  1924 ?        Ss   22:49   0:00 /bin/bash\nroot        14  0.0  0.0  15564  1100 ?        R+   22:49   0:00 ps auxf\n</code></pre><h3>Conclusion</h3><p style=\"margin-left:0px;\">You can now easily use Docker in any way you want, without having to login to<br>any other machine. In the future, we’ll add another article on how to use<br>Docker’s other new tool, Docker Swarm.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:06:09.830Z","created_at":"2021-03-30T05:06:06.519Z","updated_at":"2021-03-30T05:06:10.807Z","PostSEO":{"id":515,"GoogleSEO":{"id":506,"Title":"Getting started with Docker in minutes using Docker Machine - VEXXHOST","Description":"Docker is an open source platform designed for system administrators and developers to deploy applications. There are a number of tools around the Docker"},"FacebookSEO":{"id":502,"Title":"Getting started with Docker in minutes using Docker Machine - VEXXHOST","Url":null,"Description":"Docker is an open source platform designed for system administrators and developers to deploy applications. There are a number of tools around the Docker","SiteName":"VEXXHOST","Image":{"id":631,"name":"Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080714/small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"small_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":124.08,"width":500,"height":250,"provider_metadata":{"public_id":"small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080714/medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"medium_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":270.77,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080711/thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"thumbnail_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":39.55,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}}},"hash":"Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","ext":".png","mime":"image/png","size":209.14,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080710/Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"},"created_at":"2021-03-30T05:05:15.042Z","updated_at":"2021-03-30T05:05:15.054Z"}},"TwitterSEO":{"id":502,"Description":"Docker is an open source platform designed for system administrators and developers to deploy applications. There are a number of tools around the Docker","Title":"Getting started with Docker in minutes using Docker Machine - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":631,"name":"Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080714/small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"small_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":124.08,"width":500,"height":250,"provider_metadata":{"public_id":"small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080714/medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"medium_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":270.77,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080711/thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"thumbnail_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":39.55,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}}},"hash":"Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","ext":".png","mime":"image/png","size":209.14,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080710/Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"},"created_at":"2021-03-30T05:05:15.042Z","updated_at":"2021-03-30T05:05:15.054Z"}}},"LinkToResource":{"id":433,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":631,"name":"Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080714/small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"small_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":124.08,"width":500,"height":250,"provider_metadata":{"public_id":"small_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080714/medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"medium_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":270.77,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080711/thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","hash":"thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","mime":"image/png","name":"thumbnail_Getting-started-with-Docker-in-minutes-using-Docker-Machine1-800x400.png","path":null,"size":39.55,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"}}},"hash":"Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","ext":".png","mime":"image/png","size":209.14,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080710/Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Getting_started_with_Docker_in_minutes_using_Docker_Machine1_800x400_0d00876a90","resource_type":"image"},"created_at":"2021-03-30T05:05:15.042Z","updated_at":"2021-03-30T05:05:15.054Z"},"TextContent":"Docker is an open source platform designed for system administrators anddevelopers to deploy applications. There are a number of tools around theDocker ecosystem which make it easier to get started with Docker, one of themis the recently released (but still in alpha): Docker Machine.Docker Machine allows you to deploy Docker hosts using a simple command.Typically, you would have to create a new virtual machine, install multipleDocker components until you’re ready to provision new containers. With DockerMachine, it’s a matter of a single command.Installing Docker MachineDocker Machine is a tool which is installed on your local machine which takescare of deploying a new instance and installing Docker on it. It’s currentlystill in alpha, but you can always download the latest release from GitHub.Once you download the appropriate binary for your operating system, it’s bestto move it to /usr/local/bin/ so that you can easily access the command again,installing the latest release at the time of writing th is article (which isv0.1.0-rc4) should look like this.$ wget https://github.com/docker/machine/releases/download/v0.1.0-rc4/docker-machine_darwin-amd64\n$ chmod +x docker-machine_darwin-amd64\n$ mv docker-machine_darwin-amd64 /usr/local/bin/docker-machine\nConfigure Environment VariablesWhen Docker provisions a new instance, it can use the common OpenStackenvironment variables for your credentials to reduce the number of command-linearguments you have to provide and make it easier for you to use.You can setup your credentials by logging into the CloudConsole control panel,navigating to the “API Credentials” button and you’ll see them listed under theopenrc file section, they will be similar to the following:export OS_TENANT_NAME=\"d433974b-859d-420f-ad6b-bbc7da546e5f\"\nexport OS_USERNAME=\"b569971a-9b81-4c3e-8cea-42f375c0592d\"\nexport OS_PASSWORD=\"D0AfrjJkMhVQl5ZHO5gIrftsjEtCH14FYqNahFNjku3CemmH\"\nexport OS_AUTH_URL=\"http://auth.api.thenebulacloud.com:5000/v2.0/\"\nexport OS_REGION_NAME=\"ca-ymq-1\"\nYou can either save this in a file called openrc and then calling it byrunning source openrc or you can simply run those commands in your shellbefore moving on.Create Docker InstanceOnce you have all the correct information, you can proceed to create your newDocker instance. You will need to provide a flavor and image ID when creatingthis new instance, so we’ll use the nova CLI commands to get it.$ nova image-list | grep 'Ubuntu 14.04'\n$ nova flavor-list\nWith these commands, you’ll be able to find the Ubuntu image UUID and you canselect the flavor you wish to use. In our case, we’ll use the current Ubuntu14.04 LTS image (uuid: dc808930-9d49-4a27-b71a-77e12a3c5b54) and the nb.2Ginstance type (uuid: 8c6a8477-20cb-4db9-ad1d-be3bc05cdae9).$ docker-machine create -d openstack \\\n                 --openstack-flavor-id 8c6a8477-20cb-4db9-ad1d-be3bc05cdae9 \\\n                 --openstack-image-id dc808930-9d49-4a27-b71a-77e12a3c5b54 \\\n                 docker-1\nThe process will take a few minutes, it will provision a new instance in yourcloud account, install the latest release of Docker on it and store the requiredinformation on your machine to access it using the Docker client. If you havethe docker CLI installed, you will be able to manage it by using the envtool within Docker Machine.$ $(docker-machine env docker-1)\n$ docker ps\nNow, you can create new containers easily without having to SSH to the host aswell. All communication is encrypted using TLS to the remote Docker instance.$ docker run -i -t ubuntu /bin/bash\nroot@d2a0912ad721:/# ps auxf\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  1.0  0.0  18168  1924 ?        Ss   22:49   0:00 /bin/bash\nroot        14  0.0  0.0  15564  1100 ?        R+   22:49   0:00 ps auxf\nConclusionYou can now easily use Docker in any way you want, without having to login toany other machine. In the future, we’ll add another article on how to useDocker’s other new tool, Docker Swarm."},{"id":36,"Title":"How to Setup Remote System Logging with rsyslog on Ubuntu 14.04 LTS","Slug":"resources/tutorials/how-to-setup-remote-system-logging-with-rsyslog-on-ubuntu-14-04-lts","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">By default, there is an instance of rsyslog that runs inside every new Ubuntu installation. The rsyslog tool takes care of receiving all the log message from the kernel and operating system applications and distributing them over files in /var/log.</p><p style=\"margin-left:0px;\">However, rsyslog can do much more than that which includes logging into a remote server. This can be extremely useful for aggregating logs across a large fleet of servers or when it is not possible to write logs on disk.</p><p style=\"margin-left:0px;\">In this tutorial, we are going to install rsyslog on a remote machine so we can ship logs to, redirect all logging to that remote server.</p><h3>Installing rsyslog on Remote Server</h3><p style=\"margin-left:0px;\">You will need a copy of rsyslog running on a remote machine which will be recieving the logs from your existing server. It is best that you have this in a remote location. The reason being that if this server crashes at the same time as your server crashes, you will not be able to get any logs to troubleshoot any issues.</p><p style=\"margin-left:0px;\">Assuming that you are using Ubuntu on the remote machine, you will already be running rsyslog. If not, you can install it by following the instructions provided inside the <a href=\"http://www.rsyslog.com/doc/install.html\">rsyslog website</a>.</p><p style=\"margin-left:0px;\">Once it is installed, you will need to make sure that it listens on a port which we will send logs to. The default port is 514 which we will keep. You will need to edit the file /etc/rsyslog.conf and uncomment the following lines:</p><pre><code class=\"language-plaintext\"># provides UDP syslog reception\n#$ModLoad imudp\n#$UDPServerRun 514\n\n# provides TCP syslog reception\n#$ModLoad imtcp\n#$InputTCPServerRun 514\n</code></pre><p style=\"margin-left:0px;\">After uncommenting the lines, it should look like the following:</p><pre><code class=\"language-plaintext\"># provides UDP syslog reception\n$ModLoad imudp\n$UDPServerRun 514\n\n# provides TCP syslog reception\n$ModLoad imtcp\n$InputTCPServerRun 514\n</code></pre><p style=\"margin-left:0px;\">Once that is done, you can now restart the rsyslog service by running the command service rsyslog restart. Your rsyslog instance is now ready to recieve logs from remote hosts.</p><h3>Setting Up rsyslog on Local Server</h3><p style=\"margin-left:0px;\">This process is extremely easy. All you need to do is tell the existing rsyslog instance on your server to ship logs to your remote server. It is as easy as creating a file inside the /etc/rsyslog.d folder called 10-rsyslog.conf. Inside that file, all you need to put is</p><pre><code class=\"language-plaintext\">*.*   @remote.server:514\n</code></pre><p style=\"margin-left:0px;\">Once you write that file, restart the rsyslog service by running service rsyslog restart and your logs will now start being shipped to your remote server. You can verify that by logging into the remote server and checking the log folder, you will find that you now have logs labeled with the hostname of the client server.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T04:58:14.117Z","created_at":"2021-03-30T04:58:09.219Z","updated_at":"2021-03-30T04:58:14.620Z","PostSEO":{"id":510,"GoogleSEO":{"id":501,"Title":"VEXXHOST -Setup Remote System Logging With rsyslog on Ubuntu 14.04","Description":"By default, there is an instance of rsyslog that runs inside every new Ubuntu installation. The rsyslog tool takes care of receiving all the log message"},"FacebookSEO":{"id":497,"Title":"VEXXHOST -Setup Remote System Logging With rsyslog on Ubuntu 14.04","Url":null,"Description":"By default, there is an instance of rsyslog that runs inside every new Ubuntu installation. The rsyslog tool takes care of receiving all the log message","SiteName":"VEXXHOST","Image":{"id":623,"name":"How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080247/small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"small_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":249.92,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080246/medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"medium_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":546.74,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080245/thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"thumbnail_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":68.69,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}}},"hash":"How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","ext":".png","mime":"image/png","size":452.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080244/How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"},"created_at":"2021-03-30T04:57:27.835Z","updated_at":"2021-03-30T04:57:27.842Z"}},"TwitterSEO":{"id":497,"Description":"By default, there is an instance of rsyslog that runs inside every new Ubuntu installation. The rsyslog tool takes care of receiving all the log message","Title":"VEXXHOST -Setup Remote System Logging With rsyslog on Ubuntu 14.04","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":623,"name":"How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080247/small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"small_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":249.92,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080246/medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"medium_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":546.74,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080245/thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"thumbnail_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":68.69,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}}},"hash":"How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","ext":".png","mime":"image/png","size":452.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080244/How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"},"created_at":"2021-03-30T04:57:27.835Z","updated_at":"2021-03-30T04:57:27.842Z"}}},"LinkToResource":{"id":428,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":623,"name":"How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080247/small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"small_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":249.92,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080246/medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"medium_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":546.74,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080245/thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","hash":"thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","mime":"image/png","name":"thumbnail_How-to-Setup-Remote-System-Logging-with-rsyslog-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":68.69,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"}}},"hash":"How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","ext":".png","mime":"image/png","size":452.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080244/How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Setup_Remote_System_Logging_with_rsyslog_on_Ubuntu_14_04_LTS_800x400_385c2a66a0","resource_type":"image"},"created_at":"2021-03-30T04:57:27.835Z","updated_at":"2021-03-30T04:57:27.842Z"},"TextContent":"By default, there is an instance of rsyslog that runs inside every new Ubuntu installation. The rsyslog tool takes care of receiving all the log message from the kernel and operating system applications and distributing them over files in /var/log.However, rsyslog can do much more than that which includes logging into a remote server. This can be extremely useful for aggregating logs across a large fleet of servers or when it is not possible to write logs on disk.In this tutorial, we are going to install rsyslog on a remote machine so we can ship logs to, redirect all logging to that remote server.Installing rsyslog on Remote ServerYou will need a copy of rsyslog running on a remote machine which will be recieving the logs from your existing server. It is best that you have this in a remote location. The reason being that if this server crashes at the same time as your server crashes, you will not be able to get any logs to troubleshoot any issues.Assuming that you are using Ubuntu on the remote machine, you will already be running rsyslog. If not, you can install it by following the instructions provided inside the rsyslog website.Once it is installed, you will need to make sure that it listens on a port which we will send logs to. The default port is 514 which we will keep. You will need to edit the file /etc/rsyslog.conf and uncomment the following lines:# provides UDP syslog reception\n#$ModLoad imudp\n#$UDPServerRun 514\n\n# provides TCP syslog reception\n#$ModLoad imtcp\n#$InputTCPServerRun 514\nAfter uncommenting the lines, it should look like the following:# provides UDP syslog reception\n$ModLoad imudp\n$UDPServerRun 514\n\n# provides TCP syslog reception\n$ModLoad imtcp\n$InputTCPServerRun 514\nOnce that is done, you can now restart the rsyslog service by running the command service rsyslog restart. Your rsyslog instance is now ready to recieve logs from remote hosts.Setting Up rsyslog on Local ServerThis process is extremely easy. All you need to do is tell the existing rsyslog instance on your server to ship logs to your remote server. It is as easy as creating a file inside the /etc/rsyslog.d folder called 10-rsyslog.conf. Inside that file, all you need to put is*.*   @remote.server:514\nOnce you write that file, restart the rsyslog service by running service rsyslog restart and your logs will now start being shipped to your remote server. You can verify that by logging into the remote server and checking the log folder, you will find that you now have logs labeled with the hostname of the client server."},{"id":38,"Title":"Small Dive Into Meteor.JS","Slug":"resources/tutorials/small-dive-into-meteor-js","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">If you follow the latest JavaScript hypes, I am sure you have already heard about the awesomeness of meteor.js. If you have not yet, this is your chance. This article will walk you through the installation and running your first realtime app built on Meteor.js.</p><h3>Introduction</h3><p style=\"margin-left:0px;\">Meteor.js is a pure JavaScript web framework for writing realtime web applications. It comes packaged with shiny features such as:</p><ul><li>DDP (Distributed Data Protocol)</li><li>Blaze templating engine with realtime updating</li><li>Database access on the client</li><li>Reactive data source</li></ul><p style=\"margin-left:0px;\">It is still under heavy development and the core team raised $11.2M for this project. With that, the release of version 1.0 is almost on the horizon.</p><p style=\"margin-left:0px;\">Oh, did I mention that it is open source? Yeah, it is! You can browse through the codebase on <a href=\"https://github.com/meteor/meteor\">GitHub</a>. You can find also their official website <a href=\"http://meteor.com/\">here</a>.</p><h3>Installation</h3><p style=\"margin-left:0px;\">First you have to install it on your machine. It is surprisingly easy! Fire up a terminal and run the following command</p><pre><code class=\"language-plaintext\">$ curl https://install.meteor.com/ | sh\n</code></pre><p style=\"margin-left:0px;\">There, you have Meteor.js installed on your machine now. Run the following command to see what version have you installed.</p><pre><code class=\"language-plaintext\">$ meteor --version\n</code></pre><p style=\"margin-left:0px;\">It also gives you a number of commands to interact, build, run and deploy your app. You can see all the available commands/options by simply running.</p><pre><code class=\"language-plaintext\">$ meteor help\n</code></pre><h3>First Application</h3><p style=\"margin-left:0px;\">Let’s create our first app now, shall we? We can simply use the command line tool to create an app with boilerplate code. Run the following commands, one by one, in the terminal –</p><pre><code class=\"language-plaintext\">$ meteor create awesome-realtime-app\n$ cd awesome-realtime-app\n$ meteor\n</code></pre><p style=\"margin-left:0px;\">The create command in the first line will create a new directory named awesome-realtime-app with all the boilerplate code for us to get going. Then we move into that newly created directory and run our app using the meteor command.</p><p style=\"margin-left:0px;\">Open up a browser and navigate to <strong>http://localhost:3000/</strong>. et voila! There’s our app running on Meteor.js after only 4 commands.</p><h3>Example code</h3><p style=\"margin-left:0px;\">Installation, shell commands are boring things. Let’s do something more fun? Let’s write some code and see the magic dust fall from Meteor.js.</p><p style=\"margin-left:0px;\">Open up the only .js and only .html files from the our app’s directory in your favorite text editor. <strong>First</strong>, we will create a template of our own. Paste the following code right below all the code in the .html file.</p><pre><code class=\"language-plaintext\">&lt;template name=\"superhero\"&gt;\n  &lt;div&gt;\n    Input:\n    &lt;input type=\"text\" id=\"favorite_input\"&gt;\n  &lt;/div&gt;\n  &lt;h2&gt;\n    My favorite superhero is: {{favorite}}\n  &lt;/h2&gt;\n&lt;/template&gt;\n</code></pre><p style=\"margin-left:0px;\">Here, we are creating a template named, superhero and inside the template we have a text input and a couple of html tags. Simple!</p><p style=\"margin-left:0px;\">One thing to notice though, the text wrapped in double curly braces is a template variable and it will be evaluated as JavaScript.</p><p style=\"margin-left:0px;\">Meteor.js uses handlebars for templating syntax, so if you are already familiar with that, perfect, otherwise, you should find out more about it <a href=\"http://handlebarsjs.com/\">here</a>.</p><p style=\"margin-left:0px;\">Also, notice how our template is outside of the body tag? How do we display it inside the webpage? That’s where the template name comes in. inside your body tag, simply write {{&gt; superhero}} this will place in our template inside the body tag.</p><p style=\"margin-left:0px;\"><strong>Next</strong>, we move into the .js file and for now we will just be using the client side so we will append the following code inside the if (Meteor.isClient) statement.</p><pre><code class=\"language-plaintext\">Template.superhero.favorite = function () {\n    return Session.get('favorite_superhero');\n};\n\nTemplate.superhero.events({\n    'keyup #favorite_input': function (e) {\n        Session.set('favorite_superhero', e.currentTarget.value);\n    }\n});\n</code></pre><p style=\"margin-left:0px;\">As you can see, it’s plain JavaScript. On the first block, we are defining what should the value of the template variable favorite should be. It’s hooked up with a session variable named favorite_superhero. Here session is a reactive data source. So whenever this data changes, meteor will automatically update the value of our template variable and we will see the changes in the template right away.</p><p style=\"margin-left:0px;\">In the next block, we are telling Meteor.js that we want to do some stuff when a keyup event happens on the element with the ID of favorite_input. The selector can be any CSS selector. So, on keyup event, we fetch the value of our input field and set it as the session variable favorite_superhero.</p><p style=\"margin-left:0px;\">Now go to the browser and test it out. Write the name of your favorite superhero in the input field and see the view update automatically.</p><p style=\"margin-left:0px;\">Notice how we didn’t have to do anything between writing our code and checking it in the browser? <strong>Not even refresh the browser!</strong> That’s because Meteor.js always watches over your files and as soon as you change something in the files, it automatically restarts your app and reloads the browser tab to reflect the changes you just made.</p><h3>Take Aways</h3><p style=\"margin-left:0px;\">Meteor is full of <strong>magic</strong> but as a developer, you might not like to hear about magic behind the screen. So, if this picked your brain, feel free to dig around their official website, browse through their example apps and read the docs to find out more about how the magic actually works.</p><h3>What’s Next?</h3><p style=\"margin-left:0px;\">With Meteor.js, outer space is the limit (pardon the pun). Go ahead and get your hands dirty with the code, read the <a href=\"http://docs.meteor.com/\">official docs</a>, make something crazy. If you know the basics of JavaScript, you’re ready to write apps on Meteor.js, trust me.</p><p style=\"margin-left:0px;\">In the near future, we will be covering more area about Meteor.js so don’t forget to check back soon.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:00:41.525Z","created_at":"2021-03-30T05:00:37.487Z","updated_at":"2021-03-30T05:00:42.407Z","PostSEO":{"id":512,"GoogleSEO":{"id":503,"Title":"Small Dive Into Meteor.JS - VEXXHOST","Description":"If you follow the latest JavaScript hypes, I am sure you have already heard about the awesomeness of meteor.js. If you have not yet, this is your chance."},"FacebookSEO":{"id":499,"Title":"Small Dive Into Meteor.JS - VEXXHOST","Url":null,"Description":"If you follow the latest JavaScript hypes, I am sure you have already heard about the awesomeness of meteor.js. If you have not yet, this is your chance.","SiteName":"VEXXHOST","Image":{"id":625,"name":"Small-Dive-Into-Meteor.JS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080393/small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"small_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":140.51,"width":500,"height":250,"provider_metadata":{"public_id":"small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080392/medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"medium_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":329.6,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080390/thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"thumbnail_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":35.58,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}}},"hash":"Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","ext":".png","mime":"image/png","size":313.18,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080389/Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"},"created_at":"2021-03-30T04:59:53.846Z","updated_at":"2021-03-30T04:59:53.858Z"}},"TwitterSEO":{"id":499,"Description":"If you follow the latest JavaScript hypes, I am sure you have already heard about the awesomeness of meteor.js. If you have not yet, this is your chance.","Title":"Small Dive Into Meteor.JS - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":625,"name":"Small-Dive-Into-Meteor.JS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080393/small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"small_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":140.51,"width":500,"height":250,"provider_metadata":{"public_id":"small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080392/medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"medium_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":329.6,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080390/thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"thumbnail_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":35.58,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}}},"hash":"Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","ext":".png","mime":"image/png","size":313.18,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080389/Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"},"created_at":"2021-03-30T04:59:53.846Z","updated_at":"2021-03-30T04:59:53.858Z"}}},"LinkToResource":{"id":430,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":625,"name":"Small-Dive-Into-Meteor.JS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080393/small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"small_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":140.51,"width":500,"height":250,"provider_metadata":{"public_id":"small_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080392/medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"medium_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":329.6,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080390/thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","hash":"thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","mime":"image/png","name":"thumbnail_Small-Dive-Into-Meteor.JS-800x400.png","path":null,"size":35.58,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"}}},"hash":"Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","ext":".png","mime":"image/png","size":313.18,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080389/Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Small_Dive_Into_Meteor_JS_800x400_2ff3fbdd5e","resource_type":"image"},"created_at":"2021-03-30T04:59:53.846Z","updated_at":"2021-03-30T04:59:53.858Z"},"TextContent":"If you follow the latest JavaScript hypes, I am sure you have already heard about the awesomeness of meteor.js. If you have not yet, this is your chance. This article will walk you through the installation and running your first realtime app built on Meteor.js.IntroductionMeteor.js is a pure JavaScript web framework for writing realtime web applications. It comes packaged with shiny features such as:DDP (Distributed Data Protocol)Blaze templating engine with realtime updatingDatabase access on the clientReactive data sourceIt is still under heavy development and the core team raised $11.2M for this project. With that, the release of version 1.0 is almost on the horizon.Oh, did I mention that it is open source? Yeah, it is! You can browse through the codebase on GitHub. You can find also their official website here.InstallationFirst you have to install it on your machine. It is surprisingly easy! Fire up a terminal and run the following command$ curl https://install.meteor.com/ | sh\nThere, you have Meteor.js installed on your machine now. Run the following command to see what version have you installed.$ meteor --version\nIt also gives you a number of commands to interact, build, run and deploy your app. You can see all the available commands/options by simply running.$ meteor help\nFirst ApplicationLet’s create our first app now, shall we? We can simply use the command line tool to create an app with boilerplate code. Run the following commands, one by one, in the terminal –$ meteor create awesome-realtime-app\n$ cd awesome-realtime-app\n$ meteor\nThe create command in the first line will create a new directory named awesome-realtime-app with all the boilerplate code for us to get going. Then we move into that newly created directory and run our app using the meteor command.Open up a browser and navigate to http://localhost:3000/. et voila! There’s our app running on Meteor.js after only 4 commands.Example codeInstallation, shell commands are boring things. Let’s do something more fun? Let’s write some code and see the magic dust fall from Meteor.js.Open up the only .js and only .html files from the our app’s directory in your favorite text editor. First, we will create a template of our own. Paste the following code right below all the code in the .html file.<template name=\"superhero\">\n  <div>\n    Input:\n    <input type=\"text\" id=\"favorite_input\">\n  </div>\n  <h2>\n    My favorite superhero is: {{favorite}}\n  </h2>\n</template>\nHere, we are creating a template named, superhero and inside the template we have a text input and a couple of html tags. Simple!One thing to notice though, the text wrapped in double curly braces is a template variable and it will be evaluated as JavaScript.Meteor.js uses handlebars for templating syntax, so if you are already familiar with that, perfect, otherwise, you should find out more about it here.Also, notice how our template is outside of the body tag? How do we display it inside the webpage? That’s where the template name comes in. inside your body tag, simply write {{> superhero}} this will place in our template inside the body tag.Next, we move into the .js file and for now we will just be using the client side so we will append the following code inside the if (Meteor.isClient) statement.Template.superhero.favorite = function () {\n    return Session.get('favorite_superhero');\n};\n\nTemplate.superhero.events({\n    'keyup #favorite_input': function (e) {\n        Session.set('favorite_superhero', e.currentTarget.value);\n    }\n});\nAs you can see, it’s plain JavaScript. On the first block, we are defining what should the value of the template variable favorite should be. It’s hooked up with a session variable named favorite_superhero. Here session is a reactive data source. So whenever this data changes, meteor will automatically update the value of our template variable and we will see the changes in the template right away.In the next block, we are telling Meteor.js that we want to do some stuff when a keyup event happens on the element with the ID of favorite_input. The selector can be any CSS selector. So, on keyup event, we fetch the value of our input field and set it as the session variable favorite_superhero.Now go to the browser and test it out. Write the name of your favorite superhero in the input field and see the view update automatically.Notice how we didn’t have to do anything between writing our code and checking it in the browser? Not even refresh the browser! That’s because Meteor.js always watches over your files and as soon as you change something in the files, it automatically restarts your app and reloads the browser tab to reflect the changes you just made.Take AwaysMeteor is full of magic but as a developer, you might not like to hear about magic behind the screen. So, if this picked your brain, feel free to dig around their official website, browse through their example apps and read the docs to find out more about how the magic actually works.What’s Next?With Meteor.js, outer space is the limit (pardon the pun). Go ahead and get your hands dirty with the code, read the official docs, make something crazy. If you know the basics of JavaScript, you’re ready to write apps on Meteor.js, trust me.In the near future, we will be covering more area about Meteor.js so don’t forget to check back soon."},{"id":49,"Title":"How to install and use Logwatch on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-and-use-logwatch-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">When you know about the normal state of your network and servers, then you can easily spot the abnormal by just monitoring its logon activity. So, In this tutorial we will guide you on&nbsp;the complete setup of a tool that will analyze your logs and reports back about every activity on your servers.</p><p style=\"margin-left:0px;\">Logwatch is an Open Source Logs management and monitoring tool that monitors each and every activity on the server and sends an email about the summary of logs to the administrator in the form of daily or weekly reports on daily basis or according to its configured settings. It summarizes the logs from multiple machines in a single report, which can streamline network maintenance and speedup incident response.</p><h2 style=\"margin-left:0px;\">Base Environment</h2><p style=\"margin-left:0px;\">We are about to setup Logwatch on a Ubuntu 14.04, there is no minimum requirements about the resources but you must have root level privileges on the server where you are going to install it. You are connected to the internet and have assigned a static IP to your machine with fully qualified domain name.</p><p style=\"margin-left:0px;\">More over your system should be properly up to date and patched with required dependencies. So, before getting started with the installation run the following commands to update your system to update its packages list..</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# apt-get update\n</code></pre><h3>Installing Logwatch</h3><p style=\"margin-left:0px;\">Logwatch installation package can be installed through its available packages in all Linux distributions so its not a big problem to get it installed on your linux server. It’s safe to install Logwatch without any ambiguity as it doesn’t run as a daemon, so it doesn’t interact with any other running services. To install Logwatch on Ubuntu 14.04 run the following command with root user.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# apt-get -y install logwatch\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082124/Wu_NR_Kt4_198f359f88.png\"></figure><p style=\"margin-left:0px;\">During the installation process you will be prompted to configure few installation packages, so choose the best settings as per your requirements.</p><h3>Postfix Configuration</h3><p style=\"margin-left:0px;\">Here you need to choose the mail servers configuration according to your environment. Let’s choose from the provided general types of mail configuration and press ok to proceed.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082138/x9_Yx_Xjr_b29cf8f361.png\"></figure><p style=\"margin-left:0px;\">Let’s configure your system mail name that should be fully qualified domain name. Most probably the mail name is the hostname of your server. Read the instruction carefully during the configurations to choose the best options according to your requirements.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082152/3_ZZ_8l_J9_5806ceb59f.png\"></figure><p style=\"margin-left:0px;\">Once the logwatch installation is done, you will be able to see the end results of installation as shown in the snapshot.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082168/5_Gptj_CN_ad618025b9.png\"></figure><h3>Logwatch Configurations</h3><p style=\"margin-left:0px;\">Now let’s move forward with configuration of Logwatch, make sure that your server’s emails are functioning properly and are able to send email via postfix.</p><h3>L ocations of Configuration File</h3><p style=\"margin-left:0px;\">There are two configuration file options, one for its local configurations and the second for its default configurations. The local configurations file is located in /etc/logwatch/conf/logwatch.conf while the default configurations file can be configured in /usr/share/logwatch/default.conf/logwatch.conf.</p><h3>Common Configurations</h3><p style=\"margin-left:0px;\">To make changes in the default configuration file of Logwatch, open the file with your file editor and configure it for setting up the common configurations.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# vim /usr/share/logwatch/default.conf/logwatch.conf\n</code></pre><p style=\"margin-left:0px;\">This is the default configuration file of Logwatch and we will just change its email settings here as required.</p><ol><li>The Recipient email address to which daily email reports will be sent can be changed here as:</li></ol><pre><code class=\"language-plaintext\">#MailTo = root\nMailTo = user@vexxhost.com\n</code></pre><ol><li>The Sender email address from which the reports will be received can be changed as:</li></ol><pre><code class=\"language-plaintext\">MailFrom = Logwatch\nMailFrom = user@vexxhost.com\n</code></pre><ol><li>The Default Time Range for reports can be changed here to All, Yesterday or Today.</li></ol><pre><code class=\"language-plaintext\">Range = today\n</code></pre><ol><li>The default detail level for the report can also be changed from the available options here. The available options can either be Low, Med, High or a number.</li></ol><pre><code class=\"language-plaintext\">Detail = Low\n</code></pre><ol><li>The default service(s) to report on can change here if required.</li></ol><pre><code class=\"language-plaintext\">Service = All\n</code></pre><p style=\"margin-left:0px;\">This can be left as All to receive reports from all services and applications running on the server. If you don’t wish to get reports from all services then you can change this option from All to any specific service name, for more than one service to be reported on just update the file with multiple options like:</p><pre><code class=\"language-plaintext\">Service = apache2\nService = ssh\nService = mariadb\n</code></pre><p style=\"margin-left:0px;\">After making configuration changes as per your requirements save the file with wq! if you are using vim editor and then check if your logwatch is working fine.</p><h3>Testing Logwatch</h3><p style=\"margin-left:0px;\">In order to test the logwatch we can manually run the logwatch service whenever we need to get the report. To test the Logwatch simply run the logwatch command as:</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# logwatch\n</code></pre><p style=\"margin-left:0px;\">The starting report format from the logwatch will like as below.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082186/x_Guf_Yl3_fa5edef656.png\"></figure><p style=\"margin-left:0px;\">The logwatch command will shows the report from from each service running and applications installed on it. Following is the result of logwatch from some of the service running on it like postfix, ssh, etc.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082202/Y_Oj_V63_B_9630ddd50a.png\"></figure><p style=\"margin-left:0px;\">The logwatch command will end with following lines by showing the report about the filesystem disk space usage.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082220/fyi1n9_H_6d46b959f8.png\"></figure><h3>Conclusion</h3><p style=\"margin-left:0px;\">Logwatch is one of the best tool that every system administrator must give it a try and use this to monitor the logs of a server running some critical services on it where multiple number of users connects on daily basis and you have to look after the logs if anyone had made any changes on the server. So, get ready with your Logwatch setup and start analyzing your logs with an efficient and professional way. Feel free to comment us here if need further assistance or if you face any kind of problem during its setup.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:31:06.337Z","created_at":"2021-03-30T05:31:02.044Z","updated_at":"2021-03-30T05:31:06.725Z","PostSEO":{"id":523,"GoogleSEO":{"id":514,"Title":"How to install and use Logwatch on Ubuntu 14.04 - VEXXHOST","Description":"When you know about the normal state of your network and servers, then you can easily spot the abnormal by just monitoring its logon activity. So, In this"},"FacebookSEO":{"id":510,"Title":"How to install and use Logwatch on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"When you know about the normal state of your network and servers, then you can easily spot the abnormal by just monitoring its logon activity. So, In this","SiteName":"VEXXHOST","Image":{"id":660,"name":"How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082100/small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"small_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":119.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082099/medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"medium_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":261.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082098/thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"thumbnail_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":35.24,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}}},"hash":"How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","ext":".png","mime":"image/png","size":234.69,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082097/How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"},"created_at":"2021-03-30T05:28:20.741Z","updated_at":"2021-03-30T05:28:21.011Z"}},"TwitterSEO":{"id":510,"Description":"When you know about the normal state of your network and servers, then you can easily spot the abnormal by just monitoring its logon activity. So, In this","Title":"How to install and use Logwatch on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":660,"name":"How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082100/small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"small_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":119.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082099/medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"medium_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":261.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082098/thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"thumbnail_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":35.24,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}}},"hash":"How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","ext":".png","mime":"image/png","size":234.69,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082097/How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"},"created_at":"2021-03-30T05:28:20.741Z","updated_at":"2021-03-30T05:28:21.011Z"}}},"LinkToResource":{"id":441,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":660,"name":"How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082100/small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"small_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":119.86,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082099/medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"medium_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":261.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082098/thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","hash":"thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","mime":"image/png","name":"thumbnail_How-to-install-and-use-Logwatch-on-Ubuntu-14.04-800x400.png","path":null,"size":35.24,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"}}},"hash":"How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","ext":".png","mime":"image/png","size":234.69,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082097/How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_install_and_use_Logwatch_on_Ubuntu_14_04_800x400_03b8474ebe","resource_type":"image"},"created_at":"2021-03-30T05:28:20.741Z","updated_at":"2021-03-30T05:28:21.011Z"},"TextContent":"When you know about the normal state of your network and servers, then you can easily spot the abnormal by just monitoring its logon activity. So, In this tutorial we will guide you on the complete setup of a tool that will analyze your logs and reports back about every activity on your servers.Logwatch is an Open Source Logs management and monitoring tool that monitors each and every activity on the server and sends an email about the summary of logs to the administrator in the form of daily or weekly reports on daily basis or according to its configured settings. It summarizes the logs from multiple machines in a single report, which can streamline network maintenance and speedup incident response.Base EnvironmentWe are about to setup Logwatch on a Ubuntu 14.04, there is no minimum requirements about the resources but you must have root level privileges on the server where you are going to install it. You are connected to the internet and have assigned a static IP to your machine with fully qualified domain name.More over your system should be properly up to date and patched with required dependencies. So, before getting started with the installation run the following commands to update your system to update its packages list..root@ubuntu-14:~# apt-get update\nInstalling LogwatchLogwatch installation package can be installed through its available packages in all Linux distributions so its not a big problem to get it installed on your linux server. It’s safe to install Logwatch without any ambiguity as it doesn’t run as a daemon, so it doesn’t interact with any other running services. To install Logwatch on Ubuntu 14.04 run the following command with root user.root@ubuntu-14:~# apt-get -y install logwatch\nDuring the installation process you will be prompted to configure few installation packages, so choose the best settings as per your requirements.Postfix ConfigurationHere you need to choose the mail servers configuration according to your environment. Let’s choose from the provided general types of mail configuration and press ok to proceed.Let’s configure your system mail name that should be fully qualified domain name. Most probably the mail name is the hostname of your server. Read the instruction carefully during the configurations to choose the best options according to your requirements.Once the logwatch installation is done, you will be able to see the end results of installation as shown in the snapshot.Logwatch ConfigurationsNow let’s move forward with configuration of Logwatch, make sure that your server’s emails are functioning properly and are able to send email via postfix.L ocations of Configuration FileThere are two configuration file options, one for its local configurations and the second for its default configurations. The local configurations file is located in /etc/logwatch/conf/logwatch.conf while the default configurations file can be configured in /usr/share/logwatch/default.conf/logwatch.conf.Common ConfigurationsTo make changes in the default configuration file of Logwatch, open the file with your file editor and configure it for setting up the common configurations.root@ubuntu-14:~# vim /usr/share/logwatch/default.conf/logwatch.conf\nThis is the default configuration file of Logwatch and we will just change its email settings here as required.The Recipient email address to which daily email reports will be sent can be changed here as:#MailTo = root\nMailTo = user@vexxhost.com\nThe Sender email address from which the reports will be received can be changed as:MailFrom = Logwatch\nMailFrom = user@vexxhost.com\nThe Default Time Range for reports can be changed here to All, Yesterday or Today.Range = today\nThe default detail level for the report can also be changed from the available options here. The available options can either be Low, Med, High or a number.Detail = Low\nThe default service(s) to report on can change here if required.Service = All\nThis can be left as All to receive reports from all services and applications running on the server. If you don’t wish to get reports from all services then you can change this option from All to any specific service name, for more than one service to be reported on just update the file with multiple options like:Service = apache2\nService = ssh\nService = mariadb\nAfter making configuration changes as per your requirements save the file with wq! if you are using vim editor and then check if your logwatch is working fine.Testing LogwatchIn order to test the logwatch we can manually run the logwatch service whenever we need to get the report. To test the Logwatch simply run the logwatch command as:root@ubuntu-14:~# logwatch\nThe starting report format from the logwatch will like as below.The logwatch command will shows the report from from each service running and applications installed on it. Following is the result of logwatch from some of the service running on it like postfix, ssh, etc.The logwatch command will end with following lines by showing the report about the filesystem disk space usage.ConclusionLogwatch is one of the best tool that every system administrator must give it a try and use this to monitor the logs of a server running some critical services on it where multiple number of users connects on daily basis and you have to look after the logs if anyone had made any changes on the server. So, get ready with your Logwatch setup and start analyzing your logs with an efficient and professional way. Feel free to comment us here if need further assistance or if you face any kind of problem during its setup."},{"id":39,"Title":"Getting Started with MEAN Stack","Slug":"resources/tutorials/getting-started-with-mean-stack","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Node.js has one of the biggest tech communities behind it and as a result it also has a colossal amount of toolset to choose from for whatever project you are working on. Small tools are great but what happens when you are building a large scale web application and you plan to maintain it for a long time?</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617080483/mean_1ec7d4a3b3.png\"></figure><p style=\"margin-left:0px;\">MEAN stack comes to the rescue. <strong>MEAN</strong> stands for <a href=\"https://www.mongodb.org/\">MongoDB</a>, <a href=\"https://expressjs.com/\">Express.js</a>, <a href=\"https://angularjs.org/\">Angular.js</a>, <a href=\"https://nodejs.org/\">Node.js</a>. You see, all these are small tools that people have already built and if you put them together you get an amazingly productive and scalable <strong>fullstack framework</strong> to build your node.js application.</p><h3>Choosing The Right Tool</h3><p style=\"margin-left:0px;\">Now that you know what the MEAN really is, you can just go ahead and build your own stack using the underlying tools. But do not forget that having a community as big as the Node.js community, there is always a small chance that whatever you are building, there is probably the same or at least a similar tool already built by someone else. So, a rule of thumb, when working on a Node.js based project, is to look it up on npm (<a href=\"https://npmjs.org/\">the Node.js dependency/project manager</a>) first.</p><p style=\"margin-left:0px;\">If you search for <strong>mean</strong> on npm you will find a lot of boilerplates that you can choose from. I personally prefer meanjs since it has some really awesome maintainers and comes packaged with a lot of cool features out of the box. You can read more about it on their <a href=\"https://meanjs.org/\">official website</a>.</p><h3>Getting Started</h3><p style=\"margin-left:0px;\">You need to have some tools installed prior to diving into writing code. You need to have –</p><ol><li>Node.js and npm installed. (<a href=\"https://vexxhost.com/blog/installing-latest-node-js-on-ubuntu/\">Follow the installation guide</a>)</li><li>MongoDB installed. (<a href=\"https://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/\">Follow the installation guide</a>)</li><li>Bower installed for managing our frontend libraries. (<a href=\"https://bower.io/#install-bower\">Follow the installation guide</a>)</li><li>Grunt installed as our build tool. (<a href=\"https://gruntjs.com/getting-started\">Follow the installation guide</a>)</li></ol><p style=\"margin-left:0px;\">Once you have everything, fire up a terminal window and run the following command to clone the repository using git. Then cd into the directory.</p><pre><code class=\"language-plaintext\">$ git clone https://github.com/meanjs/mean.git meanjs\n$ cd meanjs\n</code></pre><p style=\"margin-left:0px;\">Now we have to install all the dependencies using npm.</p><pre><code class=\"language-plaintext\">$ npm install\n</code></pre><p style=\"margin-left:0px;\">That is it, you’re ready to go. Now simply run $ grunt before you open up a browser and navigate to http://localhost:3000. On that webpage, you can play around the sample articles feature.</p><h3>A Closer Look</h3><p style=\"margin-left:0px;\">Now that we have our stack ready and our application running, we are ready to dive into the code. The folder structure is pretty intuitive. We have app/ directory where all our backend code reside and public/ for all our frontend code. config/ is where all our application’s configuration and environment based settings go and tests/ is for the test files.</p><p style=\"margin-left:0px;\">Mean.js follows a very modular architecture. It treats each feature as a module and each module has its backend and frontend components. Take a look at the codes inside, it has a built in module for user management and articles that you can follow if you need a sample. In the backend, you get controller, model, view and routes for the article module. In the frontend you have controller, service and view. Of course, all the components come with built-in tests.</p><h3>Scaffolding</h3><p style=\"margin-left:0px;\">One of the most handy features of mean.js is its command line generator tool. It is built on yeoman and packed with very useful commands that will help you quickly scaffold a base for your modules/features.</p><p style=\"margin-left:0px;\">To use it, we need yeoman and the meanjs-generator installed. If you are on your development machine, I suggest installing it globally so that you can take advantage of it for every project. Run the following commands –</p><pre><code class=\"language-plaintext\">$ npm install -g yo\n$ npm install -g generator-meanjs\n</code></pre><p style=\"margin-left:0px;\"><strong>Note:</strong> You might need sudo to install packages globally</p><p style=\"margin-left:0px;\">Run the following command to create a new module for posting small statuses.</p><pre><code class=\"language-plaintext\">$ yo meanjs:crud-module status\n</code></pre><p style=\"margin-left:0px;\">You will be asked a few questions. First, if you want css, directives etc. with the frontend component. For this quick demo, we do not need any of those so just press enter. Second, if you want this module to be added in the top menu bar, write ‘Y’ and press enter. Third, what should the name on the menu be? Simply name it ‘Status’ and press enter. Now you should see an output similar to the following –</p><pre><code class=\"language-plaintext\">create app/controllers/statuses.server.controller.js\ncreate app/models/status.server.model.js\ncreate app/routes/statuses.server.routes.js\ncreate app/tests/status.server.model.test.js\ncreate public/modules/statuses/config/statuses.client.routes.js\ncreate public/modules/statuses/controllers/statuses.client.controller.js\ncreate public/modules/statuses/services/statuses.client.service.js\ncreate public/modules/statuses/tests/statuses.client.controller.test.js\ncreate public/modules/statuses/views/create-status.client.view.html\ncreate public/modules/statuses/views/edit-status.client.view.html\ncreate public/modules/statuses/views/list-statuses.client.view.html\ncreate public/modules/statuses/views/view-status.client.view.html\ncreate public/modules/statuses/statuses.client.module.js\n</code></pre><p style=\"margin-left:0px;\">That is it, you can now visit http://localhost:3000/#!/statuses and create, update and delete statuses. It is that simple.</p><p style=\"margin-left:0px;\">You may not always need to create a full fledged crud module for every feature and MEAN.js has that covered too. You can just scaffold a standalone backend controller or a frontend angular service using the generator.</p><pre><code class=\"language-plaintext\">//create a backend controller\n$ yo meanjs:express-controller &lt;controller-name&gt;\n//create an angular.js service\n$ yo meanjs:angular-service &lt;service-name&gt;\n</code></pre><h3>What’s Next?</h3><p style=\"margin-left:0px;\">I bet you are already impressed with the productivity of MEAN.js and I encourage you to take a look at their official documentation to find out more about it is strengths. Make something small at first, an issue tracker or a bookmark manager. You will learn many things on your way.</p><p style=\"margin-left:0px;\">We will also be covering more ground on this topic so check back soon.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:02:40.637Z","created_at":"2021-03-30T05:01:50.028Z","updated_at":"2021-03-30T05:02:41.310Z","PostSEO":{"id":513,"GoogleSEO":{"id":504,"Title":"Getting Started with MEAN Stack - VEXXHOST","Description":"Node.js has one of the biggest tech communities behind it and as a result it also has a colossal amount of toolset to choose from for whatever project you"},"FacebookSEO":{"id":500,"Title":"Getting Started with MEAN Stack - VEXXHOST","Url":null,"Description":"Node.js has one of the biggest tech communities behind it and as a result it also has a colossal amount of toolset to choose from for whatever project you","SiteName":"VEXXHOST","Image":{"id":626,"name":"Getting-Started-with-MEAN-Stack-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080462/small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"small_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":73.43,"width":500,"height":250,"provider_metadata":{"public_id":"small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080461/medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"medium_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":178.46,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080458/thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"thumbnail_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":18.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}}},"hash":"Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","ext":".png","mime":"image/png","size":134.26,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080457/Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"},"created_at":"2021-03-30T05:01:02.792Z","updated_at":"2021-03-30T05:01:02.811Z"}},"TwitterSEO":{"id":500,"Description":"Node.js has one of the biggest tech communities behind it and as a result it also has a colossal amount of toolset to choose from for whatever project you","Title":"Getting Started with MEAN Stack - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":626,"name":"Getting-Started-with-MEAN-Stack-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080462/small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"small_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":73.43,"width":500,"height":250,"provider_metadata":{"public_id":"small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080461/medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"medium_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":178.46,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080458/thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"thumbnail_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":18.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}}},"hash":"Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","ext":".png","mime":"image/png","size":134.26,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080457/Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"},"created_at":"2021-03-30T05:01:02.792Z","updated_at":"2021-03-30T05:01:02.811Z"}}},"LinkToResource":{"id":431,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":626,"name":"Getting-Started-with-MEAN-Stack-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080462/small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"small_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":73.43,"width":500,"height":250,"provider_metadata":{"public_id":"small_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080461/medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"medium_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":178.46,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080458/thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","hash":"thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","mime":"image/png","name":"thumbnail_Getting-Started-with-MEAN-Stack-800x400.png","path":null,"size":18.57,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"}}},"hash":"Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","ext":".png","mime":"image/png","size":134.26,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080457/Getting_Started_with_MEAN_Stack_800x400_95de9eedc1.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Getting_Started_with_MEAN_Stack_800x400_95de9eedc1","resource_type":"image"},"created_at":"2021-03-30T05:01:02.792Z","updated_at":"2021-03-30T05:01:02.811Z"},"TextContent":"Node.js has one of the biggest tech communities behind it and as a result it also has a colossal amount of toolset to choose from for whatever project you are working on. Small tools are great but what happens when you are building a large scale web application and you plan to maintain it for a long time?MEAN stack comes to the rescue. MEAN stands for MongoDB, Express.js, Angular.js, Node.js. You see, all these are small tools that people have already built and if you put them together you get an amazingly productive and scalable fullstack framework to build your node.js application.Choosing The Right ToolNow that you know what the MEAN really is, you can just go ahead and build your own stack using the underlying tools. But do not forget that having a community as big as the Node.js community, there is always a small chance that whatever you are building, there is probably the same or at least a similar tool already built by someone else. So, a rule of thumb, when working on a Node.js based project, is to look it up on npm (the Node.js dependency/project manager) first.If you search for mean on npm you will find a lot of boilerplates that you can choose from. I personally prefer meanjs since it has some really awesome maintainers and comes packaged with a lot of cool features out of the box. You can read more about it on their official website.Getting StartedYou need to have some tools installed prior to diving into writing code. You need to have –Node.js and npm installed. (Follow the installation guide)MongoDB installed. (Follow the installation guide)Bower installed for managing our frontend libraries. (Follow the installation guide)Grunt installed as our build tool. (Follow the installation guide)Once you have everything, fire up a terminal window and run the following command to clone the repository using git. Then cd into the directory.$ git clone https://github.com/meanjs/mean.git meanjs\n$ cd meanjs\nNow we have to install all the dependencies using npm.$ npm install\nThat is it, you’re ready to go. Now simply run $ grunt before you open up a browser and navigate to http://localhost:3000. On that webpage, you can play around the sample articles feature.A Closer LookNow that we have our stack ready and our application running, we are ready to dive into the code. The folder structure is pretty intuitive. We have app/ directory where all our backend code reside and public/ for all our frontend code. config/ is where all our application’s configuration and environment based settings go and tests/ is for the test files.Mean.js follows a very modular architecture. It treats each feature as a module and each module has its backend and frontend components. Take a look at the codes inside, it has a built in module for user management and articles that you can follow if you need a sample. In the backend, you get controller, model, view and routes for the article module. In the frontend you have controller, service and view. Of course, all the components come with built-in tests.ScaffoldingOne of the most handy features of mean.js is its command line generator tool. It is built on yeoman and packed with very useful commands that will help you quickly scaffold a base for your modules/features.To use it, we need yeoman and the meanjs-generator installed. If you are on your development machine, I suggest installing it globally so that you can take advantage of it for every project. Run the following commands –$ npm install -g yo\n$ npm install -g generator-meanjs\nNote: You might need sudo to install packages globallyRun the following command to create a new module for posting small statuses.$ yo meanjs:crud-module status\nYou will be asked a few questions. First, if you want css, directives etc. with the frontend component. For this quick demo, we do not need any of those so just press enter. Second, if you want this module to be added in the top menu bar, write ‘Y’ and press enter. Third, what should the name on the menu be? Simply name it ‘Status’ and press enter. Now you should see an output similar to the following –create app/controllers/statuses.server.controller.js\ncreate app/models/status.server.model.js\ncreate app/routes/statuses.server.routes.js\ncreate app/tests/status.server.model.test.js\ncreate public/modules/statuses/config/statuses.client.routes.js\ncreate public/modules/statuses/controllers/statuses.client.controller.js\ncreate public/modules/statuses/services/statuses.client.service.js\ncreate public/modules/statuses/tests/statuses.client.controller.test.js\ncreate public/modules/statuses/views/create-status.client.view.html\ncreate public/modules/statuses/views/edit-status.client.view.html\ncreate public/modules/statuses/views/list-statuses.client.view.html\ncreate public/modules/statuses/views/view-status.client.view.html\ncreate public/modules/statuses/statuses.client.module.js\nThat is it, you can now visit http://localhost:3000/#!/statuses and create, update and delete statuses. It is that simple.You may not always need to create a full fledged crud module for every feature and MEAN.js has that covered too. You can just scaffold a standalone backend controller or a frontend angular service using the generator.//create a backend controller\n$ yo meanjs:express-controller <controller-name>\n//create an angular.js service\n$ yo meanjs:angular-service <service-name>\nWhat’s Next?I bet you are already impressed with the productivity of MEAN.js and I encourage you to take a look at their official documentation to find out more about it is strengths. Make something small at first, an issue tracker or a bookmark manager. You will learn many things on your way.We will also be covering more ground on this topic so check back soon."},{"id":42,"Title":"How to Setup OpenStack CLI Tools","Slug":"resources/tutorials/how-to-setup-openstack-cli-tools","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">In this tutorial, we’re going to look into installing all the CLI toolsets required to interact with an OpenStack cloud (taking our cloud as an example). At the time of writing this article, there are currently two OpenStack CLI toolsets.</p><h2 style=\"margin-left:0px;\">Introduction</h2><p style=\"margin-left:0px;\">The first one consists of multiple different tools, each designed to manage a specific component of OpenStack. It offers a nova command to manage compute, neutron to manage networking, glance to manage images and much more.</p><p style=\"margin-left:0px;\">However, the first toolset is currently on it’s way out and it is being replaced by a common OpenStack client which aims to cover all different services from a single openstack tool, which should simplify and usage and interaction with any OpenStack Cloud.</p><h2 style=\"margin-left:0px;\">Prerequisites</h2><p style=\"margin-left:0px;\">This tutorial assumes that you already have Python installed on your operating system. If you’re running a distribution of Linux or Mac OS X then it is likely already preinstalled on your operating system. If you’re using Windows, you’ll have to <a href=\"https://www.python.org/downloads/windows/\">install Python</a>.</p><p style=\"margin-left:0px;\">In addition, you’ll have to make sure you have pip, the recommended tool for installing Python packages installed. If you don’t have it, you can install it with the instructions below. Windows installations now have it included by default so you won’t have to install it.</p><p style=\"margin-left:0px;\">&nbsp;</p><ul><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#debian\">Debian/Ubuntu</a></li><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#redhat\">Redhat/CentOS</a></li><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#osx\">Mac OS X</a></li></ul><p style=\"margin-left:0px;\">&nbsp;</p><p>$ sudo apt-get -y install python-pip</p><p>$ sudo yum -y install python-pip</p><p>$ sudo easy_install -U pip</p><h2 style=\"margin-left:0px;\">Installation</h2><p style=\"margin-left:0px;\">The process of installing the OpenStack clients is quite easy, both for the former and new toolsets. We’ll do it all at one command but the thing to note is that python-openstackclient is the new client while the others are simply part of the older toolset.</p><p style=\"margin-left:0px;\">It’s important to note that we’re using sudo to install in this case. The reason behind this is that we want the installation of the packages to be global, so that you can call the CLI anywhere on your machine by simply typing openstack or nova, etc.</p><pre><code class=\"language-plaintext\">$ sudo pip install -U python-keystoneclient python-novaclient python-heatclient python-swiftclient python-neutronclient python-cinderclient python-glanceclient python-openstackclient\n</code></pre><p style=\"margin-left:0px;\">Once this is all done, you should be able to type nova, glance, neutron or openstack in your CLI, but you will likely be informed that you must provide credentials when trying to perform any actions.</p><h2 style=\"margin-left:0px;\">Configuration</h2><p style=\"margin-left:0px;\">This part is quite cloud-specific so we’ll try to cover as much as we can to help you get your credentials. There’s usually 4 or 5 items that you need in order to be able to successfully authenticate to an OpenStack cloud.</p><figure class=\"table\"><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Environment Variable</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>Authentication URL</td><td>OS_AUTH_URL</td><td>This typically is the URL of where the Keystone service runs</td></tr><tr><td>Region (optional)</td><td>OS_REGION_NAME</td><td>If you’re using a cloud with multiple regions, this would need to be specified.</td></tr><tr><td>Username</td><td>OS_USERNAME</td><td>The username you’re provided for the OpenStack API.</td></tr><tr><td>Password</td><td>OS_PASSWORD</td><td>The password you’re provided for the OpenStack API.</td></tr><tr><td>Tenant Name</td><td>OS_TENANT_NAME</td><td>This is the tenant you’re trying to access, usually it will be provided to you.</td></tr></tbody></table></figure><p style=\"margin-left:0px;\">You’ll have to get all that information first before continuing with this. We have instructions on how to get this information from our OpenStack Public Cloud and users who are currently accessing OpenStack via the Horizon dashboard.</p><p style=\"margin-left:0px;\">&nbsp;</p><ul><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#vexxhost\">VEXXHOST Public Cloud</a></li><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#horizon\">OpenStack Dashboard</a></li></ul><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">It’s quite simple to get your credentials on the VEXXHOST Public Cloud. All you’ll have to do is start by logging into your customer center with your account details.</p><p style=\"margin-left:0px;\">Once you’ve logged in, click on the “API Credentials” button on the sidebar which should send you to a page that contains all your information and environment variables.</p><p style=\"margin-left:0px;\">You’ll need to login to your OpenStack dashboard with your credentials first of all. Once you’re logged in, make sure that the you have the correct “Project” and “Region” selected from the top of the page.</p><p style=\"margin-left:0px;\">Afterwards, click on the “Project” tab, open the “Compute” section if it is not open and click on “Access &amp; Security”. Once there, click on “API access”.</p><p style=\"margin-left:0px;\">On that page, click on “View Credentials” and you’ll have all your information listed there. For the password, it will be the one you used to login to your OpenStack dashboard, as Horizon does not list it.</p><p style=\"margin-left:0px;\">Once you have all the information you need handy, we’ll configure your environment to include all the these required variables so that you can use the OpenStack CLI with no problems. Depending on what type of operating system you’re running, you’ll have to make some different changes.</p><p style=\"margin-left:0px;\">If you’re using a different shell than the default built-in one with your operating system, you’ll have to follow the instructions specific to your shell, if you haven’t changed it, you can use the instructions below.</p><p style=\"margin-left:0px;\">&nbsp;</p><ul><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#linux\">Linux / Mac OS X</a></li><li><a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/#windows\">Microsoft Windows</a></li></ul><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">This tutorial assumes that you’re using the default shell, `bash`. If you’re not, you’ll have to follow instructions specific to your shell.</p><p style=\"margin-left:0px;\">You’ll need to edit the file located in your home directory called `.bash_profile`. You can use your favorite text editing tool to make the changes. All you’ll need to do is add the following lines at the end of the file</p><p>OS_AUTH_URL=... OS_REGION_NAME=... OS_USERNAME=... OS_PASSWORD=... OS_TENANT_NAME=...</p><p style=\"margin-left:0px;\">You’ll have to update the dotted part by the value which you’ve retrieved earlier in this tutorial. If you’re using the VEXXHOST public cloud, this information is already provided to you on the API credentials page.</p><p style=\"margin-left:0px;\">The process for adding environment variables under Windows a bit more challenging, but it’s a bit easier overall. Start by going to the “Control Panel” from the Start Menu and go to the “System and Security” section, select System from there.</p><p style=\"margin-left:0px;\">Once there, click on the “Advanced” tab and click on the environment variables button on the bottom of the window displayed. Once you’re there, click on the “New” button under the “User variables” section of the Environment Variables window.</p><p style=\"margin-left:0px;\">In there, for the variable, use the ones listed in table above (such as `OS_AUTH_URL`) and for the value, use the ones you determined for the cloud you’re currently attempting to connect to.</p><p style=\"margin-left:0px;\">Once you’ve completed this process, your OpenStack environment variables should be fully configured. <strong>It’s extremely important that you restart your open shells in order for the environment variables to be applied</strong>.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">Once you’ve done this, you can test out that you can successfully authenticate. You can now start using all of the OpenStack toolset directly from your CLI which makes it even easier to manage your infrastructure.</p><pre><code class=\"language-plaintext\">$ nova credentials\n+------------------+----------------------------------+\n| User Credentials | Value                            |\n+------------------+----------------------------------+\n| id               | 1fe021efed5f4fb68c095d6f85f18f4b |\n| name             | user                             |\n| roles            | []                               |\n| roles_links      |                                  |\n| username         | user                             |\n+------------------+----------------------------------+\n+-----------+-----------------------------------------------------+\n| Token     | Value                                               |\n+-----------+-----------------------------------------------------+\n| audit_ids | [\"2_xwfWJFTJyLxyFGDj_9oQ\"]                          |\n| expires   | 2015-06-19T18:51:35Z                                |\n| id        | df5c6b9ffdf44f2bffabfcff69c4f46b                    |\n| issued_at | 2015-06-19T17:51:35.179874                          |\n| tenant    | {\"enabled\": true, \"description\": \"tenant\", \"name\":  |\n|           | \"tenant\", \"id\": \"d75ffb0f98b5ffcc9e4e0fff2e1ff2e4\"} |\n+-----------+-----------------------------------------------------+\n</code></pre><p style=\"margin-left:0px;\">You can also start using and learning the new openstack CLI tool, you can use the openstack help command to get information about what you can do from it, but it’s extremely easy to use, this is how simple you can get a server up.</p><pre><code class=\"language-plaintext\">$ openstack server create --image \"Ubuntu 14.04.2 LTS\" --flavor nb.1G ubuntu-server\n</code></pre><p style=\"margin-left:0px;\">Hopefully by now you have all the tools you need to run your infrastructure directly from your terminal, which is an extremely powerful tool to help for automation and allowing you to easily create and anything from servers to networks.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:07:37.431Z","created_at":"2021-03-30T05:07:29.623Z","updated_at":"2021-03-30T05:07:37.817Z","PostSEO":{"id":516,"GoogleSEO":{"id":507,"Title":"How to Setup OpenStack CLI Tools - VEXXHOST","Description":"In this tutorial, we’re going to look into installing all the CLI toolsets required to interact with an OpenStack cloud (taking our cloud as an example)."},"FacebookSEO":{"id":503,"Title":"How to Setup OpenStack CLI Tools - VEXXHOST","Url":null,"Description":"In this tutorial, we’re going to look into installing all the CLI toolsets required to interact with an OpenStack cloud (taking our cloud as an example).","SiteName":"VEXXHOST","Image":{"id":632,"name":"How-to-Setup-OpenStack-CLI-Tools-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080792/small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"small_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":99.78,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080791/medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"medium_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":246.86,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080787/thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"thumbnail_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":24.63,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}}},"hash":"How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","ext":".png","mime":"image/png","size":189.71,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080786/How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"},"created_at":"2021-03-30T05:06:32.286Z","updated_at":"2021-03-30T05:06:32.408Z"}},"TwitterSEO":{"id":503,"Description":"In this tutorial, we’re going to look into installing all the CLI toolsets required to interact with an OpenStack cloud (taking our cloud as an example).","Title":"How to Setup OpenStack CLI Tools - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":632,"name":"How-to-Setup-OpenStack-CLI-Tools-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080792/small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"small_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":99.78,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080791/medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"medium_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":246.86,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080787/thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"thumbnail_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":24.63,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}}},"hash":"How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","ext":".png","mime":"image/png","size":189.71,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080786/How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"},"created_at":"2021-03-30T05:06:32.286Z","updated_at":"2021-03-30T05:06:32.408Z"}}},"LinkToResource":{"id":434,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":632,"name":"How-to-Setup-OpenStack-CLI-Tools-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080792/small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"small_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":99.78,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080791/medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"medium_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":246.86,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080787/thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","hash":"thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","mime":"image/png","name":"thumbnail_How-to-Setup-OpenStack-CLI-Tools-800x400.png","path":null,"size":24.63,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"}}},"hash":"How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","ext":".png","mime":"image/png","size":189.71,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080786/How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Setup_Open_Stack_CLI_Tools_800x400_955f22c483","resource_type":"image"},"created_at":"2021-03-30T05:06:32.286Z","updated_at":"2021-03-30T05:06:32.408Z"},"TextContent":"In this tutorial, we’re going to look into installing all the CLI toolsets required to interact with an OpenStack cloud (taking our cloud as an example). At the time of writing this article, there are currently two OpenStack CLI toolsets.IntroductionThe first one consists of multiple different tools, each designed to manage a specific component of OpenStack. It offers a nova command to manage compute, neutron to manage networking, glance to manage images and much more.However, the first toolset is currently on it’s way out and it is being replaced by a common OpenStack client which aims to cover all different services from a single openstack tool, which should simplify and usage and interaction with any OpenStack Cloud.PrerequisitesThis tutorial assumes that you already have Python installed on your operating system. If you’re running a distribution of Linux or Mac OS X then it is likely already preinstalled on your operating system. If you’re using Windows, you’ll have to install Python.In addition, you’ll have to make sure you have pip, the recommended tool for installing Python packages installed. If you don’t have it, you can install it with the instructions below. Windows installations now have it included by default so you won’t have to install it. Debian/UbuntuRedhat/CentOSMac OS X $ sudo apt-get -y install python-pip$ sudo yum -y install python-pip$ sudo easy_install -U pipInstallationThe process of installing the OpenStack clients is quite easy, both for the former and new toolsets. We’ll do it all at one command but the thing to note is that python-openstackclient is the new client while the others are simply part of the older toolset.It’s important to note that we’re using sudo to install in this case. The reason behind this is that we want the installation of the packages to be global, so that you can call the CLI anywhere on your machine by simply typing openstack or nova, etc.$ sudo pip install -U python-keystoneclient python-novaclient python-heatclient python-swiftclient python-neutronclient python-cinderclient python-glanceclient python-openstackclient\nOnce this is all done, you should be able to type nova, glance, neutron or openstack in your CLI, but you will likely be informed that you must provide credentials when trying to perform any actions.ConfigurationThis part is quite cloud-specific so we’ll try to cover as much as we can to help you get your credentials. There’s usually 4 or 5 items that you need in order to be able to successfully authenticate to an OpenStack cloud.ParameterEnvironment VariableDescriptionAuthentication URLOS_AUTH_URLThis typically is the URL of where the Keystone service runsRegion (optional)OS_REGION_NAMEIf you’re using a cloud with multiple regions, this would need to be specified.UsernameOS_USERNAMEThe username you’re provided for the OpenStack API.PasswordOS_PASSWORDThe password you’re provided for the OpenStack API.Tenant NameOS_TENANT_NAMEThis is the tenant you’re trying to access, usually it will be provided to you.You’ll have to get all that information first before continuing with this. We have instructions on how to get this information from our OpenStack Public Cloud and users who are currently accessing OpenStack via the Horizon dashboard. VEXXHOST Public CloudOpenStack Dashboard It’s quite simple to get your credentials on the VEXXHOST Public Cloud. All you’ll have to do is start by logging into your customer center with your account details.Once you’ve logged in, click on the “API Credentials” button on the sidebar which should send you to a page that contains all your information and environment variables.You’ll need to login to your OpenStack dashboard with your credentials first of all. Once you’re logged in, make sure that the you have the correct “Project” and “Region” selected from the top of the page.Afterwards, click on the “Project” tab, open the “Compute” section if it is not open and click on “Access & Security”. Once there, click on “API access”.On that page, click on “View Credentials” and you’ll have all your information listed there. For the password, it will be the one you used to login to your OpenStack dashboard, as Horizon does not list it.Once you have all the information you need handy, we’ll configure your environment to include all the these required variables so that you can use the OpenStack CLI with no problems. Depending on what type of operating system you’re running, you’ll have to make some different changes.If you’re using a different shell than the default built-in one with your operating system, you’ll have to follow the instructions specific to your shell, if you haven’t changed it, you can use the instructions below. Linux / Mac OS XMicrosoft Windows This tutorial assumes that you’re using the default shell, `bash`. If you’re not, you’ll have to follow instructions specific to your shell.You’ll need to edit the file located in your home directory called `.bash_profile`. You can use your favorite text editing tool to make the changes. All you’ll need to do is add the following lines at the end of the fileOS_AUTH_URL=... OS_REGION_NAME=... OS_USERNAME=... OS_PASSWORD=... OS_TENANT_NAME=...You’ll have to update the dotted part by the value which you’ve retrieved earlier in this tutorial. If you’re using the VEXXHOST public cloud, this information is already provided to you on the API credentials page.The process for adding environment variables under Windows a bit more challenging, but it’s a bit easier overall. Start by going to the “Control Panel” from the Start Menu and go to the “System and Security” section, select System from there.Once there, click on the “Advanced” tab and click on the environment variables button on the bottom of the window displayed. Once you’re there, click on the “New” button under the “User variables” section of the Environment Variables window.In there, for the variable, use the ones listed in table above (such as `OS_AUTH_URL`) and for the value, use the ones you determined for the cloud you’re currently attempting to connect to.Once you’ve completed this process, your OpenStack environment variables should be fully configured. It’s extremely important that you restart your open shells in order for the environment variables to be applied.ConclusionOnce you’ve done this, you can test out that you can successfully authenticate. You can now start using all of the OpenStack toolset directly from your CLI which makes it even easier to manage your infrastructure.$ nova credentials\n+------------------+----------------------------------+\n| User Credentials | Value                            |\n+------------------+----------------------------------+\n| id               | 1fe021efed5f4fb68c095d6f85f18f4b |\n| name             | user                             |\n| roles            | []                               |\n| roles_links      |                                  |\n| username         | user                             |\n+------------------+----------------------------------+\n+-----------+-----------------------------------------------------+\n| Token     | Value                                               |\n+-----------+-----------------------------------------------------+\n| audit_ids | [\"2_xwfWJFTJyLxyFGDj_9oQ\"]                          |\n| expires   | 2015-06-19T18:51:35Z                                |\n| id        | df5c6b9ffdf44f2bffabfcff69c4f46b                    |\n| issued_at | 2015-06-19T17:51:35.179874                          |\n| tenant    | {\"enabled\": true, \"description\": \"tenant\", \"name\":  |\n|           | \"tenant\", \"id\": \"d75ffb0f98b5ffcc9e4e0fff2e1ff2e4\"} |\n+-----------+-----------------------------------------------------+\nYou can also start using and learning the new openstack CLI tool, you can use the openstack help command to get information about what you can do from it, but it’s extremely easy to use, this is how simple you can get a server up.$ openstack server create --image \"Ubuntu 14.04.2 LTS\" --flavor nb.1G ubuntu-server\nHopefully by now you have all the tools you need to run your infrastructure directly from your terminal, which is an extremely powerful tool to help for automation and allowing you to easily create and anything from servers to networks."},{"id":40,"Title":"MEAN & Socket.IO Integration Tutorial","Slug":"resources/tutorials/mean-socket-io-integration-tutorial","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">One of hottest topic in node.js is building realtime web applications. If you come from a C/C++/Java background, you will be amazed how surprisingly easy it is to quickly build out a realtime communication between browser client and server using node.js.</p><p style=\"margin-left:0px;\">Today we will learn to do exactly that, using <a href=\"https://socket.io/\">socket.io</a> on top of the MEAN stack. By the end of this article you will have a functioning realtime communication in a MEAN stack app that notifies all connected clients about a certain event in realtime.</p><h3>Before We Start:</h3><p style=\"margin-left:0px;\">We are going to use npm and mean.js. If you’re not already familiar with the MEAN stack or node.js, I suggest you take some time to catch up with this trendy and amazing platform for writing web applications.</p><p style=\"margin-left:0px;\">You can quickly follow <a href=\"https://vexxhost.com/blog/getting-started-with-mean-stack/\">this tutorial here</a> and get your environment setup for the following sections.</p><h3>Installing socket.io:</h3><p style=\"margin-left:0px;\">Assuming you have already read the suggested article or have the mentioned packages installed on your machine, let’s fire up a terminal window and create a new Mean.js project by running the following command</p><pre><code class=\"language-plaintext\">$ mkdir awesome-realtime-app &amp;&amp; cd $_\n$ yo meanjs\n</code></pre><p style=\"margin-left:0px;\">The generator will ask you the following questions(I have included my answers below, feel free to write down yours instead). Make sure that you include the default article module though, we will bind our realtime feature with that module.</p><pre><code class=\"language-plaintext\">[?] What would you like to call your application? Awesome Realtime Application\n[?] How would you describe your application? Full-Stack JavaScript with MongoDB, Express, AngularJS, and Node.js\n[?] How would you describe your application in comma seperated key words? MongoDB, Express, AngularJS, Node.js\n[?] What is your company/author name? VEXXHOST\n[?] Would you like to generate the article example CRUD module? Yes\n[?] Which AngularJS modules would you like to include? ngCookies, ngAnimate, ngTouch, ngSanitize\n</code></pre><p style=\"margin-left:0px;\">Now just run $ grunt and you should have the app running on your localhost through port 3000.<br>Let’s include the awesome socket.io module from npm in our app. Run $ npm install socket.io --save, this will install the package and add this in our package.json file.</p><h3>Binding socket.io With Express:</h3><p style=\"margin-left:0px;\">To initiate the server side socket connection, we need to integrate it with express.js. Let’s start by opening up the file config/express.js in your favorite code editor and require the http and socket.io modules. I am adding this between line 6 and 7, right after the require of express –</p><pre><code class=\"language-plaintext\">var express = require('express'),\n    http = require('http'),\n    socketio = require('socket.io'),\n    .......\n</code></pre><p style=\"margin-left:0px;\">Now, let’s tie it up with the app instance so that we can access it from anywhere in our app by taking advantage of the circular dependency of express.js. Go to the end of the file and add the following code right before the line where it reads return app;–</p><pre><code class=\"language-plaintext\">// Attach Socket.io\nvar server = http.createServer(app);\nvar io = socketio.listen(server);\napp.set('socketio', io);\napp.set('server', server);\n</code></pre><p style=\"margin-left:0px;\">We are simply instantiating socket.io here and attaching our express server with it in the first 2 lines. In the next two, we are storing the socket.io and the server instance in our app container.</p><p style=\"margin-left:0px;\">Easy, right? awesome! Just one more thing, open the server.js file in the root directory and find where it reads app.listen(config.port); and replace it with app.get('server').listen(config.port);. This will make sure we don’t mess up our http server instance of express.</p><p style=\"margin-left:0px;\">That’s all. Now we get to use it in our app. We will do something simple, we will notify all connected clients when a new article is created. To keep our code clean and easily maintainable, we can modularize the socket transmission and abstract it into a factory and there are many other techniques but for now we will just place it in our controller.</p><p style=\"margin-left:0px;\">Open up the article server controller, open up the file app/controllers/articles.server.controller.js and find the create method. This method gets called when a new article is created. After the article is saved and there is no error we can notify everyone about it. So the following block of code goes inside the else block and right before res.jsonp(article); –</p><pre><code class=\"language-plaintext\">var socketio = req.app.get('socketio'); // tacke out socket instance from the app container\nsocketio.sockets.emit('article.created', article); // emit an event for all connected clients\n</code></pre><p style=\"margin-left:0px;\">This first parameter in the emit method is an event name and the second parameter is the data that will get sent along with the event. That’s all our server needs to do.</p><h3>Connecting socket.io With Angular:</h3><p style=\"margin-left:0px;\">So far, we have implemented socket.io on the server but that doesn’t mean it already works on the browser. We need to do that separately. We need listen for server emitted events from the browser.</p><p style=\"margin-left:0px;\">We will use the angular component for Socket.io built by <a href=\"https://github.com/btford\">btford</a>. We can take advantage of bower for that. Running $ bower install angular-socket-io --save will install it and add it in our bower.json file.</p><p style=\"margin-left:0px;\">Next we will to create an angular factory that will handle our websocket connection on the browser. Create a new file public/modules/core/services/socket.js and place the following code in it –</p><pre><code class=\"language-plaintext\">'use strict';\n\n//socket factory that provides the socket service\nangular.module('core').factory('Socket', ['socketFactory',\n    function(socketFactory) {\n        return socketFactory({\n            prefix: '',\n            ioSocket: io.connect('http://localhost:3000')\n        });\n    }\n]);\n</code></pre><p style=\"margin-left:0px;\">We are making this a part of the core module since we will want to use it across our app. Now we can use this socket connection inside our angular app. We forgot two vital things though, injecting the dependency and include necessary javascript files on our webpage. Open up the file app/views/layout.server.view.html and add the following code before the closing &lt;/body&gt; tag –</p><pre><code class=\"language-plaintext\">&lt;!-- Socket.io --&gt;\n&lt;script\n    type=\"text/javascript\"\n    src=\"https://vexxhost.com/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n&lt;script\n    type=\"text/javascript\"\n        src=\"https://vexxhost.com/lib/angular-socket-io/socket.min.js\"&gt;&lt;/script&gt;\n</code></pre><p style=\"margin-left:0px;\">Next up, dependency injection; Open the file public/config.js and append 'btford.socket-io' at the of the list of dependencies array variable named – var applicationModuleVendorDependencies.</p><p style=\"margin-left:0px;\">That’s it, now we have socket.io integrated with our angular app. But that’s just integration, let’s see if it works. Open up public/modules/articles/controllers/article.client.controller.js and on line 3 and 4 insert the Socket dependency. It should look something like –</p><pre><code class=\"language-plaintext\">angular.module('articles').controller('ArticlesController', ['$scope', '$stateParams', '$location', 'Socket', 'Authentication', 'Articles',\n    function($scope, $stateParams, $location, Socket, Authentication, Articles) {\n</code></pre><p style=\"margin-left:0px;\">We just added the 'Socket' in the list of arrays and Socket in the list of function parameters. Now, place the following code inside the controller –</p><pre><code class=\"language-plaintext\">Socket.on('article.created', function(article) {\n    console.log(article);\n});\n</code></pre><p style=\"margin-left:0px;\">What’s happening here is, we are listening for the 'article.created' event through the socket and logging the article passed through the event in the console. To remind you, this is the event we emit when an article is created.</p><h3>Checking Out What We Built:</h3><p style=\"margin-left:0px;\">Let’s check if everything works as expected. Open up 2 browser windows and navigate to http://localhost:3000. Sign up with 2 user accounts. In one browser open up the console and navigate to the articles page in both. Now go ahead and create a new article in one browser and in the meantime, keep an eye on the console of the other. As soon as the article is created, you should see the article data in the console of the other browser! Magical! right?</p><p style=\"margin-left:0px;\">I am showing my output in the images below –</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617080613/5ylo_Q4s_30451eb8cd.png\"></figure><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617080635/op_Oo_Ss_A_4aebe14f72.png\"></figure><h3>Going Forward:</h3><p style=\"margin-left:0px;\">If you are javascript savvy, you can imagine the possibilities here. For example, you can hook onto this event and modify the dom to show notification to other users, increase articles counter on dashboard etc. If not, keep an eye towards our following posts here on VEXXHOST where we will be building amazing real time applications using this exact setup.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:04:54.116Z","created_at":"2021-03-30T05:04:48.530Z","updated_at":"2021-03-30T05:04:54.710Z","PostSEO":{"id":514,"GoogleSEO":{"id":505,"Title":"MEAN & Socket.IO Integration Tutorial - VEXXHOST","Description":"One of hottest topic in node.js is building realtime web applications. If you come from a C/C++/Java background, you will be amazed how surprisingly easy"},"FacebookSEO":{"id":501,"Title":"MEAN & Socket.IO Integration Tutorial - VEXXHOST","Url":null,"Description":"One of hottest topic in node.js is building realtime web applications. If you come from a C/C++/Java background, you will be amazed how surprisingly easy","SiteName":"VEXXHOST","Image":{"id":628,"name":"MEAN-Socket.IO-Integration-Tutorial-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080581/small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"small_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":41.12,"width":500,"height":250,"provider_metadata":{"public_id":"small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080580/medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"medium_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":117.63,"width":750,"height":375,"provider_metadata":{"public_id":"medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080577/thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"thumbnail_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":8.2,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}}},"hash":"MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","ext":".png","mime":"image/png","size":64.38,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080576/MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"},"created_at":"2021-03-30T05:03:01.871Z","updated_at":"2021-03-30T05:03:01.913Z"}},"TwitterSEO":{"id":501,"Description":"One of hottest topic in node.js is building realtime web applications. If you come from a C/C++/Java background, you will be amazed how surprisingly easy","Title":"MEAN & Socket.IO Integration Tutorial - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":628,"name":"MEAN-Socket.IO-Integration-Tutorial-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080581/small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"small_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":41.12,"width":500,"height":250,"provider_metadata":{"public_id":"small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080580/medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"medium_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":117.63,"width":750,"height":375,"provider_metadata":{"public_id":"medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080577/thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"thumbnail_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":8.2,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}}},"hash":"MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","ext":".png","mime":"image/png","size":64.38,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080576/MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"},"created_at":"2021-03-30T05:03:01.871Z","updated_at":"2021-03-30T05:03:01.913Z"}}},"LinkToResource":{"id":432,"Description":"<h3 style=\"text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h3>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":628,"name":"MEAN-Socket.IO-Integration-Tutorial-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080581/small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"small_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":41.12,"width":500,"height":250,"provider_metadata":{"public_id":"small_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080580/medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"medium_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":117.63,"width":750,"height":375,"provider_metadata":{"public_id":"medium_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080577/thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","hash":"thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","mime":"image/png","name":"thumbnail_MEAN-Socket.IO-Integration-Tutorial-800x400.png","path":null,"size":8.2,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"}}},"hash":"MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","ext":".png","mime":"image/png","size":64.38,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080576/MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"MEAN_Socket_IO_Integration_Tutorial_800x400_a37c8ec078","resource_type":"image"},"created_at":"2021-03-30T05:03:01.871Z","updated_at":"2021-03-30T05:03:01.913Z"},"TextContent":"One of hottest topic in node.js is building realtime web applications. If you come from a C/C++/Java background, you will be amazed how surprisingly easy it is to quickly build out a realtime communication between browser client and server using node.js.Today we will learn to do exactly that, using socket.io on top of the MEAN stack. By the end of this article you will have a functioning realtime communication in a MEAN stack app that notifies all connected clients about a certain event in realtime.Before We Start:We are going to use npm and mean.js. If you’re not already familiar with the MEAN stack or node.js, I suggest you take some time to catch up with this trendy and amazing platform for writing web applications.You can quickly follow this tutorial here and get your environment setup for the following sections.Installing socket.io:Assuming you have already read the suggested article or have the mentioned packages installed on your machine, let’s fire up a terminal window and create a new Mean.js project by running the following command$ mkdir awesome-realtime-app && cd $_\n$ yo meanjs\nThe generator will ask you the following questions(I have included my answers below, feel free to write down yours instead). Make sure that you include the default article module though, we will bind our realtime feature with that module.[?] What would you like to call your application? Awesome Realtime Application\n[?] How would you describe your application? Full-Stack JavaScript with MongoDB, Express, AngularJS, and Node.js\n[?] How would you describe your application in comma seperated key words? MongoDB, Express, AngularJS, Node.js\n[?] What is your company/author name? VEXXHOST\n[?] Would you like to generate the article example CRUD module? Yes\n[?] Which AngularJS modules would you like to include? ngCookies, ngAnimate, ngTouch, ngSanitize\nNow just run $ grunt and you should have the app running on your localhost through port 3000.Let’s include the awesome socket.io module from npm in our app. Run $ npm install socket.io --save, this will install the package and add this in our package.json file.Binding socket.io With Express:To initiate the server side socket connection, we need to integrate it with express.js. Let’s start by opening up the file config/express.js in your favorite code editor and require the http and socket.io modules. I am adding this between line 6 and 7, right after the require of express –var express = require('express'),\n    http = require('http'),\n    socketio = require('socket.io'),\n    .......\nNow, let’s tie it up with the app instance so that we can access it from anywhere in our app by taking advantage of the circular dependency of express.js. Go to the end of the file and add the following code right before the line where it reads return app;–// Attach Socket.io\nvar server = http.createServer(app);\nvar io = socketio.listen(server);\napp.set('socketio', io);\napp.set('server', server);\nWe are simply instantiating socket.io here and attaching our express server with it in the first 2 lines. In the next two, we are storing the socket.io and the server instance in our app container.Easy, right? awesome! Just one more thing, open the server.js file in the root directory and find where it reads app.listen(config.port); and replace it with app.get('server').listen(config.port);. This will make sure we don’t mess up our http server instance of express.That’s all. Now we get to use it in our app. We will do something simple, we will notify all connected clients when a new article is created. To keep our code clean and easily maintainable, we can modularize the socket transmission and abstract it into a factory and there are many other techniques but for now we will just place it in our controller.Open up the article server controller, open up the file app/controllers/articles.server.controller.js and find the create method. This method gets called when a new article is created. After the article is saved and there is no error we can notify everyone about it. So the following block of code goes inside the else block and right before res.jsonp(article); –var socketio = req.app.get('socketio'); // tacke out socket instance from the app container\nsocketio.sockets.emit('article.created', article); // emit an event for all connected clients\nThis first parameter in the emit method is an event name and the second parameter is the data that will get sent along with the event. That’s all our server needs to do.Connecting socket.io With Angular:So far, we have implemented socket.io on the server but that doesn’t mean it already works on the browser. We need to do that separately. We need listen for server emitted events from the browser.We will use the angular component for Socket.io built by btford. We can take advantage of bower for that. Running $ bower install angular-socket-io --save will install it and add it in our bower.json file.Next we will to create an angular factory that will handle our websocket connection on the browser. Create a new file public/modules/core/services/socket.js and place the following code in it –'use strict';\n\n//socket factory that provides the socket service\nangular.module('core').factory('Socket', ['socketFactory',\n    function(socketFactory) {\n        return socketFactory({\n            prefix: '',\n            ioSocket: io.connect('http://localhost:3000')\n        });\n    }\n]);\nWe are making this a part of the core module since we will want to use it across our app. Now we can use this socket connection inside our angular app. We forgot two vital things though, injecting the dependency and include necessary javascript files on our webpage. Open up the file app/views/layout.server.view.html and add the following code before the closing </body> tag –<!-- Socket.io -->\n<script\n    type=\"text/javascript\"\n    src=\"https://vexxhost.com/socket.io/socket.io.js\"></script>\n<script\n    type=\"text/javascript\"\n        src=\"https://vexxhost.com/lib/angular-socket-io/socket.min.js\"></script>\nNext up, dependency injection; Open the file public/config.js and append 'btford.socket-io' at the of the list of dependencies array variable named – var applicationModuleVendorDependencies.That’s it, now we have socket.io integrated with our angular app. But that’s just integration, let’s see if it works. Open up public/modules/articles/controllers/article.client.controller.js and on line 3 and 4 insert the Socket dependency. It should look something like –angular.module('articles').controller('ArticlesController', ['$scope', '$stateParams', '$location', 'Socket', 'Authentication', 'Articles',\n    function($scope, $stateParams, $location, Socket, Authentication, Articles) {\nWe just added the 'Socket' in the list of arrays and Socket in the list of function parameters. Now, place the following code inside the controller –Socket.on('article.created', function(article) {\n    console.log(article);\n});\nWhat’s happening here is, we are listening for the 'article.created' event through the socket and logging the article passed through the event in the console. To remind you, this is the event we emit when an article is created.Checking Out What We Built:Let’s check if everything works as expected. Open up 2 browser windows and navigate to http://localhost:3000. Sign up with 2 user accounts. In one browser open up the console and navigate to the articles page in both. Now go ahead and create a new article in one browser and in the meantime, keep an eye on the console of the other. As soon as the article is created, you should see the article data in the console of the other browser! Magical! right?I am showing my output in the images below –Going Forward:If you are javascript savvy, you can imagine the possibilities here. For example, you can hook onto this event and modify the dom to show notification to other users, increase articles counter on dashboard etc. If not, keep an eye towards our following posts here on VEXXHOST where we will be building amazing real time applications using this exact setup."},{"id":50,"Title":"How to Install and Use Docker on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-and-use-docker-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Docker is an open-source program that enables a Linux application and its dependencies to be packaged as a container such as configuration files, however, unlike a virtual machine, a container doesn’t run a OS, it shares the OS of the host, which in this case will be Ubuntu 14.04.</p><p style=\"margin-left:0px;\">It makes it possible to get more apps running on the same old servers by providing an additional layer of abstraction and automation of operating system level virtualization on Linux. In this article we will explain you about the installation and usage of Docker-managed release packages and its working mechanism.</p><h2 style=\"margin-left:0px;\">Docker Requirements</h2><p style=\"margin-left:0px;\">In order to install Docker on Ubuntu Operating system make sure that its supported only 64-bit installation of your Ubuntu Version as its missing with some of its features on the kernels older than version 3.10.</p><p style=\"margin-left:0px;\">You can check the kernel version of your installed Ubuntu kernel version with following command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# uname -r\n3.13.0-55-generic\n</code></pre><p style=\"margin-left:0px;\">You system should be updated so ensuring the list of available packages is up to date before installing anything new you must upgrade your kernel and install the additional packages from packet manager with following command by opening your terminal.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# apt-get update\n</code></pre><p style=\"margin-left:0px;\">If you are using any olde version of your operating system you can upgrade it with following command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# apt-get -y upgrade\n</code></pre><h2 style=\"margin-left:0px;\">Docker Installation</h2><p style=\"margin-left:0px;\">Once you had fulfilled the requirements to install Docker, then we are ready to go with its installation process. The Docker’s installation was available only for Ubuntu in the past days but now its available for many other distributions like CentOS and other Red Hat distributions. Let’s install Docker by installing the docker-io package now.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# apt-get -y install docker.io\n</code></pre><h3>Creating Links</h3><p style=\"margin-left:0px;\">Now we will create and fix the paths by creating a soft link between docker.io in /usr/local/bin/ to docker that is in the same folder with the following two commands.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# ln -sf /usr/bin/docker.io /usr/local/bin/docker\nroot@ubuntu-14:~# sed -i '$acomplete -F _docker docker' /etc/bash_completion.d/docker.io\n</code></pre><h3>Docker Services Check</h3><p style=\"margin-left:0px;\">To confirm the status of docker’s service, execute the following command to be sure that its service is up.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# service docker.io status\ndocker.io start/running, process 14394\n</code></pre><p style=\"margin-left:0px;\">To start its daemon use the below command to be executed on the terminal and be sure its daemon is not previously in running state, if so then stop its daemon first.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# docker -d &amp;\n</code></pre><h3>Docker Service Auto start</h3><p style=\"margin-left:0px;\">Let’s make the Docker’s services up and running after each boot up, to do so run the following command to add its entry into boot startup script as:</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# update-rc.d docker.io defaults\n</code></pre><h2 style=\"margin-left:0px;\">Docker Usage</h2><p style=\"margin-left:0px;\">Now in the next session we will explain you about its usage that how we get it works for us.<br>To get the list of all the available commands, run the docker in the terminal and you will get a list of its all available commands with its descriptions to use.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# docker\n</code></pre><h3>Docker Container Download</h3><p style=\"margin-left:0px;\">Now we will download the Docker’s image by using its docker command with pull options to Pull an image or a repository from the Docker registry server. Here is its command to use.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# docker pull ubuntu\n</code></pre><p style=\"margin-left:0px;\">Here is its running snapshot that will take a while during the downloading process of its whole packages.</p><h3>Running a Docker Container</h3><p style=\"margin-left:0px;\">Now, let’s see how we can easily setup our Ubuntu container with a bash shell, we will just run the one command as below where the docker runs a command in a new container, -i attaches stdin and stdout while –t assigns a tty.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# docker run -i -t ubuntu /bin/bash\nroot@696d5fd32bba:/#\n</code></pre><p style=\"margin-left:0px;\">So, in the output we can see the standard Ubuntu container that can be used.</p><p style=\"margin-left:0px;\">So, we are now using a bash shell inside of an Ubuntu docker container. If you wish to disconnect, or detach, from the sDocker container’s shell without exiting from it we have to use the with combination of these keys Ctrl-p + Ctrl-q , then you will be back to your previous window.</p><h3>Docker Group</h3><p style=\"margin-left:0px;\">Let’s create the a group with name docker and put your users in this user to avoid using the root user as the docker user has the same privileges like the root. So, we create the new group with following command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# usermod -aG docker ubuntu\n</code></pre><p style=\"margin-left:0px;\">Now exit from your current session and relogin with your docker to check if its working fine.</p><h3>Docker Test</h3><p style=\"margin-left:0px;\">Run the following command to check the output, if its fine or not.</p><pre><code class=\"language-plaintext\">docker@ubuntu-14:/root$ docker run hello-world\n</code></pre><p style=\"margin-left:0px;\">So, the output shown in snapshot shows that docker user is functional and is working fine with both the root as well as docker user.</p><h2 style=\"margin-left:0px;\">Docker Available Containers</h2><p style=\"margin-left:0px;\">The available containers can be found through a search command as there are many community containers already available. Let’s see how we can search for any of the available containers by using the following command where I put centos to search for its docker container.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# docker search centos\n</code></pre><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">After going through this detailed article you are now able to setup and use Docker containers for any of your operating system by checking its availability. So, we hope you have had a pretty good tour through what Docker is and how it works, but still there are many challenges to setup Docker in the Organizations. Feel free to get back to us in case of any difficulty, as we feel pleasure to assist you.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:32:40.019Z","created_at":"2021-03-30T05:32:36.105Z","updated_at":"2021-03-30T05:32:40.716Z","PostSEO":{"id":524,"GoogleSEO":{"id":515,"Title":"How to Install and Use Docker on Ubuntu 14.04 - VEXXHOST","Description":"Docker is an open-source program that enables a Linux application and its dependencies to be packaged as a container such as configuration files, however,"},"FacebookSEO":{"id":511,"Title":"How to Install and Use Docker on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Docker is an open-source program that enables a Linux application and its dependencies to be packaged as a container such as configuration files, however,","SiteName":"VEXXHOST","Image":{"id":668,"name":"docker-ubuntu-64d3feaf-800x377.jpg","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082284/small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"small_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":18.54,"width":500,"height":236,"provider_metadata":{"public_id":"small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082283/medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"medium_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":32.54,"width":750,"height":353,"provider_metadata":{"public_id":"medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082282/thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"thumbnail_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":7.35,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}}},"hash":"docker_ubuntu_64d3feaf_800x377_e1a5c6886c","ext":".jpg","mime":"image/jpeg","size":35.94,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082281/docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"},"created_at":"2021-03-30T05:31:24.688Z","updated_at":"2021-03-30T05:31:24.697Z"}},"TwitterSEO":{"id":511,"Description":"Docker is an open-source program that enables a Linux application and its dependencies to be packaged as a container such as configuration files, however,","Title":"How to Install and Use Docker on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":668,"name":"docker-ubuntu-64d3feaf-800x377.jpg","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082284/small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"small_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":18.54,"width":500,"height":236,"provider_metadata":{"public_id":"small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082283/medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"medium_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":32.54,"width":750,"height":353,"provider_metadata":{"public_id":"medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082282/thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"thumbnail_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":7.35,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}}},"hash":"docker_ubuntu_64d3feaf_800x377_e1a5c6886c","ext":".jpg","mime":"image/jpeg","size":35.94,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082281/docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"},"created_at":"2021-03-30T05:31:24.688Z","updated_at":"2021-03-30T05:31:24.697Z"}}},"LinkToResource":{"id":442,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":668,"name":"docker-ubuntu-64d3feaf-800x377.jpg","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082284/small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"small_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":18.54,"width":500,"height":236,"provider_metadata":{"public_id":"small_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082283/medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"medium_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":32.54,"width":750,"height":353,"provider_metadata":{"public_id":"medium_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082282/thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","hash":"thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","mime":"image/jpeg","name":"thumbnail_docker-ubuntu-64d3feaf-800x377.jpg","path":null,"size":7.35,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"}}},"hash":"docker_ubuntu_64d3feaf_800x377_e1a5c6886c","ext":".jpg","mime":"image/jpeg","size":35.94,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082281/docker_ubuntu_64d3feaf_800x377_e1a5c6886c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"docker_ubuntu_64d3feaf_800x377_e1a5c6886c","resource_type":"image"},"created_at":"2021-03-30T05:31:24.688Z","updated_at":"2021-03-30T05:31:24.697Z"},"TextContent":"Docker is an open-source program that enables a Linux application and its dependencies to be packaged as a container such as configuration files, however, unlike a virtual machine, a container doesn’t run a OS, it shares the OS of the host, which in this case will be Ubuntu 14.04.It makes it possible to get more apps running on the same old servers by providing an additional layer of abstraction and automation of operating system level virtualization on Linux. In this article we will explain you about the installation and usage of Docker-managed release packages and its working mechanism.Docker RequirementsIn order to install Docker on Ubuntu Operating system make sure that its supported only 64-bit installation of your Ubuntu Version as its missing with some of its features on the kernels older than version 3.10.You can check the kernel version of your installed Ubuntu kernel version with following command.root@ubuntu-14:~# uname -r\n3.13.0-55-generic\nYou system should be updated so ensuring the list of available packages is up to date before installing anything new you must upgrade your kernel and install the additional packages from packet manager with following command by opening your terminal.root@ubuntu-14:~# apt-get update\nIf you are using any olde version of your operating system you can upgrade it with following command.root@ubuntu-14:~# apt-get -y upgrade\nDocker InstallationOnce you had fulfilled the requirements to install Docker, then we are ready to go with its installation process. The Docker’s installation was available only for Ubuntu in the past days but now its available for many other distributions like CentOS and other Red Hat distributions. Let’s install Docker by installing the docker-io package now.root@ubuntu-14:~# apt-get -y install docker.io\nCreating LinksNow we will create and fix the paths by creating a soft link between docker.io in /usr/local/bin/ to docker that is in the same folder with the following two commands.root@ubuntu-14:~# ln -sf /usr/bin/docker.io /usr/local/bin/docker\nroot@ubuntu-14:~# sed -i '$acomplete -F _docker docker' /etc/bash_completion.d/docker.io\nDocker Services CheckTo confirm the status of docker’s service, execute the following command to be sure that its service is up.root@ubuntu-14:~# service docker.io status\ndocker.io start/running, process 14394\nTo start its daemon use the below command to be executed on the terminal and be sure its daemon is not previously in running state, if so then stop its daemon first.root@ubuntu-14:~# docker -d &\nDocker Service Auto startLet’s make the Docker’s services up and running after each boot up, to do so run the following command to add its entry into boot startup script as:root@ubuntu-14:~# update-rc.d docker.io defaults\nDocker UsageNow in the next session we will explain you about its usage that how we get it works for us.To get the list of all the available commands, run the docker in the terminal and you will get a list of its all available commands with its descriptions to use.root@ubuntu-14:~# docker\nDocker Container DownloadNow we will download the Docker’s image by using its docker command with pull options to Pull an image or a repository from the Docker registry server. Here is its command to use.root@ubuntu-14:~# docker pull ubuntu\nHere is its running snapshot that will take a while during the downloading process of its whole packages.Running a Docker ContainerNow, let’s see how we can easily setup our Ubuntu container with a bash shell, we will just run the one command as below where the docker runs a command in a new container, -i attaches stdin and stdout while –t assigns a tty.root@ubuntu-14:~# docker run -i -t ubuntu /bin/bash\nroot@696d5fd32bba:/#\nSo, in the output we can see the standard Ubuntu container that can be used.So, we are now using a bash shell inside of an Ubuntu docker container. If you wish to disconnect, or detach, from the sDocker container’s shell without exiting from it we have to use the with combination of these keys Ctrl-p + Ctrl-q , then you will be back to your previous window.Docker GroupLet’s create the a group with name docker and put your users in this user to avoid using the root user as the docker user has the same privileges like the root. So, we create the new group with following command.root@ubuntu-14:~# usermod -aG docker ubuntu\nNow exit from your current session and relogin with your docker to check if its working fine.Docker TestRun the following command to check the output, if its fine or not.docker@ubuntu-14:/root$ docker run hello-world\nSo, the output shown in snapshot shows that docker user is functional and is working fine with both the root as well as docker user.Docker Available ContainersThe available containers can be found through a search command as there are many community containers already available. Let’s see how we can search for any of the available containers by using the following command where I put centos to search for its docker container.root@ubuntu-14:~# docker search centos\nConclusionAfter going through this detailed article you are now able to setup and use Docker containers for any of your operating system by checking its availability. So, we hope you have had a pretty good tour through what Docker is and how it works, but still there are many challenges to setup Docker in the Organizations. Feel free to get back to us in case of any difficulty, as we feel pleasure to assist you."},{"id":43,"Title":"How to Upload Custom Images with OpenStack","Slug":"resources/tutorials/how-to-upload-custom-images-with-openstack","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">The robustness of the OpenStack cloud allows you to run almost any operating system that you need on our platform. The only thing you need to do is make sure that it’s configured to pick up an IP address via DHCP when it first boots and everything will be handled for you automatically. This gives you the freedom to use any operating system you need, from custom Linux appliances to FreeBSD and much more!</p><h2 style=\"margin-left:0px;\">Prerequisites</h2><p style=\"margin-left:0px;\">For this tutorial, you’ll have to make sure that you have properly configured your <a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/\">OpenStack CLI clients</a>. You will be using the CLI tools to create and upload the new image to the service. In addition, you’ll have to make sure that you have an image that is compatible with the cloud which you are using.</p><p style=\"margin-left:0px;\">For information purposes, the supported image types on OpenStack clouds powered by KVM (such as our own public cloud) are qcow2 or raw. If your images are using a different format, you can read more online about the qemu-img tool, as it can help you convert formats easily.</p><h2 style=\"margin-left:0px;\">Image Upload</h2><p style=\"margin-left:0px;\">The actual upload process is quite straightforward and it involves using the glance CLI client, assuming our image file type is qcow2 and the image file name is image.qcow2, you’ll have to run the following command (with all the environment variables configured and set).</p><pre><code class=\"language-plaintext\">$ glance image-create --name \"My Image\" --disk-format qcow2 --container-format bare --file image.qcow2 --progress\n</code></pre><p style=\"margin-left:0px;\">Once you run that command, you’ll see the upload progress and it will let you know when it’s complete with the new ID of the uploaded image. You can now use that ID to provision servers instantly.</p><p style=\"margin-left:0px;\">If you were uploading an image which was of raw format, simply change the --disk-format qcow to --disk-format raw. The command line interface is pretty straightforward and very simple to use.</p><h2 style=\"margin-left:0px;\">Image Customization</h2><p style=\"margin-left:0px;\">OpenStack has a plethora of customization options for your images. You can configure these via image properties which modify the behavior of how your server is provisioned, they allow you to configure different IO controllers and much more.</p><p style=\"margin-left:0px;\">In order to set it, all you need is the ID of the image that you’re trying to alter. If you’re following this tutorial, you should have it from the step before.</p><pre><code class=\"language-plaintext\">$ glance image-update image-uuid --property key=value \n</code></pre><p style=\"margin-left:0px;\">We’ve provided below a table of commonly used OpenStack image properties which should help you get the perfect environment for your image when it boots up. Please note that the values which are in bold are the defaults for that property.</p><figure class=\"table\"><table><thead><tr><th><strong>Property</strong></th><th><strong>Allowed Values</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>hw_disk_bus</td><td><strong>virtio</strong>, scsi, ide, usb</td><td>Type of disk controller to attach disk devices</td></tr><tr><td>nic_model</td><td><strong>virtio</strong>, e1000, rtl8139</td><td>Model of the network interface device</td></tr><tr><td>img_config_drive</td><td><strong>optional</strong>, mandatory</td><td>Specifies whether the image needs a config drive.</td></tr></tbody></table></figure><p style=\"margin-left:0px;\">You can get the whole list of image service property keys from the <a href=\"http://docs.openstack.org/cli-reference/content/chapter_cli-glance-property.html\">OpenStack CLI reference</a>. However, the ones above are the most commonly needed ones.</p><p style=\"margin-left:0px;\">Hopefully, you’ll now be able to provision servers of any operating system or your favorite distribution right away. Even better, you can migrate your servers easily by simply uploading an image and uploading it!</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:08:55.527Z","created_at":"2021-03-30T05:08:52.428Z","updated_at":"2021-03-30T05:08:56.029Z","PostSEO":{"id":517,"GoogleSEO":{"id":508,"Title":"How to Upload Custom Images with OpenStack - VEXXHOST","Description":"The robustness of the OpenStack cloud allows you to run almost any operating system that you need on our platform. The only thing you need to do is make"},"FacebookSEO":{"id":504,"Title":"How to Upload Custom Images with OpenStack - VEXXHOST","Url":null,"Description":"The robustness of the OpenStack cloud allows you to run almost any operating system that you need on our platform. The only thing you need to do is make","SiteName":"VEXXHOST","Image":{"id":633,"name":"How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080883/small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"small_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":172.93,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080882/medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"medium_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":391.15,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080881/thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"thumbnail_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":43.04,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}}},"hash":"How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","ext":".png","mime":"image/png","size":370.54,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080880/How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"},"created_at":"2021-03-30T05:08:04.433Z","updated_at":"2021-03-30T05:08:04.441Z"}},"TwitterSEO":{"id":504,"Description":"The robustness of the OpenStack cloud allows you to run almost any operating system that you need on our platform. The only thing you need to do is make","Title":"How to Upload Custom Images with OpenStack - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":633,"name":"How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080883/small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"small_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":172.93,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080882/medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"medium_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":391.15,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080881/thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"thumbnail_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":43.04,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}}},"hash":"How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","ext":".png","mime":"image/png","size":370.54,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080880/How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"},"created_at":"2021-03-30T05:08:04.433Z","updated_at":"2021-03-30T05:08:04.441Z"}}},"LinkToResource":{"id":435,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":633,"name":"How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080883/small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"small_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":172.93,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080882/medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"medium_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":391.15,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080881/thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","hash":"thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","mime":"image/png","name":"thumbnail_How-to-Upload-Custom-Images-with-OpenStack-800x400 (1).png","path":null,"size":43.04,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"}}},"hash":"How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","ext":".png","mime":"image/png","size":370.54,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080880/How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_Upload_Custom_Images_with_Open_Stack_800x400_1_ca19e985ce","resource_type":"image"},"created_at":"2021-03-30T05:08:04.433Z","updated_at":"2021-03-30T05:08:04.441Z"},"TextContent":"The robustness of the OpenStack cloud allows you to run almost any operating system that you need on our platform. The only thing you need to do is make sure that it’s configured to pick up an IP address via DHCP when it first boots and everything will be handled for you automatically. This gives you the freedom to use any operating system you need, from custom Linux appliances to FreeBSD and much more!PrerequisitesFor this tutorial, you’ll have to make sure that you have properly configured your OpenStack CLI clients. You will be using the CLI tools to create and upload the new image to the service. In addition, you’ll have to make sure that you have an image that is compatible with the cloud which you are using.For information purposes, the supported image types on OpenStack clouds powered by KVM (such as our own public cloud) are qcow2 or raw. If your images are using a different format, you can read more online about the qemu-img tool, as it can help you convert formats easily.Image UploadThe actual upload process is quite straightforward and it involves using the glance CLI client, assuming our image file type is qcow2 and the image file name is image.qcow2, you’ll have to run the following command (with all the environment variables configured and set).$ glance image-create --name \"My Image\" --disk-format qcow2 --container-format bare --file image.qcow2 --progress\nOnce you run that command, you’ll see the upload progress and it will let you know when it’s complete with the new ID of the uploaded image. You can now use that ID to provision servers instantly.If you were uploading an image which was of raw format, simply change the --disk-format qcow to --disk-format raw. The command line interface is pretty straightforward and very simple to use.Image CustomizationOpenStack has a plethora of customization options for your images. You can configure these via image properties which modify the behavior of how your server is provisioned, they allow you to configure different IO controllers and much more.In order to set it, all you need is the ID of the image that you’re trying to alter. If you’re following this tutorial, you should have it from the step before.$ glance image-update image-uuid --property key=value \nWe’ve provided below a table of commonly used OpenStack image properties which should help you get the perfect environment for your image when it boots up. Please note that the values which are in bold are the defaults for that property.PropertyAllowed ValuesDescriptionhw_disk_busvirtio, scsi, ide, usbType of disk controller to attach disk devicesnic_modelvirtio, e1000, rtl8139Model of the network interface deviceimg_config_driveoptional, mandatorySpecifies whether the image needs a config drive.You can get the whole list of image service property keys from the OpenStack CLI reference. However, the ones above are the most commonly needed ones.Hopefully, you’ll now be able to provision servers of any operating system or your favorite distribution right away. Even better, you can migrate your servers easily by simply uploading an image and uploading it!"},{"id":51,"Title":"How to deploy a MariaDB Galera cluster on Ubuntu 14.04","Slug":"resources/tutorials/how-to-deploy-a-mariadb-galera-cluster-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Today we will show you about the deployment of MariaDB Galera Cluster on Ubuntu 14.04. MariaDB is an enhanced, drop-in replacement for MySQL while MariaDB Galera Cluster is a synchronous multi-master cluster for MariaDB. MariaDB Galera uses the Galera library for the replication implementation.</p><p style=\"margin-left:0px;\">Its available only for Linux operating systems that only supports the XtraDB/InnoDB storage engines with its major features in Synchronous replication, automatic node joining, direct client connections and to read and write to any cluster node.</p><p style=\"margin-left:0px;\">So the benefits with MariaDB Galera Cluster yields to many DBMS clustering solutions that includes clusters with no slave lag, no lost transactions and smaller client latencies. Let’s see how we are going to setup this on Ubuntu operating system by using three Ubuntu nodes.</p><h2 style=\"margin-left:0px;\">Pre-Setup</h2><p style=\"margin-left:0px;\">We need at least 3 hosts running together with Ubuntu 14.04 Operating system to form a reliable cluster. The following is the hosts list that we had setup for this article, where we will deploy the MariaDB Galera cluster:</p><pre><code class=\"language-plaintext\">ubuntu-node1 172.25.10.21\nubuntu-node2 172.25.10.22\nubuntu-node3 172.25.10.23\n</code></pre><p style=\"margin-left:0px;\">Now we will&nbsp;install the its required packages rsync, galera and mariadb-galera-server that need to be installed on all the three nodes.</p><h3>Adding Repositories and Packages</h3><p style=\"margin-left:0px;\">Now we will start by adding the repository for Ubuntu so, first add the key files for the MariaDB repository to build the trust between the maintainers of repositories and that we can install the required packages.</p><h4>Installing the GPG key</h4><p style=\"margin-left:0px;\">Run the following command of all the three hosts to install its GPG key as follow.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# apt-get install python-software-properties\nroot@ubuntu-node2:~# apt-get install python-software-properties\nroot@ubuntu-node3:~# apt-get install python-software-properties\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082407/N1_P_Dr53_ef813ee221.png\"></figure><h4>Adding APT Repository</h4><p style=\"margin-left:0px;\">Now to add its APT repository have to execute the below commands.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\nroot@ubuntu-node2:~# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\nroot@ubuntu-node3:~# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082423/rw_I5_Y6_T_4368ffb9a0.png\"></figure><h4>Adding Ubuntu Repository</h4><p style=\"margin-left:0px;\">Now can add the Ubuntu repository as per required whether to use its repository as we have the trusted key in the database, let’s add the actual repository using following command on all the nodes.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.6/ubuntu trusty main'\nroot@ubuntu-node2:~# add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.6/ubuntu trusty main'\nroot@ubuntu-node3:~# add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.6/ubuntu trusty main'\n</code></pre><h3>Update OS with Latest Repo</h3><p style=\"margin-left:0px;\">To get the latest repositories run the update command on the three nodes we are working on.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# apt-get update\nroot@ubuntu-node2:~# apt-get update\nroot@ubuntu-node3:~# apt-get update\n</code></pre><h2 style=\"margin-left:0px;\">Installing MariaDB Cluster, Galera and Rsync</h2><p style=\"margin-left:0px;\">Let’s install the MariaDB and its related packages on each of the node with following command as:</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# apt-get install -y galera  mariadb-galera-server-5.5 mariadb-client-5.5 libmariadbclient18 mariadb-client-core-5.5 rsync netcat-openbsd\nroot@ubuntu-node2:~# apt-get install -y galera  mariadb-galera-server-5.5 mariadb-client-5.5 libmariadbclient18 mariadb-client-core-5.5 rsync netcat-openbsd\nroot@ubuntu-node3:~# apt-get install -y galera  mariadb-galera-server-5.5 mariadb-client-5.5 libmariadbclient18 mariadb-client-core-5.5 rsync netcat-openbsd\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082440/R1k1_Tvc_b3bff3d5d5.png\"></figure><p style=\"margin-left:0px;\">During the installation process you will be asked to configure the root password for the MariaDB, so make sure that you configured the same root password on all the three nodes.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082459/YHDJU_Ol_a2a1c16095.png\"></figure><p style=\"margin-left:0px;\">Once the installations of these packages are done, you will get a MariaDB server on each one of your three nodes but they aren’t yet configured.</p><h2 style=\"margin-left:0px;\">Configuring MariaDB Cluster</h2><p style=\"margin-left:0px;\">Let’s proceed with the configurations changes for the MariaDB Galera Cluster setup.</p><h3>MySQL Settings</h3><p style=\"margin-left:0px;\">First of all open the my.cnf file and comment the following lines on all the three nodes.</p><pre><code class=\"language-plaintext\">root@ubuntu-nodeX:~# vim /etc/mysql/my.cnf\n#bind-address           = 127.0.0.1\n#default_storage_engine = InnoDB\n#query_cache_limit              = 128K\n#query_cache_size               = 64M\n</code></pre><h3>MariaDB Settings</h3><p style=\"margin-left:0px;\">Now add following lines for wsrep configuration options in my.cnf file under [mysqld] directive as shown below.</p><pre><code class=\"language-plaintext\">root@ubuntu-nodeX:~# vim /etc/mysql/my.cnf\n[mysqld]\nbinlog_format=ROW\ndefault_storage_engine=innodb\ninnodb_autoinc_lock_mode=2\ninnodb_locks_unsafe_for_binlog=1\ninnodb_doublewrite=1\n</code></pre><h3>VSRep Providers Configurations</h3><p style=\"margin-left:0px;\">Here we will configure the vsrep configurations on each node under the [mysqld] directory by adding the following lines in /etc/mysql/my.cnf file on each node with their specific hostnames, root password and IP address.</p><h4>Configurations for ubuntu-node1</h4><pre><code class=\"language-plaintext\">[mysqld]\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\nwsrep_provider_options=\"gcache.size=256M; gcache.page_size=128M\"\nwsrep_cluster_address=gcomm://ubuntu-node1\nwsrep_cluster_name=\"MariaDB_Cluster\"\nwsrep_node_address=\"ubuntu-node1\"\nwsrep_node_name=\"ubuntu-node1\"\nwsrep_sst_auth=\"root:root123\"\nwsrep_node_incoming_address=172.25.10.21\nwsrep_sst_receive_address=172.25.10.21\nwsrep_slave_threads=16\n</code></pre><h4>Configurations For ubuntu-node2</h4><pre><code class=\"language-plaintext\">[mysqld]\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\nwsrep_provider_options=\"gcache.size=256M; gcache.page_size=128M\"\nwsrep_cluster_address=gcomm://ubuntu-node1\nwsrep_cluster_name=\"MariaDB_Cluster\"\nwsrep_node_address=\"ubuntu-node2\"\nwsrep_node_name=\"ubuntu-node2\"\nwsrep_sst_auth=\"root:root123\"\nwsrep_node_incoming_address=172.25.10.22\nwsrep_sst_receive_address=172.25.10.22\nwsrep_slave_threads=16\n</code></pre><h4>Configurations For ubuntu-node3</h4><pre><code class=\"language-plaintext\">[mysqld]\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\nwsrep_provider_options=\"gcache.size=256M; gcache.page_size=128M\"\nwsrep_cluster_address=gcomm://ubuntu-node1\nwsrep_cluster_name=\"MariaDB_Cluster\"\nwsrep_node_address=\"ubuntu-node3\"\nwsrep_node_name=\"ubuntu-node3\"\nwsrep_sst_auth=\"root:root123\"\nwsrep_node_incoming_address=172.25.10.23\nwsrep_sst_receive_address=172.25.10.23\nwsrep_slave_threads=16\n</code></pre><h3>Restart MySQL Services</h3><p style=\"margin-left:0px;\">After configuring the mysql and wsrep parameters we need to restart its service on all the node.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# service mysql restart\nroot@ubuntu-node2:~# service mysql restart\nroot@ubuntu-node3:~# service mysql restart\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082476/vt_FVR_1i_d98702ace0.png\"></figure><h2 style=\"margin-left:0px;\">Testing MariaDB Galera Cluster</h2><p style=\"margin-left:0px;\">To confirm the status of MariaDB cluster VSRep, let’s login to the MariaDB console and execute the following command to check the output of give command.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# mysql -u root –p\nMariaDB [(none)]&gt; show status like 'wsrep_%';\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082494/A7nvi6q_0394ac7d3c.png\"></figure><p style=\"margin-left:0px;\">You can also confirm the status of your running cluster and its replication by running the below command on each of your node. You will see the cluster size in response to the output of that command.</p><pre><code class=\"language-plaintext\">root@ubuntu-node1:~# mysql -u root -p -e 'SELECT VARIABLE_VALUE as \"cluster size\" FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME=\"wsrep_cluster_size\"'\nroot@ubuntu-node2:~# mysql -u root -p -e 'SELECT VARIABLE_VALUE as \"cluster size\" FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME=\"wsrep_cluster_size\"'\nroot@ubuntu-node3:~# mysql -u root -p -e 'SELECT VARIABLE_VALUE as \"cluster size\" FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME=\"wsrep_cluster_size\"'\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082515/Az_Id9_LY_1849215eaf.png\"></figure><p style=\"margin-left:0px;\">Congratulations, the output on each of the node shows that you have successfully configured a MariaDB cluster with Galera.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">In this detailed article we learned about the setup of MariaDB Galera Clustering using Ubuntu with three nodes with its step by step configurations on each node. So, keep in mind about the required changes while you are preparing your own MariaDB Galera clustering environment.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:36:05.432Z","created_at":"2021-03-30T05:36:03.051Z","updated_at":"2021-03-30T05:36:05.825Z","PostSEO":{"id":525,"GoogleSEO":{"id":516,"Title":"How to deploy a MariaDB Galera cluster on Ubuntu 14.04 - VEXXHOST","Description":"Today we will show you about the deployment of MariaDB Galera Cluster on Ubuntu 14.04. MariaDB is an enhanced, drop-in replacement for MySQL while MariaDB"},"FacebookSEO":{"id":512,"Title":"How to deploy a MariaDB Galera cluster on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Today we will show you about the deployment of MariaDB Galera Cluster on Ubuntu 14.04. MariaDB is an enhanced, drop-in replacement for MySQL while MariaDB","SiteName":"VEXXHOST","Image":{"id":670,"name":"mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082377/small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"small_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":14.65,"width":500,"height":236,"provider_metadata":{"public_id":"small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082376/medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"medium_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":27.44,"width":750,"height":353,"provider_metadata":{"public_id":"medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082376/thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"thumbnail_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":5.59,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}}},"hash":"mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","ext":".jpg","mime":"image/jpeg","size":30.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082375/mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"},"created_at":"2021-03-30T05:32:57.516Z","updated_at":"2021-03-30T05:32:57.526Z"}},"TwitterSEO":{"id":512,"Description":"Today we will show you about the deployment of MariaDB Galera Cluster on Ubuntu 14.04. MariaDB is an enhanced, drop-in replacement for MySQL while MariaDB","Title":"How to deploy a MariaDB Galera cluster on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":670,"name":"mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082377/small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"small_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":14.65,"width":500,"height":236,"provider_metadata":{"public_id":"small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082376/medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"medium_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":27.44,"width":750,"height":353,"provider_metadata":{"public_id":"medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082376/thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"thumbnail_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":5.59,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}}},"hash":"mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","ext":".jpg","mime":"image/jpeg","size":30.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082375/mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"},"created_at":"2021-03-30T05:32:57.516Z","updated_at":"2021-03-30T05:32:57.526Z"}}},"LinkToResource":{"id":443,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":670,"name":"mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082377/small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"small_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":14.65,"width":500,"height":236,"provider_metadata":{"public_id":"small_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082376/medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"medium_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":27.44,"width":750,"height":353,"provider_metadata":{"public_id":"medium_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082376/thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","hash":"thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","mime":"image/jpeg","name":"thumbnail_mariadb-galera-ubuntu-1404-6e3b7f36-800x377.jpg","path":null,"size":5.59,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"}}},"hash":"mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","ext":".jpg","mime":"image/jpeg","size":30.07,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082375/mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"mariadb_galera_ubuntu_1404_6e3b7f36_800x377_0f17b60cfc","resource_type":"image"},"created_at":"2021-03-30T05:32:57.516Z","updated_at":"2021-03-30T05:32:57.526Z"},"TextContent":"Today we will show you about the deployment of MariaDB Galera Cluster on Ubuntu 14.04. MariaDB is an enhanced, drop-in replacement for MySQL while MariaDB Galera Cluster is a synchronous multi-master cluster for MariaDB. MariaDB Galera uses the Galera library for the replication implementation.Its available only for Linux operating systems that only supports the XtraDB/InnoDB storage engines with its major features in Synchronous replication, automatic node joining, direct client connections and to read and write to any cluster node.So the benefits with MariaDB Galera Cluster yields to many DBMS clustering solutions that includes clusters with no slave lag, no lost transactions and smaller client latencies. Let’s see how we are going to setup this on Ubuntu operating system by using three Ubuntu nodes.Pre-SetupWe need at least 3 hosts running together with Ubuntu 14.04 Operating system to form a reliable cluster. The following is the hosts list that we had setup for this article, where we will deploy the MariaDB Galera cluster:ubuntu-node1 172.25.10.21\nubuntu-node2 172.25.10.22\nubuntu-node3 172.25.10.23\nNow we will install the its required packages rsync, galera and mariadb-galera-server that need to be installed on all the three nodes.Adding Repositories and PackagesNow we will start by adding the repository for Ubuntu so, first add the key files for the MariaDB repository to build the trust between the maintainers of repositories and that we can install the required packages.Installing the GPG keyRun the following command of all the three hosts to install its GPG key as follow.root@ubuntu-node1:~# apt-get install python-software-properties\nroot@ubuntu-node2:~# apt-get install python-software-properties\nroot@ubuntu-node3:~# apt-get install python-software-properties\nAdding APT RepositoryNow to add its APT repository have to execute the below commands.root@ubuntu-node1:~# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\nroot@ubuntu-node2:~# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\nroot@ubuntu-node3:~# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db\nAdding Ubuntu RepositoryNow can add the Ubuntu repository as per required whether to use its repository as we have the trusted key in the database, let’s add the actual repository using following command on all the nodes.root@ubuntu-node1:~# add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.6/ubuntu trusty main'\nroot@ubuntu-node2:~# add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.6/ubuntu trusty main'\nroot@ubuntu-node3:~# add-apt-repository 'deb http://mirror.jmu.edu/pub/mariadb/repo/5.6/ubuntu trusty main'\nUpdate OS with Latest RepoTo get the latest repositories run the update command on the three nodes we are working on.root@ubuntu-node1:~# apt-get update\nroot@ubuntu-node2:~# apt-get update\nroot@ubuntu-node3:~# apt-get update\nInstalling MariaDB Cluster, Galera and RsyncLet’s install the MariaDB and its related packages on each of the node with following command as:root@ubuntu-node1:~# apt-get install -y galera  mariadb-galera-server-5.5 mariadb-client-5.5 libmariadbclient18 mariadb-client-core-5.5 rsync netcat-openbsd\nroot@ubuntu-node2:~# apt-get install -y galera  mariadb-galera-server-5.5 mariadb-client-5.5 libmariadbclient18 mariadb-client-core-5.5 rsync netcat-openbsd\nroot@ubuntu-node3:~# apt-get install -y galera  mariadb-galera-server-5.5 mariadb-client-5.5 libmariadbclient18 mariadb-client-core-5.5 rsync netcat-openbsd\nDuring the installation process you will be asked to configure the root password for the MariaDB, so make sure that you configured the same root password on all the three nodes.Once the installations of these packages are done, you will get a MariaDB server on each one of your three nodes but they aren’t yet configured.Configuring MariaDB ClusterLet’s proceed with the configurations changes for the MariaDB Galera Cluster setup.MySQL SettingsFirst of all open the my.cnf file and comment the following lines on all the three nodes.root@ubuntu-nodeX:~# vim /etc/mysql/my.cnf\n#bind-address           = 127.0.0.1\n#default_storage_engine = InnoDB\n#query_cache_limit              = 128K\n#query_cache_size               = 64M\nMariaDB SettingsNow add following lines for wsrep configuration options in my.cnf file under [mysqld] directive as shown below.root@ubuntu-nodeX:~# vim /etc/mysql/my.cnf\n[mysqld]\nbinlog_format=ROW\ndefault_storage_engine=innodb\ninnodb_autoinc_lock_mode=2\ninnodb_locks_unsafe_for_binlog=1\ninnodb_doublewrite=1\nVSRep Providers ConfigurationsHere we will configure the vsrep configurations on each node under the [mysqld] directory by adding the following lines in /etc/mysql/my.cnf file on each node with their specific hostnames, root password and IP address.Configurations for ubuntu-node1[mysqld]\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\nwsrep_provider_options=\"gcache.size=256M; gcache.page_size=128M\"\nwsrep_cluster_address=gcomm://ubuntu-node1\nwsrep_cluster_name=\"MariaDB_Cluster\"\nwsrep_node_address=\"ubuntu-node1\"\nwsrep_node_name=\"ubuntu-node1\"\nwsrep_sst_auth=\"root:root123\"\nwsrep_node_incoming_address=172.25.10.21\nwsrep_sst_receive_address=172.25.10.21\nwsrep_slave_threads=16\nConfigurations For ubuntu-node2[mysqld]\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\nwsrep_provider_options=\"gcache.size=256M; gcache.page_size=128M\"\nwsrep_cluster_address=gcomm://ubuntu-node1\nwsrep_cluster_name=\"MariaDB_Cluster\"\nwsrep_node_address=\"ubuntu-node2\"\nwsrep_node_name=\"ubuntu-node2\"\nwsrep_sst_auth=\"root:root123\"\nwsrep_node_incoming_address=172.25.10.22\nwsrep_sst_receive_address=172.25.10.22\nwsrep_slave_threads=16\nConfigurations For ubuntu-node3[mysqld]\nwsrep_provider=/usr/lib/galera/libgalera_smm.so\nwsrep_provider_options=\"gcache.size=256M; gcache.page_size=128M\"\nwsrep_cluster_address=gcomm://ubuntu-node1\nwsrep_cluster_name=\"MariaDB_Cluster\"\nwsrep_node_address=\"ubuntu-node3\"\nwsrep_node_name=\"ubuntu-node3\"\nwsrep_sst_auth=\"root:root123\"\nwsrep_node_incoming_address=172.25.10.23\nwsrep_sst_receive_address=172.25.10.23\nwsrep_slave_threads=16\nRestart MySQL ServicesAfter configuring the mysql and wsrep parameters we need to restart its service on all the node.root@ubuntu-node1:~# service mysql restart\nroot@ubuntu-node2:~# service mysql restart\nroot@ubuntu-node3:~# service mysql restart\nTesting MariaDB Galera ClusterTo confirm the status of MariaDB cluster VSRep, let’s login to the MariaDB console and execute the following command to check the output of give command.root@ubuntu-node1:~# mysql -u root –p\nMariaDB [(none)]> show status like 'wsrep_%';\nYou can also confirm the status of your running cluster and its replication by running the below command on each of your node. You will see the cluster size in response to the output of that command.root@ubuntu-node1:~# mysql -u root -p -e 'SELECT VARIABLE_VALUE as \"cluster size\" FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME=\"wsrep_cluster_size\"'\nroot@ubuntu-node2:~# mysql -u root -p -e 'SELECT VARIABLE_VALUE as \"cluster size\" FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME=\"wsrep_cluster_size\"'\nroot@ubuntu-node3:~# mysql -u root -p -e 'SELECT VARIABLE_VALUE as \"cluster size\" FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME=\"wsrep_cluster_size\"'\nCongratulations, the output on each of the node shows that you have successfully configured a MariaDB cluster with Galera.ConclusionIn this detailed article we learned about the setup of MariaDB Galera Clustering using Ubuntu with three nodes with its step by step configurations on each node. So, keep in mind about the required changes while you are preparing your own MariaDB Galera clustering environment."},{"id":44,"Title":"WordPress App on Ubuntu 14.04 LTS","Slug":"resources/tutorials/wordpress-app-on-ubuntu-14-04-lts","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<h1>WordPress App on Ubuntu 14.04 LTS</h1><p style=\"margin-left:0px;\">We have built a ready-to-go application image which offers you the latest WordPress release running on an optimized Apache, PHP and MySQL stack. You don’t need any knowledge in managing your server, all you need to do is simply create it on your cloud account.</p><h2 style=\"margin-left:0px;\">Deployment</h2><p style=\"margin-left:0px;\">You can create your WordPress server easily using our CloudConsole control panel, OpenStack CLI tools or API access. We are going to cover on how to do it using both our control panel and OpenStack CLI tools for developers.</p><p style=\"margin-left:0px;\">&nbsp;</p><ul><li><a href=\"https://vexxhost.com/resources/tutorials/wordpress-app-on-ubuntu-14-04-lts/#cloudconsole\">CloudConsole</a></li><li><a href=\"https://vexxhost.com/resources/tutorials/wordpress-app-on-ubuntu-14-04-lts/#cli\">OpenStack CLI</a></li></ul><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">You will need to be logged into your customer center in order to proceed with this. Once you are logged in, click on “Servers” from the sidebar and then click on the “Launch Server” button. You should arrive to a screen similar to the one below:</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617080983/H_Yqg8_Ru_3dbb421342.png\"></figure><p style=\"margin-left:0px;\">From that page, enter the name of your server. If your domain name is myblog.com, it is best to go with something like server.myblog.com. This does not necessarily have to be the same as the domain name of the blog you’ll be hosting.</p><p style=\"margin-left:0px;\">Once you have done that, click on the pencil icon next to “Server Image” to show the list of all images available. Click on the “Apps” tab and then select WordPress from the list. Your server information and image section should look something like the one below:</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081003/Tsc_S6_Ym_86713d0b0b.png\"></figure><p style=\"margin-left:0px;\">The next step is to select the specifications of the server that you need to launch. It is usually recommended to go with a nb.1G server at least, as running a MySQL database on a server with 512MB of memory only tends to cause problems.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081199/JC_Bca_SF_4c1cf58e3f.png\"></figure><p style=\"margin-left:0px;\">You can leave the rest of the options at the defaults if you are not familiar with them, or you can configure them to your exact needs. Once you are done, click on “Create Server” and your WordPress will be created.</p><p style=\"margin-left:0px;\">You will need to make sure that your CLI tools are properly configured and installed. You can check our tutorial on <a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-openstack-cli-tools/\">how to setup the OpenStack CLI tools</a> if you need help with that. Once then, you can setup the new WordPress server easily.</p><p>$ nova boot --poll --image WordPress --flavor nb.1G server.wordpress.com</p><p style=\"margin-left:0px;\">You will have to replace a couple of values in the command above. Primarily, you will have to select one of the available flavors, you can get the entire listing by running `nova flavor-list`. You can replace `server.wordpress.com` by the name of your server as well.</p><p style=\"margin-left:0px;\">You can provide an SSH keypair by using the `–key-name` option to use passwordless SSH access. <strong>If you don’t provide a key, please note of the `adminPass` value from the result of the command above as this will be your `root` password and it will never be displayed again.</strong></p><p style=\"margin-left:0px;\">You may need to wait for a few seconds as your server completes the provisioning process, which includes installing the latest release of WordPress and configuring your database. Once your server state is ACTIVE, you can now move onto the next step.</p><h2 style=\"margin-left:0px;\">Installation</h2><p style=\"margin-left:0px;\">Once the server is deployed, you will have to setup your DNS to point your domain name to your new server. If you need help with that, you can search our resources for more information on how to use our Cloud DNS service. You’ll have to navigate to the domain name which you pointed in your browser, so if you are using myblog.com, then open myblog.com in your browser.</p><p style=\"margin-left:0px;\">If you do not have the domain name pointing yet, you can still complete the setup by accessing your server’s IP address directly, which you can find in your “Overview” tab under “Network Details”. You will need to navigate to that IP address in your browser by entering it in your address field.</p><p style=\"margin-left:0px;\">You will first be greeted with a simple form asking you which language you would like to use to complete your installation, select the language of your choice.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081217/N3_Q_Hsi_P_9212891f72.png\"></figure><p style=\"margin-left:0px;\">Once you have made that choice, you’ll have to fill out some basic information about your blog to complete the installation, the form should be pretty straightforward.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081239/Z_Ls_Sg_VY_beca5f12ca.png\"></figure><p style=\"margin-left:0px;\">Once that is done, your WordPress installation will be fully setup and ready to go. You can continue to login with the new account which you’ve just created.</p><h2 style=\"margin-left:0px;\">IP Installation Notes</h2><p style=\"margin-left:0px;\">WordPress takes the hostname used when installing and configures that as the website URL. If you have installed WordPress by directly accessing the IP address of the server, it is likely considered that your website IP is your actual URL.</p><p style=\"margin-left:0px;\">Once you point your domain name to your server properly, you will be able to fix this by logging into your WordPress administration portal and going to <i>Settings</i> and then <i>General</i>. From there, update the <i>WordPress Address</i> and <i>Site Address</i> to your domain name, such as http://myblog.com.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:14:55.132Z","created_at":"2021-03-30T05:11:51.564Z","updated_at":"2021-03-30T05:14:55.423Z","PostSEO":{"id":518,"GoogleSEO":{"id":509,"Title":"WordPress App on Ubuntu 14.04 LTS - VEXXHOST","Description":"We have built a ready-to-go application image which offers you the latest WordPress release running on an optimized Apache, PHP and MySQL stack. You don’t"},"FacebookSEO":{"id":505,"Title":"WordPress App on Ubuntu 14.04 LTS - VEXXHOST","Url":null,"Description":"We have built a ready-to-go application image which offers you the latest WordPress release running on an optimized Apache, PHP and MySQL stack. You don’t","SiteName":"VEXXHOST","Image":{"id":634,"name":"WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080955/small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"small_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":119.19,"width":500,"height":250,"provider_metadata":{"public_id":"small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080954/medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"medium_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":266.84,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080952/thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"thumbnail_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":32.35,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}}},"hash":"Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","ext":".png","mime":"image/png","size":224.73,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080951/Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"},"created_at":"2021-03-30T05:09:15.801Z","updated_at":"2021-03-30T05:09:15.811Z"}},"TwitterSEO":{"id":505,"Description":"We have built a ready-to-go application image which offers you the latest WordPress release running on an optimized Apache, PHP and MySQL stack. You don’t","Title":"WordPress App on Ubuntu 14.04 LTS - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":634,"name":"WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080955/small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"small_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":119.19,"width":500,"height":250,"provider_metadata":{"public_id":"small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080954/medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"medium_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":266.84,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080952/thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"thumbnail_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":32.35,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}}},"hash":"Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","ext":".png","mime":"image/png","size":224.73,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080951/Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"},"created_at":"2021-03-30T05:09:15.801Z","updated_at":"2021-03-30T05:09:15.811Z"}}},"LinkToResource":{"id":436,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":634,"name":"WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080955/small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"small_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":119.19,"width":500,"height":250,"provider_metadata":{"public_id":"small_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080954/medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"medium_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":266.84,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080952/thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","hash":"thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","mime":"image/png","name":"thumbnail_WordPress-App-on-Ubuntu-14.04-LTS-800x400.png","path":null,"size":32.35,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"}}},"hash":"Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","ext":".png","mime":"image/png","size":224.73,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617080951/Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_App_on_Ubuntu_14_04_LTS_800x400_49ab2d8848","resource_type":"image"},"created_at":"2021-03-30T05:09:15.801Z","updated_at":"2021-03-30T05:09:15.811Z"},"TextContent":"WordPress App on Ubuntu 14.04 LTSWe have built a ready-to-go application image which offers you the latest WordPress release running on an optimized Apache, PHP and MySQL stack. You don’t need any knowledge in managing your server, all you need to do is simply create it on your cloud account.DeploymentYou can create your WordPress server easily using our CloudConsole control panel, OpenStack CLI tools or API access. We are going to cover on how to do it using both our control panel and OpenStack CLI tools for developers. CloudConsoleOpenStack CLI You will need to be logged into your customer center in order to proceed with this. Once you are logged in, click on “Servers” from the sidebar and then click on the “Launch Server” button. You should arrive to a screen similar to the one below:From that page, enter the name of your server. If your domain name is myblog.com, it is best to go with something like server.myblog.com. This does not necessarily have to be the same as the domain name of the blog you’ll be hosting.Once you have done that, click on the pencil icon next to “Server Image” to show the list of all images available. Click on the “Apps” tab and then select WordPress from the list. Your server information and image section should look something like the one below:The next step is to select the specifications of the server that you need to launch. It is usually recommended to go with a nb.1G server at least, as running a MySQL database on a server with 512MB of memory only tends to cause problems.You can leave the rest of the options at the defaults if you are not familiar with them, or you can configure them to your exact needs. Once you are done, click on “Create Server” and your WordPress will be created.You will need to make sure that your CLI tools are properly configured and installed. You can check our tutorial on how to setup the OpenStack CLI tools if you need help with that. Once then, you can setup the new WordPress server easily.$ nova boot --poll --image WordPress --flavor nb.1G server.wordpress.comYou will have to replace a couple of values in the command above. Primarily, you will have to select one of the available flavors, you can get the entire listing by running `nova flavor-list`. You can replace `server.wordpress.com` by the name of your server as well.You can provide an SSH keypair by using the `–key-name` option to use passwordless SSH access. If you don’t provide a key, please note of the `adminPass` value from the result of the command above as this will be your `root` password and it will never be displayed again.You may need to wait for a few seconds as your server completes the provisioning process, which includes installing the latest release of WordPress and configuring your database. Once your server state is ACTIVE, you can now move onto the next step.InstallationOnce the server is deployed, you will have to setup your DNS to point your domain name to your new server. If you need help with that, you can search our resources for more information on how to use our Cloud DNS service. You’ll have to navigate to the domain name which you pointed in your browser, so if you are using myblog.com, then open myblog.com in your browser.If you do not have the domain name pointing yet, you can still complete the setup by accessing your server’s IP address directly, which you can find in your “Overview” tab under “Network Details”. You will need to navigate to that IP address in your browser by entering it in your address field.You will first be greeted with a simple form asking you which language you would like to use to complete your installation, select the language of your choice.Once you have made that choice, you’ll have to fill out some basic information about your blog to complete the installation, the form should be pretty straightforward.Once that is done, your WordPress installation will be fully setup and ready to go. You can continue to login with the new account which you’ve just created.IP Installation NotesWordPress takes the hostname used when installing and configures that as the website URL. If you have installed WordPress by directly accessing the IP address of the server, it is likely considered that your website IP is your actual URL.Once you point your domain name to your server properly, you will be able to fix this by logging into your WordPress administration portal and going to Settings and then General. From there, update the WordPress Address and Site Address to your domain name, such as http://myblog.com."},{"id":56,"Title":"How to Deploy a Symphony Application to Production on Ubuntu 14.04","Slug":"resources/tutorials/how-to-deploy-a-symfony-application-to-production-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Symfony is a PHP full-stack web framework and an open source community-driven project built on top of the Symfony Components to create websites and web applications. It is written with speed and flexibility in mind that will allow developers to build better and easily maintain their websites with PHP. Symfony can be used to develop all kind of websites, from your personal blog to high traffic websites like Yahoo!Answers or Dailymotion.</p><p style=\"margin-left:0px;\">Symfony can run on Windows, Linux or Mac; it can use Apache or Nginx and MySQL, or few other database engine at the backend. This article is about deployment of Symfony on Ubuntu 14.04 using LEMP or LAMP stack (Linux Apache MySQL PHP). We will be using MySQL and Apache Web server in this guide.</p><h2 style=\"margin-left:0px;\">Basic Requirements</h2><p style=\"margin-left:0px;\">In order to deploy Symfony on Ubuntu 14.04, we need a non root sudo user to login and perform all system level tasks on Ubuntu 14.04 instance. Let’s connect to your server using ssh or open its CLI to perform basic OS settings.</p><h2 style=\"margin-left:0px;\">Host Name Setup</h2><p style=\"margin-left:0px;\">To configure your system localhost entry, run the command as shown below.</p><p>$ sudo hostnamectl set-hostname ubuntu $ sudo vim /etc/hosts 16.25.54.79 ubuntu ubuntu.vexxhost.com&nbsp;</p><h2 style=\"margin-left:0px;\">System Update</h2><p style=\"margin-left:0px;\">After setting up the network and hostname on your server, run the command below to update your Operating System with the latest update and security patches.</p><p>$ sudo apt-get update&nbsp;</p><h2 style=\"margin-left:0px;\">Installing Packages</h2><p style=\"margin-left:0px;\">We need to install some basic packages that are necessary for the installation of Symfony. Run the following command to install those dependent packages on your Ubuntu 14 server as shown.</p><p>$ sudo apt-get install php5 php5-cli php5-curl php5-xdebug php5-intl git acl&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083866/1_3_72af3b2ac8.png\"></figure><p style=\"margin-left:0px;\">Press ‘Y’ key to continue. You will see that the mentioned packages are being installed including ‘acl’ to configure the right directory permissions while installing the application and some other PHP extensions . You can search for your required PHP extension by executing the below command and you will see a list of all its available package and their description.</p><p>$ sudo apt-cache search php5&nbsp;</p><h2 style=\"margin-left:0px;\">Installing Composer</h2><p style=\"margin-left:0px;\">Composer is a dependency manager for PHP that controls our library versions and their sources. We need this to download all dependencies required for Symfony. To install composer, we will be using the following ‘curl’ command to get it from the composer download page.</p><p>$ curl -sS https://getcomposer.org/installer | php&nbsp;</p><p style=\"margin-left:0px;\">The composer package will be installed in your home directory and now we need to move it to the ‘/usr/local/bin’ directory using the following command.</p><p>$ sudo mv composer.phar /usr/local/bin/composer&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083882/2_2_30057f1427.png\"></figure><h2 style=\"margin-left:0px;\">LAMP Setup</h2><p style=\"margin-left:0px;\">After performing the basic OS operations, installing the required PHP extension and composer download, &nbsp;we are going to setup LAMP stack by using the MySQL and Apache Web Server. To do that, let’s follow the below instruction.</p><h2 style=\"margin-left:0px;\">MySQL Database</h2><p style=\"margin-left:0px;\">To install MySQL database on your Ubuntu 14.04 server run the following command as shown below.</p><p>$ sudo apt-get install mysql-server&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083899/3_2_7d94ff2dea.png\"></figure><p style=\"margin-left:0px;\"><br>After configuring the root password, check the status of ‘mysql’ service then start running it using the below command.</p><p>$ sudo service mysql status $ sudo service mysql start&nbsp;</p><p style=\"margin-left:0px;\">Now, connect to mysql database console using the root credentials that you configured earlier and create a new database and a user with special privileges assigned to it by running the below commands.</p><p>$ mysql -u root -p mysql&gt; create database symfony character set utf8; mysql&gt; CREATE USER 'symfony-user'@'localhost' IDENTIFIED BY 'symfony***'; mysql&gt; GRANT ALL PRIVILEGES ON symfony.* TO 'symfony-user'@'localhost'; mysql&gt; FLUSH PRIVILEGES; &nbsp; &nbsp;mysql&gt; exit&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083914/4_2_88f6fe4c9b.png\"></figure><h2 style=\"margin-left:0px;\">Application Code Check</h2><p style=\"margin-left:0px;\">Now we are going to use a basic demo application built with Symfony to check the application code with Symfony framework. Were going to use a&nbsp;simple test to-do list which allows you to add and remove items, and change each item’s status that will them be stored in a MySQL database.</p><p style=\"margin-left:0px;\">To test our application code, we are going to use ‘Git’ . For this purpose, create a new directory within your web server’s document root directory. It will serve as an application root directory and later on used for web configuration.</p><p>$ sudo mkdir -p /var/www/test-symfony&nbsp;</p><p style=\"margin-left:0px;\">Run the below command to change the owner to your non-root sudo user.</p><p>$ sudo chown ubuntu:ubuntu /var/www/test-symfony&nbsp;</p><p style=\"margin-left:0px;\">Now change your directory to ‘/var/www/’ and run the ‘git’ command to clone demo application.</p><p>ubuntu@ubuntu:~$ cd /var/www/ $ git clone https://github.com/php-demos/todo-symfony.git test-symfony&nbsp;</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">Setup Permissions</h2><p style=\"margin-left:0px;\">After you clone the demo Symfony application, we need to assign it the web server’s user permission by using the ACL (Access Control Lists) for configuring the special permissions using the commands below.</p><p>$ sudo setfacl -R -m u:www-data:rx test-symfony/&nbsp;</p><p style=\"margin-left:0px;\">By using the same process,&nbsp;we need to give read + write + execute permissions (rwx) to the user www-data in order to enable the web server to write only in the directories under ‘test-symfony’ folder as shown.</p><p>$ sudo setfacl -R -m u:www-data:rwx test-symfony/app/cache test-symfony/app/logs&nbsp;</p><p style=\"margin-left:0px;\">If you want confirm the current permissions on the mentioned directory, then execute the following command.</p><p>$ getfacl test-symfony/app/cache&nbsp;</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">Setup Application</h2><p style=\"margin-left:0px;\">Now we will configure the Symfony application parameters and built this to work well across different environments. So we need to define an environment variable that tells Symfony we’re running the application on a production environment as by default it’s working in development environment.</p><p>$ export SYMFONY_ENV=prod Then we need to install the project dependencies by accessing the application folder and running the below 'composer install' command.$ cd test-symfony/ $ composer install --no-dev –optimize-autoloader&nbsp;</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">The installation and downloading process will take a while to complete. Once the process is done, you will be asked for&nbsp;some information required to populate into the ‘app/config/parameters.yml’ file which&nbsp;contains your database and smtp mailer information as shown in the image below.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">To check the database connection settings, run the command below.</p><p>$ php app/console doctrine:schema:validate&nbsp;</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Let’s search for this driver and then install it.</p><p>$ sudo apt-cache search pdo $ sudo apt-get install php5-mysql&nbsp;</p><p style=\"margin-left:0px;\">Installing the above extension will fix the PDO exception error . Then clear the cache and generate the application assets by executing the command below.</p><p>$ php app/console cache:clear --env=prod –no-debug $ php app/console assetic:dump --env=prod –no-debug&nbsp;</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">Setup Web Server</h2><p style=\"margin-left:0px;\">Make sure that you have Apache web server installed and running. If not then you can install and start its services by using the following two commands.</p><p>$ sudo apt-get install apache2 $ sudo service apace2 start&nbsp;</p><p style=\"margin-left:0px;\">Then we will configure the web server by setting up the ‘date.timezone’ directive in ‘php.ini’ file and updating the default website configuration file for serving our application.</p><p>$ sudo vim /etc/php5/apache2/php.ini[Date] ; Defines the default timezone used by the date functions ; http://php.net/date.timezone date.timezone = America/Toronto&nbsp;</p><p style=\"margin-left:0px;\">After making the change, close the file by using ‘:wq!’ and restart ‘Apache2’ services.</p><p>$ sudo service apache2 restart</p><p>Now we will replace the default website configuration file with our customized Symfony application. &nbsp;Let's take the backup of the original default file and create a new one to put the contents shown below.</p><p>$ sudo nano /etc/apache2/sites-available/000-default.conf &nbsp; &nbsp;</p><p style=\"margin-left:40px;\">DocumentRoot /var/www/test-symfony/web</p><p style=\"margin-left:80px;\">AllowOverride None &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:80px;\">Order Allow,Deny &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:80px;\">Allow from All &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:120px;\">Options -MultiViews &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:120px;\">RewriteEngine On &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:120px;\">RewriteCond %{REQUEST_FILENAME} !-f &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:120px;\">RewriteRule ^(.*)$ app.php [QSA,L] &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p style=\"margin-left:40px;\">ErrorLog /var/log/apache2/symfony_error.log &nbsp; &nbsp;CustomLog /var/log/apache2/symfony_access.log combined</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Save the file and quit. To apply all the changes, you have to restart Apache services.</p><p>$ sudo apache2 restart</p><p style=\"margin-left:0px;\">Now, open your web browser and give the FQDN or the IP address of your server.</p><p>&nbsp;http://your_servers_ip/&nbsp;</p><p style=\"margin-left:0px;\">After that, you will be able to see the default web page of your Symfony PHP frame work where you can create your new projects.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">At the end of this article, we assume that you are now able to deploy Symfony on your Ubuntu server by following this step by step guide with&nbsp;all commands used and snapshots for&nbsp;each step included. So, we can say that’s it! Well done. You have created a very minimum but functional CMS which can act as a good foundation for larger projects! Feel free to contact us here if you need further assistance or you face any kind of problem during its setup.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T06:02:16.330Z","created_at":"2021-03-30T06:01:44.624Z","updated_at":"2021-03-30T06:02:16.717Z","PostSEO":{"id":530,"GoogleSEO":{"id":521,"Title":"VEXXHOST - Deploy Symfony Application to Production on Ubuntu 14.04","Description":"Read about the deployment of Symphony on Ubuntu 14.04 using LEMP or LAMP stack (Linux Apache MySQL PHP). We will be using MySQL and Apache Web server."},"FacebookSEO":{"id":517,"Title":"VEXXHOST - Deploy Symfony Application to Production on Ubuntu 14.04","Url":null,"Description":"Read about the deployment of Symphony on Ubuntu 14.04 using LEMP or LAMP stack (Linux Apache MySQL PHP). We will be using MySQL and Apache Web server.","SiteName":"VEXXHOST","Image":{"id":728,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083838/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":25.91,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083837/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":44.14,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083837/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":9.53,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","ext":".jpg","mime":"image/jpeg","size":46.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083836/Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"},"created_at":"2021-03-30T05:57:18.710Z","updated_at":"2021-03-30T05:57:18.920Z"}},"TwitterSEO":{"id":517,"Description":"Read about the deployment of Symphony on Ubuntu 14.04 using LEMP or LAMP stack (Linux Apache MySQL PHP). We will be using MySQL and Apache Web server.","Title":"VEXXHOST - Deploy Symfony Application to Production on Ubuntu 14.04","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":728,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083838/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":25.91,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083837/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":44.14,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083837/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":9.53,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","ext":".jpg","mime":"image/jpeg","size":46.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083836/Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"},"created_at":"2021-03-30T05:57:18.710Z","updated_at":"2021-03-30T05:57:18.920Z"}}},"LinkToResource":{"id":448,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":728,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083838/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":25.91,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083837/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":44.14,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083837/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-800x400.jpg","path":null,"size":9.53,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","ext":".jpg","mime":"image/jpeg","size":46.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083836/Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_800x400_794a61c4d5","resource_type":"image"},"created_at":"2021-03-30T05:57:18.710Z","updated_at":"2021-03-30T05:57:18.920Z"},"TextContent":"Symfony is a PHP full-stack web framework and an open source community-driven project built on top of the Symfony Components to create websites and web applications. It is written with speed and flexibility in mind that will allow developers to build better and easily maintain their websites with PHP. Symfony can be used to develop all kind of websites, from your personal blog to high traffic websites like Yahoo!Answers or Dailymotion.Symfony can run on Windows, Linux or Mac; it can use Apache or Nginx and MySQL, or few other database engine at the backend. This article is about deployment of Symfony on Ubuntu 14.04 using LEMP or LAMP stack (Linux Apache MySQL PHP). We will be using MySQL and Apache Web server in this guide.Basic RequirementsIn order to deploy Symfony on Ubuntu 14.04, we need a non root sudo user to login and perform all system level tasks on Ubuntu 14.04 instance. Let’s connect to your server using ssh or open its CLI to perform basic OS settings.Host Name SetupTo configure your system localhost entry, run the command as shown below.$ sudo hostnamectl set-hostname ubuntu $ sudo vim /etc/hosts 16.25.54.79 ubuntu ubuntu.vexxhost.com System UpdateAfter setting up the network and hostname on your server, run the command below to update your Operating System with the latest update and security patches.$ sudo apt-get update Installing PackagesWe need to install some basic packages that are necessary for the installation of Symfony. Run the following command to install those dependent packages on your Ubuntu 14 server as shown.$ sudo apt-get install php5 php5-cli php5-curl php5-xdebug php5-intl git acl Press ‘Y’ key to continue. You will see that the mentioned packages are being installed including ‘acl’ to configure the right directory permissions while installing the application and some other PHP extensions . You can search for your required PHP extension by executing the below command and you will see a list of all its available package and their description.$ sudo apt-cache search php5 Installing ComposerComposer is a dependency manager for PHP that controls our library versions and their sources. We need this to download all dependencies required for Symfony. To install composer, we will be using the following ‘curl’ command to get it from the composer download page.$ curl -sS https://getcomposer.org/installer | php The composer package will be installed in your home directory and now we need to move it to the ‘/usr/local/bin’ directory using the following command.$ sudo mv composer.phar /usr/local/bin/composer LAMP SetupAfter performing the basic OS operations, installing the required PHP extension and composer download,  we are going to setup LAMP stack by using the MySQL and Apache Web Server. To do that, let’s follow the below instruction.MySQL DatabaseTo install MySQL database on your Ubuntu 14.04 server run the following command as shown below.$ sudo apt-get install mysql-server After configuring the root password, check the status of ‘mysql’ service then start running it using the below command.$ sudo service mysql status $ sudo service mysql start Now, connect to mysql database console using the root credentials that you configured earlier and create a new database and a user with special privileges assigned to it by running the below commands.$ mysql -u root -p mysql> create database symfony character set utf8; mysql> CREATE USER 'symfony-user'@'localhost' IDENTIFIED BY 'symfony***'; mysql> GRANT ALL PRIVILEGES ON symfony.* TO 'symfony-user'@'localhost'; mysql> FLUSH PRIVILEGES;    mysql> exit Application Code CheckNow we are going to use a basic demo application built with Symfony to check the application code with Symfony framework. Were going to use a simple test to-do list which allows you to add and remove items, and change each item’s status that will them be stored in a MySQL database.To test our application code, we are going to use ‘Git’ . For this purpose, create a new directory within your web server’s document root directory. It will serve as an application root directory and later on used for web configuration.$ sudo mkdir -p /var/www/test-symfony Run the below command to change the owner to your non-root sudo user.$ sudo chown ubuntu:ubuntu /var/www/test-symfony Now change your directory to ‘/var/www/’ and run the ‘git’ command to clone demo application.ubuntu@ubuntu:~$ cd /var/www/ $ git clone https://github.com/php-demos/todo-symfony.git test-symfony  Setup PermissionsAfter you clone the demo Symfony application, we need to assign it the web server’s user permission by using the ACL (Access Control Lists) for configuring the special permissions using the commands below.$ sudo setfacl -R -m u:www-data:rx test-symfony/ By using the same process, we need to give read + write + execute permissions (rwx) to the user www-data in order to enable the web server to write only in the directories under ‘test-symfony’ folder as shown.$ sudo setfacl -R -m u:www-data:rwx test-symfony/app/cache test-symfony/app/logs If you want confirm the current permissions on the mentioned directory, then execute the following command.$ getfacl test-symfony/app/cache  Setup ApplicationNow we will configure the Symfony application parameters and built this to work well across different environments. So we need to define an environment variable that tells Symfony we’re running the application on a production environment as by default it’s working in development environment.$ export SYMFONY_ENV=prod Then we need to install the project dependencies by accessing the application folder and running the below 'composer install' command.$ cd test-symfony/ $ composer install --no-dev –optimize-autoloader  The installation and downloading process will take a while to complete. Once the process is done, you will be asked for some information required to populate into the ‘app/config/parameters.yml’ file which contains your database and smtp mailer information as shown in the image below. To check the database connection settings, run the command below.$ php app/console doctrine:schema:validate  Let’s search for this driver and then install it.$ sudo apt-cache search pdo $ sudo apt-get install php5-mysql Installing the above extension will fix the PDO exception error . Then clear the cache and generate the application assets by executing the command below.$ php app/console cache:clear --env=prod –no-debug $ php app/console assetic:dump --env=prod –no-debug  Setup Web ServerMake sure that you have Apache web server installed and running. If not then you can install and start its services by using the following two commands.$ sudo apt-get install apache2 $ sudo service apace2 start Then we will configure the web server by setting up the ‘date.timezone’ directive in ‘php.ini’ file and updating the default website configuration file for serving our application.$ sudo vim /etc/php5/apache2/php.ini[Date] ; Defines the default timezone used by the date functions ; http://php.net/date.timezone date.timezone = America/Toronto After making the change, close the file by using ‘:wq!’ and restart ‘Apache2’ services.$ sudo service apache2 restartNow we will replace the default website configuration file with our customized Symfony application.  Let's take the backup of the original default file and create a new one to put the contents shown below.$ sudo nano /etc/apache2/sites-available/000-default.conf    DocumentRoot /var/www/test-symfony/webAllowOverride None        Order Allow,Deny        Allow from All                    Options -MultiViews            RewriteEngine On            RewriteCond %{REQUEST_FILENAME} !-f            RewriteRule ^(.*)$ app.php [QSA,L]            ErrorLog /var/log/apache2/symfony_error.log    CustomLog /var/log/apache2/symfony_access.log combined Save the file and quit. To apply all the changes, you have to restart Apache services.$ sudo apache2 restartNow, open your web browser and give the FQDN or the IP address of your server. http://your_servers_ip/ After that, you will be able to see the default web page of your Symfony PHP frame work where you can create your new projects.ConclusionAt the end of this article, we assume that you are now able to deploy Symfony on your Ubuntu server by following this step by step guide with all commands used and snapshots for each step included. So, we can say that’s it! Well done. You have created a very minimum but functional CMS which can act as a good foundation for larger projects! Feel free to contact us here if you need further assistance or you face any kind of problem during its setup."},{"id":45,"Title":"How To setup LAMP stack on CentOS 7","Slug":"resources/tutorials/how-to-setup-lamp-stack-on-centos-7","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">LAMP is short for Linux, Apache, MySQL or PHP which is an open source web development platform. It uses Linux as it’s operating system while Apache and MySQL are used as a web &amp; database servers, the PHP is also used as an object oriented scripting language to work as a complete web stack, which is used to prepare servers for hosting web content.</p><p style=\"margin-left:0px;\">In this article we are going to show you the step by step instructions to setup your own LAMP stack on CentOS 7 operating system.</p><h2 style=\"margin-left:0px;\">Prerequisites</h2><p style=\"margin-left:0px;\">The Minimal system resources to setup LAMP server depends upon the requirements. We are going to setup the LAMP Server under the following base system with minimal installation.</p><ul><li>Hostname: centos-7.vexxhost.com</li><li>Static IP: 203.0.113.1</li><li>Operating system: CentOS Linux 7 (Core)</li><li>Virtual CPU: 4 cores</li><li>Memory (RAM): 1GB</li><li>Disk Space: 40GB</li></ul><p style=\"margin-left:0px;\">After deploying the CentOS 7 with the mentioned resources, we will now proceed on setting up LAMP by installing Apache (web server), MySQL (database server) then PHP in the following order.</p><h2 style=\"margin-left:0px;\">Apache Web Server</h2><p style=\"margin-left:0px;\">Apache web server is generally recognized as the world’s most popular open source HTTP web server and this allows us to easily install it from its available repositories in CentOS with following steps.</p><h3>Installing Apache Web Server</h3><p style=\"margin-left:0px;\">Run the following command with root user to install apache http server with yum repositories.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# yum install httpd\n</code></pre><p style=\"margin-left:0px;\">Once the installation is complete, we need to start it’s service and enable it to startup at boot using following commands.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# systemctl start httpd\n[root@centos-7 ~]# systemctl enable httpd\n</code></pre><h3>Adding Firewall Rule</h3><p style=\"margin-left:0px;\">Apache listens on port 80, so we need to exclude it from the firewall by simply executing following commands to add a permanent firewall rule and then restart the firewalled service as:</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# firewall-cmd –permanent –add-server http\n[root@centos-7 ~]# systemctl restart firewalld.service\n</code></pre><h3>Apache Test</h3><p style=\"margin-left:0px;\">To test the Apache web server installation, we need to open a web browser and give the server IP address. If you got the Apache test page as shown below, then it means that our Apache HTTP server is operational and successfully installed: http://203.0.113.1/</p><h2 style=\"margin-left:0px;\">MySQL-MariaDB Server Setup</h2><p style=\"margin-left:0px;\">In CentOS 7, MySQL is replaced with MariaDB, it is an enhanced drop-in replacement for MySQL relational database management system. Under the following steps we will now install it with yum commands.</p><h3>Installing MariaDB</h3><p style=\"margin-left:0px;\">We start by installing MariaDB-server package using the command below.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# yum install mariadb mariadb-server\n</code></pre><p style=\"margin-left:0px;\">MariaDB server will now be installed with its required dependencies and updates. Once done we need to start it’s service, enabling it to start at boot and start it’s daemon for the first time as shown below.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# systemctl start mariadb.service\n[root@centos-7 ~]# systemctl enable mariadb.service\n</code></pre><h3>Securing MySQL-MariaDB</h3><p style=\"margin-left:0px;\">Using mysql_secure_installation command, we can secure our database where we will be given the option to change or set its root password or remove anonymous user accounts and disallow remote root login with the test database and user removal.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# mysql_secure_installation\nSet root password? [Y/n] Y\nRemove anonymous users? [Y/n] Y\nDisallow root login remotely? [Y/n] Y\nRemove test database and access to it? [Y/n] Y\nReload privilege tables now? [Y/n] Y\n</code></pre><h3>Testing MySQL-MariaDB</h3><p style=\"margin-left:0px;\">We’re done with MySQL/MariaDB installation. We will now check and test the database by logging in, then we’ll create a new database using the following commands.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# mysql -u root -p\nEnter password: ******\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 10\nServer version: 5.5.41-MariaDB MariaDB Server\n</code></pre><p style=\"margin-left:0px;\">Create a new database and a user with grant privileges as below, where database name is web with user name webuser having password web123.</p><pre><code class=\"language-plaintext\">MariaDB [(none)]&gt; create database web;\nQuery OK, 1 row affected (0.01 sec)\nMariaDB [(none)]&gt; grant all on web.* to 'webuser' identified by 'web123';\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]&gt; exit\nBye\n</code></pre><h2 style=\"margin-left:0px;\">PHP Installation Setup</h2><p style=\"margin-left:0px;\">After successful installations of Apache and MariaDB, we can now we proceed with PHP and its other recommended packages as below.</p><h3>Installing PHP</h3><p style=\"margin-left:0px;\">We can install PHP and other supporting libraries with following command.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# yum install php php-mysql php-pear php-gd php-mbstring\n</code></pre><h3>PHP Configuration</h3><p style=\"margin-left:0px;\">PHP configuration file is located in /etc/php.ini, we can modify this as our requirements to upgrade performance and other parameters or modifications like creating error logs.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# vim /etc/php.ini\nerror_log = /var/log/php/error.log\nmax_input_time = 30\n</code></pre><p style=\"margin-left:0px;\">Now create the error.log file and give it’s ownership to apahce user.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# touch /var/log/php/error.log\n[root@centos-7 ~]# chown –R apache /var/log/php\n</code></pre><p style=\"margin-left:0px;\">After making modifications, we are required to restart the Apache services for the changes to take effect.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# systemctl reload httpd\n</code></pre><h3>Testing PHP</h3><p style=\"margin-left:0px;\">In order to test the PHP, lets create a file phpinfo.php in document root directory /nas/content/live/vexxhost/ and then add the below code of phpinfo as shown below.</p><pre><code class=\"language-plaintext\">[root@centos-7 html]# vim phpinfo.php\n&lt;?php phpinfo(); ?&gt;\n</code></pre><p style=\"margin-left:0px;\">Then open the following link in your web browser and we will be able to see all the information about PHP and its other configurations: http://203.0.113.1/phpinfo.php (replacing your IP address with the one above).</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">In this detailed article we learned to setup LAMP Stack, where we installed and configured Apache, HTTP server, MySQL-MariaDB and PHP client to successfully install the LAMP web stack with it’s tested functionality of working as a web server for hosting websites to install any web applications on it.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:16:05.922Z","created_at":"2021-03-30T05:16:02.124Z","updated_at":"2021-03-30T05:16:06.314Z","PostSEO":{"id":519,"GoogleSEO":{"id":510,"Title":"How To setup LAMP stack on CentOS 7 - VEXXHOST","Description":"LAMP is short for Linux, Apache, MySQL or PHP which is an open source web development platform. It uses Linux as it’s operating system while Apache and"},"FacebookSEO":{"id":506,"Title":"How To setup LAMP stack on CentOS 7 - VEXXHOST","Url":null,"Description":"LAMP is short for Linux, Apache, MySQL or PHP which is an open source web development platform. It uses Linux as it’s operating system while Apache and","SiteName":"VEXXHOST","Image":{"id":640,"name":"How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081315/small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"small_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":221.88,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081314/medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"medium_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":494.28,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081313/thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"thumbnail_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":58.4,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}}},"hash":"How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","ext":".png","mime":"image/png","size":463.2,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081312/How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"},"created_at":"2021-03-30T05:15:15.849Z","updated_at":"2021-03-30T05:15:15.857Z"}},"TwitterSEO":{"id":506,"Description":"LAMP is short for Linux, Apache, MySQL or PHP which is an open source web development platform. It uses Linux as it’s operating system while Apache and","Title":"How To setup LAMP stack on CentOS 7 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":640,"name":"How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081315/small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"small_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":221.88,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081314/medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"medium_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":494.28,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081313/thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"thumbnail_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":58.4,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}}},"hash":"How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","ext":".png","mime":"image/png","size":463.2,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081312/How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"},"created_at":"2021-03-30T05:15:15.849Z","updated_at":"2021-03-30T05:15:15.857Z"}}},"LinkToResource":{"id":437,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":640,"name":"How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081315/small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"small_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":221.88,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081314/medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"medium_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":494.28,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081313/thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","hash":"thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","mime":"image/png","name":"thumbnail_How-To-setup-LAMP-stack-on-CentOS-7-800x400.png","path":null,"size":58.4,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"}}},"hash":"How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","ext":".png","mime":"image/png","size":463.2,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081312/How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_setup_LAMP_stack_on_Cent_OS_7_800x400_ebdad0fa2b","resource_type":"image"},"created_at":"2021-03-30T05:15:15.849Z","updated_at":"2021-03-30T05:15:15.857Z"},"TextContent":"LAMP is short for Linux, Apache, MySQL or PHP which is an open source web development platform. It uses Linux as it’s operating system while Apache and MySQL are used as a web & database servers, the PHP is also used as an object oriented scripting language to work as a complete web stack, which is used to prepare servers for hosting web content.In this article we are going to show you the step by step instructions to setup your own LAMP stack on CentOS 7 operating system.PrerequisitesThe Minimal system resources to setup LAMP server depends upon the requirements. We are going to setup the LAMP Server under the following base system with minimal installation.Hostname: centos-7.vexxhost.comStatic IP: 203.0.113.1Operating system: CentOS Linux 7 (Core)Virtual CPU: 4 coresMemory (RAM): 1GBDisk Space: 40GBAfter deploying the CentOS 7 with the mentioned resources, we will now proceed on setting up LAMP by installing Apache (web server), MySQL (database server) then PHP in the following order.Apache Web ServerApache web server is generally recognized as the world’s most popular open source HTTP web server and this allows us to easily install it from its available repositories in CentOS with following steps.Installing Apache Web ServerRun the following command with root user to install apache http server with yum repositories.[root@centos-7 ~]# yum install httpd\nOnce the installation is complete, we need to start it’s service and enable it to startup at boot using following commands.[root@centos-7 ~]# systemctl start httpd\n[root@centos-7 ~]# systemctl enable httpd\nAdding Firewall RuleApache listens on port 80, so we need to exclude it from the firewall by simply executing following commands to add a permanent firewall rule and then restart the firewalled service as:[root@centos-7 ~]# firewall-cmd –permanent –add-server http\n[root@centos-7 ~]# systemctl restart firewalld.service\nApache TestTo test the Apache web server installation, we need to open a web browser and give the server IP address. If you got the Apache test page as shown below, then it means that our Apache HTTP server is operational and successfully installed: http://203.0.113.1/MySQL-MariaDB Server SetupIn CentOS 7, MySQL is replaced with MariaDB, it is an enhanced drop-in replacement for MySQL relational database management system. Under the following steps we will now install it with yum commands.Installing MariaDBWe start by installing MariaDB-server package using the command below.[root@centos-7 ~]# yum install mariadb mariadb-server\nMariaDB server will now be installed with its required dependencies and updates. Once done we need to start it’s service, enabling it to start at boot and start it’s daemon for the first time as shown below.[root@centos-7 ~]# systemctl start mariadb.service\n[root@centos-7 ~]# systemctl enable mariadb.service\nSecuring MySQL-MariaDBUsing mysql_secure_installation command, we can secure our database where we will be given the option to change or set its root password or remove anonymous user accounts and disallow remote root login with the test database and user removal.[root@centos-7 ~]# mysql_secure_installation\nSet root password? [Y/n] Y\nRemove anonymous users? [Y/n] Y\nDisallow root login remotely? [Y/n] Y\nRemove test database and access to it? [Y/n] Y\nReload privilege tables now? [Y/n] Y\nTesting MySQL-MariaDBWe’re done with MySQL/MariaDB installation. We will now check and test the database by logging in, then we’ll create a new database using the following commands.[root@centos-7 ~]# mysql -u root -p\nEnter password: ******\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 10\nServer version: 5.5.41-MariaDB MariaDB Server\nCreate a new database and a user with grant privileges as below, where database name is web with user name webuser having password web123.MariaDB [(none)]> create database web;\nQuery OK, 1 row affected (0.01 sec)\nMariaDB [(none)]> grant all on web.* to 'webuser' identified by 'web123';\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]> exit\nBye\nPHP Installation SetupAfter successful installations of Apache and MariaDB, we can now we proceed with PHP and its other recommended packages as below.Installing PHPWe can install PHP and other supporting libraries with following command.[root@centos-7 ~]# yum install php php-mysql php-pear php-gd php-mbstring\nPHP ConfigurationPHP configuration file is located in /etc/php.ini, we can modify this as our requirements to upgrade performance and other parameters or modifications like creating error logs.[root@centos-7 ~]# vim /etc/php.ini\nerror_log = /var/log/php/error.log\nmax_input_time = 30\nNow create the error.log file and give it’s ownership to apahce user.[root@centos-7 ~]# touch /var/log/php/error.log\n[root@centos-7 ~]# chown –R apache /var/log/php\nAfter making modifications, we are required to restart the Apache services for the changes to take effect.[root@centos-7 ~]# systemctl reload httpd\nTesting PHPIn order to test the PHP, lets create a file phpinfo.php in document root directory /nas/content/live/vexxhost/ and then add the below code of phpinfo as shown below.[root@centos-7 html]# vim phpinfo.php\n<?php phpinfo(); ?>\nThen open the following link in your web browser and we will be able to see all the information about PHP and its other configurations: http://203.0.113.1/phpinfo.php (replacing your IP address with the one above).ConclusionIn this detailed article we learned to setup LAMP Stack, where we installed and configured Apache, HTTP server, MySQL-MariaDB and PHP client to successfully install the LAMP web stack with it’s tested functionality of working as a web server for hosting websites to install any web applications on it."},{"id":52,"Title":"How To Install & Setup Puppet Master and Client on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-and-setup-puppet-master-and-client-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Puppet is a system that is used for automating system administration tasks. Almost all system administrators try to get rid of their daily repetitive and boring routine tasks with the help of scripting to automate them.</p><p style=\"margin-left:0px;\">But there are issues with scripting and automating, that is why we prefer to use Puppet configuration management tool that is extremely powerful in deploying, configuring and managing a server machine. Puppet keeps the configurations of your hosts under check and can used in one shot to configure a machine from scratch like installing packages, configurations and to create and manage users.</p><p style=\"margin-left:0px;\">Let’s see how it works for a master and client installation and configuration on Ubuntu 14.04 that will consists of central Puppet Master Server where all of your configuration data will be managed and distributed, while the remaining servers will be acting as Puppet Agent nodes, which can be configured by Puppet Master Server.</p><h2 style=\"margin-left:0px;\">Prerequisites</h2><p style=\"margin-left:0px;\">We will be using two virtual machines in this tutorial with Ubuntu 14.04 operating system installed on these with their static IP addresses and hostnames configured properly.</p><p style=\"margin-left:0px;\">Let’s open the /etc/hosts file and configure it according to your infrastructure environment.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# vim /etc/hosts\n192.168.1.90  ubuntu-puppet.test.com      ubuntu-puppet\n192.168.1.91   ubuntu-client.test.com      ubuntu-client\n</code></pre><p style=\"margin-left:0px;\">Where the ubuntu-puppet will serve as Master Puppet while we will install its agent on ubuntu-client.</p><p style=\"margin-left:0px;\">Since Puppet is not in basic Ubuntu distribution repositories, we have to add a custom repository provided by Puppet Labs. On all servers in which you want to use Puppet, download and install the repository by executing following commands on each server.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb\nroot@ubuntu-client:~# wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082611/x1q00_KQ_b1adfe68b5.png\"></figure><p style=\"margin-left:0px;\">To install the downloaded repository from puppet labs, let run the following commands to install.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# dpkg -i puppetlabs-release-trusty.deb\nroot@ubuntu-client:~# dpkg -i puppetlabs-release-trusty.deb\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082628/S_Eer5_TA_7c4efd2fa5.png\"></figure><p style=\"margin-left:0px;\">Now update your system with latest packages and repositories with below command on each server.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# apt-get update\nroot@ubuntu-puppet:~# apt-get update\n</code></pre><p style=\"margin-left:0px;\">The server acting as a puppet master should have its system time set accurately. To set, accurate system time you should probably use NTP service. Use the following command to install ntp server on your master puppet server.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# apt-get -y install ntp\nroot@ubuntu-puppet:~# service ntp restart\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082651/TU_8j_Fc_N_450e6db58b.png\"></figure><h2 style=\"margin-left:0px;\">Puppet Master Installation</h2><p style=\"margin-left:0px;\">Now we are ready to proceed with the install installation of puppet packages which will fetch all necessary prerequisites and requirements.</p><p style=\"margin-left:0px;\">Once system time is set correctly, you can install latest versions of Puppet using Puppet Labs package repository on your correspondent Linux versions.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# apt-get install puppetmaster\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082669/ls_Ob7_An_cf921e6a4e.png\"></figure><p style=\"margin-left:0px;\">The output shows the successful installation of puppetserver and its running services. We can check the puppet version with below command.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# puppet -V\n3.8.1\n</code></pre><p style=\"margin-left:0px;\">Now we need to lock the puppet version update as this will hamper the configurations while updating Puppet. It will not update Puppet while running updates in the system. We can do these settings by creating a new file with following configurations as shown.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# vim /etc/apt/preferences.d/00-puppet.pref\n# /etc/apt/preferences.d/00-puppet.pref\nPackage: puppet puppet-common puppetmaster-passenger\nPin: version 3.8*\nPin-Priority: 501\n:wq!\n</code></pre><h3>Puppet Master Configuration</h3><p style=\"margin-left:0px;\">To configure puppetmaster, we need to change its puppet.conf file, where we will just comment out this line templatedir=$confdir/templates while other parameters will remain as same.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082694/2_Ua32be_bbcd96bbea.png\"></figure><p style=\"margin-left:0px;\">After making required changes to the configuration file now restart master puppet services.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# service puppetmaster stop\nroot@ubuntu-puppet:~# service puppetmaster start\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082710/u_Gs8h_Sp_e454f3dccc.png\"></figure><p style=\"margin-left:0px;\">At this stage our master puppet server is ready, now let’s move towards its client setup on another virtual machine with Ubuntu 14.04 Operating system installed.</p><h2 style=\"margin-left:0px;\">Puppet Client Installation</h2><p style=\"margin-left:0px;\">As we had already done with installation of its prerequisites, now simply run the following command to install puppet client on the host that will be interacted with Puppet Master Ubuntu server.</p><pre><code class=\"language-plaintext\">root@ubuntu-client:~# apt-get install puppet\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082729/z_Fojsgr_094797feba.png\"></figure><h3>Puppet Version Lock</h3><p style=\"margin-left:0px;\">In the same way as we did for Puppet master server, we will lock the Puppet version so that it may not cause any issue during the operating system updates.<br>To check the installed puppet version use puppet -V command and then create a new file called in the apt preferences directory with following configurations changes.</p><pre><code class=\"language-plaintext\">root@ubuntu-client:~# puppet -V\n3.8.1\nroot@ubuntu-client:~# vim /etc/apt/preferences.d/00-puppet.pref\n# /etc/apt/preferences.d/00-puppet.pref\nPackage: puppet puppet-common puppetmaster-passenger\nPin: version 3.8*\nPin-Priority: 501\n:wq!\n</code></pre><p style=\"margin-left:0px;\">Now it will not update the Puppet while running updates in the system, so let’s proceed with Puppet client configuration in following steps.</p><h3>Puppet Client Configurations</h3><p style=\"margin-left:0px;\">Open the configuration file of puppet client by using any of your favorite editor and configure its parameters as shown. We will comment out the [master] configurations here and will add the new lines under [agent] as shown.</p><pre><code class=\"language-plaintext\">root@ubuntu-client:~# vim /etc/puppet/puppet.conf \n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082753/ti0_RC_8o_11340dd3ee.png\"></figure><h3>Enable Puppet Service</h3><p style=\"margin-left:0px;\">To enable puppet service we have to make changes in its default configurations file. Setting this to “yes” allows the puppet agent service to run.</p><pre><code class=\"language-plaintext\">root@ubuntu-client:~# vim /etc/default/puppet\nSTART=yes\n:wq!\n</code></pre><p style=\"margin-left:0px;\">Save the changes and start puppet agent services with below command.</p><pre><code class=\"language-plaintext\">root@ubuntu-client:~# service puppet start\n * Starting puppet agent\n</code></pre><p style=\"margin-left:0px;\">The output shown confirms that our client machine is ready to communicate with puppet master server.</p><h2 style=\"margin-left:0px;\">Exchange Certificates from Master to Client Puppet</h2><p style=\"margin-left:0px;\">Now we are going to generate new certificates for Master Puppet to Client Puppet communications because after successful configuration of Puppet client it will search for Puppet master Server and ask for cert request before accepting any administrative instructions from Master puppet server.<br>Let’s run the command at Puppet Master Ubuntu server to view such cert requests.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# puppet cert list\n\"ubuntu-client.test.com\" (SHA256) 37:23:4B:89:F4:F4:35:A1:4E:53:A8:BE:D6:98:C6:C5:39:98:62:6F:02:3E:5A:D0:B6:3C:C9:3D:F5:F7:09:94\n</code></pre><p style=\"margin-left:0px;\">The above output shows that the ubuntu-client came to master Puppet and ask for certs request. Now the puppet master server must sign the cert requested from puppet client with following command.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# puppet cert sign ubuntu-client.test.com\nNotice: Signed certificate request for ubuntu-client.test.com\nNotice: Removing file Puppet::SSL::CertificateRequest ubuntu-client.test.com at '/var/lib/puppet/ssl/ca/requests/ubuntu-client.test.com.pem'\n</code></pre><p style=\"margin-left:0px;\">It means that the request from the Client Puppet has been accepted by the Puppet Master server. To confirm we can check this by executing the following command at Master Puppet server as.</p><pre><code class=\"language-plaintext\">root@ubuntu-puppet:~# puppet cert list -all\n+ \"ubuntu-client.test.com\" (SHA256) 5D:7F:0A:A3:48:D3:65:69:94:91:3E:C3:1C:0F:56:63:BA:1C:2C:8A:DB:F5:18:68:76:BB:41:04:4B:DD:56:0C\n+ \"ubuntu-puppet.test.com\" (SHA256) E1:C7:3C:CE:81:EB:C0:24:1F:5C:B6:D5:0D:93:58:12:18:00:70:D2:7A:8F:C0:47:1C:74:FD:CA:D6:DC:A2:77 (alt names: \"DNS:puppet\", \"DNS:puppet.test.com\", \"DNS:ubuntu-puppet.test.com\")\n</code></pre><p style=\"margin-left:0px;\">Where the + sign in the output shows the successful certificate signing at the master puppet server.<br>We can also view the certificates fingerprint on the client puppet machine by running the following command on the Client Puppet machine as below.</p><pre><code class=\"language-plaintext\">root@ubuntu-client:~# puppet agent --fingerprint\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082772/exz_SFUC_7db7e94b4c.png\"></figure><p style=\"margin-left:0px;\">Similarly we can add any number of clients with Puppet master Ubuntu Server and sign the cert requests from the clients and do the administrations centrally through the Puppet Master server.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">Greetings! We have successfully installed and configured a Puppet server, and set up its basic configuration for client servers with fully functional Puppet instance on our Ubuntu 14.04 with its Client puppet installations and configurations. So, Puppet automation tool seems robust, user friendly interface, as well as very declarative with an easy installation. Feel free to contact if you need further assistance while you are preparing your own Puppet Master/Client setup on Ubuntu.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:40:15.540Z","created_at":"2021-03-30T05:40:12.535Z","updated_at":"2021-03-30T05:40:15.826Z","PostSEO":{"id":526,"GoogleSEO":{"id":517,"Title":"VEXXHOST - How To Install & Setup Puppet Master and Client on Ubuntu","Description":"Puppet is a system that is used for automating system administration tasks. Almost all system administrators try to get rid of their daily repetitive and"},"FacebookSEO":{"id":513,"Title":"VEXXHOST - How To Install & Setup Puppet Master and Client on Ubuntu","Url":null,"Description":"Puppet is a system that is used for automating system administration tasks. Almost all system administrators try to get rid of their daily repetitive and","SiteName":"VEXXHOST","Image":{"id":678,"name":"puppet-ubuntu-1404-c85aa452-800x377.png","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082586/small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"small_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":181.69,"width":500,"height":236,"provider_metadata":{"public_id":"small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082586/medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"medium_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":407.87,"width":750,"height":353,"provider_metadata":{"public_id":"medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082584/thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"thumbnail_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":46.33,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}}},"hash":"puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","ext":".png","mime":"image/png","size":347.08,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082583/puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"},"created_at":"2021-03-30T05:36:27.234Z","updated_at":"2021-03-30T05:36:27.243Z"}},"TwitterSEO":{"id":513,"Description":"Puppet is a system that is used for automating system administration tasks. Almost all system administrators try to get rid of their daily repetitive and","Title":"VEXXHOST - How To Install & Setup Puppet Master and Client on Ubuntu","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":678,"name":"puppet-ubuntu-1404-c85aa452-800x377.png","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082586/small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"small_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":181.69,"width":500,"height":236,"provider_metadata":{"public_id":"small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082586/medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"medium_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":407.87,"width":750,"height":353,"provider_metadata":{"public_id":"medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082584/thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"thumbnail_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":46.33,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}}},"hash":"puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","ext":".png","mime":"image/png","size":347.08,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082583/puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"},"created_at":"2021-03-30T05:36:27.234Z","updated_at":"2021-03-30T05:36:27.243Z"}}},"LinkToResource":{"id":444,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":678,"name":"puppet-ubuntu-1404-c85aa452-800x377.png","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082586/small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"small_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":181.69,"width":500,"height":236,"provider_metadata":{"public_id":"small_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082586/medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"medium_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":407.87,"width":750,"height":353,"provider_metadata":{"public_id":"medium_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082584/thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","hash":"thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","mime":"image/png","name":"thumbnail_puppet-ubuntu-1404-c85aa452-800x377.png","path":null,"size":46.33,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"}}},"hash":"puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","ext":".png","mime":"image/png","size":347.08,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082583/puppet_ubuntu_1404_c85aa452_800x377_6a700c5744.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"puppet_ubuntu_1404_c85aa452_800x377_6a700c5744","resource_type":"image"},"created_at":"2021-03-30T05:36:27.234Z","updated_at":"2021-03-30T05:36:27.243Z"},"TextContent":"Puppet is a system that is used for automating system administration tasks. Almost all system administrators try to get rid of their daily repetitive and boring routine tasks with the help of scripting to automate them.But there are issues with scripting and automating, that is why we prefer to use Puppet configuration management tool that is extremely powerful in deploying, configuring and managing a server machine. Puppet keeps the configurations of your hosts under check and can used in one shot to configure a machine from scratch like installing packages, configurations and to create and manage users.Let’s see how it works for a master and client installation and configuration on Ubuntu 14.04 that will consists of central Puppet Master Server where all of your configuration data will be managed and distributed, while the remaining servers will be acting as Puppet Agent nodes, which can be configured by Puppet Master Server.PrerequisitesWe will be using two virtual machines in this tutorial with Ubuntu 14.04 operating system installed on these with their static IP addresses and hostnames configured properly.Let’s open the /etc/hosts file and configure it according to your infrastructure environment.root@ubuntu-puppet:~# vim /etc/hosts\n192.168.1.90  ubuntu-puppet.test.com      ubuntu-puppet\n192.168.1.91   ubuntu-client.test.com      ubuntu-client\nWhere the ubuntu-puppet will serve as Master Puppet while we will install its agent on ubuntu-client.Since Puppet is not in basic Ubuntu distribution repositories, we have to add a custom repository provided by Puppet Labs. On all servers in which you want to use Puppet, download and install the repository by executing following commands on each server.root@ubuntu-puppet:~# wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb\nroot@ubuntu-client:~# wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb\nTo install the downloaded repository from puppet labs, let run the following commands to install.root@ubuntu-puppet:~# dpkg -i puppetlabs-release-trusty.deb\nroot@ubuntu-client:~# dpkg -i puppetlabs-release-trusty.deb\nNow update your system with latest packages and repositories with below command on each server.root@ubuntu-puppet:~# apt-get update\nroot@ubuntu-puppet:~# apt-get update\nThe server acting as a puppet master should have its system time set accurately. To set, accurate system time you should probably use NTP service. Use the following command to install ntp server on your master puppet server.root@ubuntu-puppet:~# apt-get -y install ntp\nroot@ubuntu-puppet:~# service ntp restart\nPuppet Master InstallationNow we are ready to proceed with the install installation of puppet packages which will fetch all necessary prerequisites and requirements.Once system time is set correctly, you can install latest versions of Puppet using Puppet Labs package repository on your correspondent Linux versions.root@ubuntu-puppet:~# apt-get install puppetmaster\nThe output shows the successful installation of puppetserver and its running services. We can check the puppet version with below command.root@ubuntu-puppet:~# puppet -V\n3.8.1\nNow we need to lock the puppet version update as this will hamper the configurations while updating Puppet. It will not update Puppet while running updates in the system. We can do these settings by creating a new file with following configurations as shown.root@ubuntu-puppet:~# vim /etc/apt/preferences.d/00-puppet.pref\n# /etc/apt/preferences.d/00-puppet.pref\nPackage: puppet puppet-common puppetmaster-passenger\nPin: version 3.8*\nPin-Priority: 501\n:wq!\nPuppet Master ConfigurationTo configure puppetmaster, we need to change its puppet.conf file, where we will just comment out this line templatedir=$confdir/templates while other parameters will remain as same.After making required changes to the configuration file now restart master puppet services.root@ubuntu-puppet:~# service puppetmaster stop\nroot@ubuntu-puppet:~# service puppetmaster start\nAt this stage our master puppet server is ready, now let’s move towards its client setup on another virtual machine with Ubuntu 14.04 Operating system installed.Puppet Client InstallationAs we had already done with installation of its prerequisites, now simply run the following command to install puppet client on the host that will be interacted with Puppet Master Ubuntu server.root@ubuntu-client:~# apt-get install puppet\nPuppet Version LockIn the same way as we did for Puppet master server, we will lock the Puppet version so that it may not cause any issue during the operating system updates.To check the installed puppet version use puppet -V command and then create a new file called in the apt preferences directory with following configurations changes.root@ubuntu-client:~# puppet -V\n3.8.1\nroot@ubuntu-client:~# vim /etc/apt/preferences.d/00-puppet.pref\n# /etc/apt/preferences.d/00-puppet.pref\nPackage: puppet puppet-common puppetmaster-passenger\nPin: version 3.8*\nPin-Priority: 501\n:wq!\nNow it will not update the Puppet while running updates in the system, so let’s proceed with Puppet client configuration in following steps.Puppet Client ConfigurationsOpen the configuration file of puppet client by using any of your favorite editor and configure its parameters as shown. We will comment out the [master] configurations here and will add the new lines under [agent] as shown.root@ubuntu-client:~# vim /etc/puppet/puppet.conf \nEnable Puppet ServiceTo enable puppet service we have to make changes in its default configurations file. Setting this to “yes” allows the puppet agent service to run.root@ubuntu-client:~# vim /etc/default/puppet\nSTART=yes\n:wq!\nSave the changes and start puppet agent services with below command.root@ubuntu-client:~# service puppet start\n * Starting puppet agent\nThe output shown confirms that our client machine is ready to communicate with puppet master server.Exchange Certificates from Master to Client PuppetNow we are going to generate new certificates for Master Puppet to Client Puppet communications because after successful configuration of Puppet client it will search for Puppet master Server and ask for cert request before accepting any administrative instructions from Master puppet server.Let’s run the command at Puppet Master Ubuntu server to view such cert requests.root@ubuntu-puppet:~# puppet cert list\n\"ubuntu-client.test.com\" (SHA256) 37:23:4B:89:F4:F4:35:A1:4E:53:A8:BE:D6:98:C6:C5:39:98:62:6F:02:3E:5A:D0:B6:3C:C9:3D:F5:F7:09:94\nThe above output shows that the ubuntu-client came to master Puppet and ask for certs request. Now the puppet master server must sign the cert requested from puppet client with following command.root@ubuntu-puppet:~# puppet cert sign ubuntu-client.test.com\nNotice: Signed certificate request for ubuntu-client.test.com\nNotice: Removing file Puppet::SSL::CertificateRequest ubuntu-client.test.com at '/var/lib/puppet/ssl/ca/requests/ubuntu-client.test.com.pem'\nIt means that the request from the Client Puppet has been accepted by the Puppet Master server. To confirm we can check this by executing the following command at Master Puppet server as.root@ubuntu-puppet:~# puppet cert list -all\n+ \"ubuntu-client.test.com\" (SHA256) 5D:7F:0A:A3:48:D3:65:69:94:91:3E:C3:1C:0F:56:63:BA:1C:2C:8A:DB:F5:18:68:76:BB:41:04:4B:DD:56:0C\n+ \"ubuntu-puppet.test.com\" (SHA256) E1:C7:3C:CE:81:EB:C0:24:1F:5C:B6:D5:0D:93:58:12:18:00:70:D2:7A:8F:C0:47:1C:74:FD:CA:D6:DC:A2:77 (alt names: \"DNS:puppet\", \"DNS:puppet.test.com\", \"DNS:ubuntu-puppet.test.com\")\nWhere the + sign in the output shows the successful certificate signing at the master puppet server.We can also view the certificates fingerprint on the client puppet machine by running the following command on the Client Puppet machine as below.root@ubuntu-client:~# puppet agent --fingerprint\nSimilarly we can add any number of clients with Puppet master Ubuntu Server and sign the cert requests from the clients and do the administrations centrally through the Puppet Master server.ConclusionGreetings! We have successfully installed and configured a Puppet server, and set up its basic configuration for client servers with fully functional Puppet instance on our Ubuntu 14.04 with its Client puppet installations and configurations. So, Puppet automation tool seems robust, user friendly interface, as well as very declarative with an easy installation. Feel free to contact if you need further assistance while you are preparing your own Puppet Master/Client setup on Ubuntu."},{"id":46,"Title":"How to install & configure WordPress 4.2.2 on CentOS 7","Slug":"resources/tutorials/how-to-install-and-configure-wordpress-on-centos-7","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">WordPress is an open source tool and a content management system written in PHP. It’s one of the easiest and powerful website creation tool for blogging.</p><p style=\"margin-left:0px;\">It’s completely customizable and it can be used for almost anything as it has a large online community for support. It is also a great way to quickly get websites up and running. So in this article we will show you some simple steps on how to setup and start using WordPress.</p><p style=\"margin-left:0px;\">For this example we will be using CentOS 7 as a base operating system with basic LAMP Stack environment installed on the cloud/server, that will almost cover all the prerequisites with the required PHP libraries. You can check out our tutorial on <a href=\"https://vexxhost.com/resources/tutorials/how-to-setup-lamp-stack-on-centos-7/\">how to setup a LAMP stack on CentOS 7</a>.</p><h2 style=\"margin-left:0px;\">System Update</h2><p style=\"margin-left:0px;\">Before starting the installation, make sure that your system is up-to-date with the required updates and missing patches. The fully qualified domain name should be configured and you’ll need root access or super user privileges to process the installation and configuration.</p><p style=\"margin-left:0px;\">You can update your operating system by executing the following linux command.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# yum update\n</code></pre><h2 style=\"margin-left:0px;\">Database Setup for WordPress</h2><p style=\"margin-left:0px;\">Now we need to setup a separate database that will only be used for WordPress, with all it’s own user privileges.</p><p style=\"margin-left:0px;\">Then login to your MySQL root user with following command, by providing the root user and password to start preparing its database.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# mysql –u root -p\n</code></pre><h3>Creating a new Database</h3><p style=\"margin-left:0px;\">When you are logged in to your database server, it’s simple to create a new database using the following command on MariaDB.</p><pre><code class=\"language-plaintext\">MariaDB [(none)]&gt; create database wordpress;\nQuery OK, 1 row affected (0.00 sec)\n</code></pre><h3>Creating a new User</h3><p style=\"margin-left:0px;\">Creating a new user is very simple by using the following command.</p><pre><code class=\"language-plaintext\">MariaDB [(none)]&gt; CREATE USER wpuser@localhost IDENTIFIED BY 'wp123';\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre><h3>Assigning Privileges</h3><p style=\"margin-left:0px;\">Once you’ve already created the new database and user, we will now need to grant access to the user that was created to manage the databases.<br>Access privileges can be assigned to a new user by using following the command.</p><pre><code class=\"language-plaintext\">MariaDB [(none)]&gt; GRANT ALL ON wordpress.* TO wpuser@localhost IDENTIFIED BY 'wp123';\nQuery OK, 0 rows affected (0.00 sec)\n</code></pre><p style=\"margin-left:0px;\">Now flush the changes that you’ve recently made to make them available to the current MariaDB process, afterwards execute the exit command to log out from MariaDB to go back to the shell’s main screen.</p><pre><code class=\"language-plaintext\">MariaDB [(none)]&gt; FLUSH PRIVILEGES;\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]&gt; exit\nBye\n</code></pre><h2 style=\"margin-left:0px;\">Installing WordPress</h2><p style=\"margin-left:0px;\">We are now ready to download and install WordPress into the document root directory of our web server. Download the latest version of WordPress by typing below command.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# wget https://wordpress.org/latest.tar.gz\n[root@centos-7 ~]# ls latest.tar.gz\n</code></pre><p style=\"margin-left:0px;\">We will be extracting the downloaded file into the document root directory of our Apache web server. To do this you’ll need to use the following command to extract the archive.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# tar -zxvf latest.tar.gz -C /nas/content/live/vexxhost/\n</code></pre><p style=\"margin-left:0px;\">Now we have a new WordPress directory into the web server’s document root directory.</p><p style=\"margin-left:0px;\">The next step is to assign it with an apache user and group to the server as a web directory. We will now change the ownership of the WordPress directory using the command.</p><pre><code class=\"language-plaintext\">[root@centos-7 ~]# ls /nas/content/live/vexxhost/wordpress\n[root@centos-7 ~]# chown -R apache:apache /nas/content/live/vexxhost/*\n</code></pre><h2 style=\"margin-left:0px;\">Configuring WordPress</h2><p style=\"margin-left:0px;\">In this step we will configure the main configuration file of WordPress, where we need to configure it’s basic parameters so that it can be connected with the database and user.</p><p style=\"margin-left:0px;\">So prior to making any changes to the configuration file, we need to rename it as wp-config.php. To do that let’s leave a sample file as it is and copy its contents into original configuration file.</p><pre><code class=\"language-plaintext\">[root@centos-7 wordpress]# cp wp-config-sample.php wp-config.php\n</code></pre><p style=\"margin-left:0px;\">Now open it using any of your favourite editor, to make any changes in the WordPress configuration file.</p><pre><code class=\"language-plaintext\">[root@centos-7 wordpress]# vim wp-config.php\n</code></pre><p style=\"margin-left:0px;\">Here are the values that we need to update according to our previous database and user’s setup.</p><pre><code class=\"language-plaintext\">// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for WordPress */\ndefine('DB_NAME', 'database_name_here');\n\n/** MySQL database username */\ndefine('DB_USER', 'username_here');\n\n/** MySQL database password */\ndefine('DB_PASSWORD', 'password_here');\n\n/** MySQL hostname */\ndefine('DB_HOST', 'localhost');\n\n/** Database Charset to use in creating database tables. */\ndefine('DB_CHARSET', 'utf8');\n\n/** The Database Collate type. Don't change this if in doubt. */\ndefine('DB_COLLATE', '');\n</code></pre><p style=\"margin-left:0px;\">As per our database setup, we will update these records as shown below and then save it with wq! To finish configuration settings.</p><pre><code class=\"language-plaintext\">define('DB_NAME', 'wordpress');\ndefine('DB_USER', 'wpuser');\ndefine('DB_PASSWORD', 'wp123');\n</code></pre><h2 style=\"margin-left:0px;\">WordPress Web Interface Installation</h2><p style=\"margin-left:0px;\">Most of our server side settings and configurations are done. Finally we need to complete a short web interface process to finalize the setup.</p><p style=\"margin-left:0px;\">Open your favorite web browser and access the WordPress web directory in your web browser using your server IP or FQDN like.</p><p style=\"margin-left:0px;\">http://servers_ip_address/wordpress/</p><p style=\"margin-left:0px;\">You will be redirected towards the web installation process for your WordPress.<br>Let’s choose your language settings and click <i>Continue</i> to move to the next step.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081419/u_Ypjq53_da02eb8510.png\"></figure><p style=\"margin-left:0px;\">In the next step, fill out the required information in the fields and after doing it click “Install WordPress”.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081436/gz_W8k_LY_6e3304353d.png\"></figure><p style=\"margin-left:0px;\">Greetings!, You are now ready to use WordPress. All you need to do is type in your login details to start.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081453/SC_623_Sv_c2dbc3c32b.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">We have successfully installed and configured WordPress on our CentOS 7 cloud instance. You can now install the plug-in and themes that you want to have.<br>Also there are a lot of free plug-ins and themes developed by WordPress community.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:18:15.526Z","created_at":"2021-03-30T05:18:11.623Z","updated_at":"2021-03-30T05:18:15.814Z","PostSEO":{"id":520,"GoogleSEO":{"id":511,"Title":"How to install & configure WordPress 4.2.2 on CentOS 7 - VEXXHOST","Description":"WordPress is an open source tool and a content management system written in PHP. It’s one of the easiest and powerful website creation tool for blogging."},"FacebookSEO":{"id":507,"Title":"How to install & configure WordPress 4.2.2 on CentOS 7 - VEXXHOST","Url":null,"Description":"WordPress is an open source tool and a content management system written in PHP. It’s one of the easiest and powerful website creation tool for blogging.","SiteName":"VEXXHOST","Image":{"id":641,"name":"WordPress-4.2-2-1-800x377.png","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081387/small_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"small_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"small_WordPress-4.2-2-1-800x377.png","path":null,"size":331.32,"width":500,"height":236,"provider_metadata":{"public_id":"small_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081387/medium_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"medium_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"medium_WordPress-4.2-2-1-800x377.png","path":null,"size":760.81,"width":750,"height":353,"provider_metadata":{"public_id":"medium_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081385/thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"thumbnail_WordPress-4.2-2-1-800x377.png","path":null,"size":77.08,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}}},"hash":"Word_Press_4_2_2_1_800x377_83239d36fe","ext":".png","mime":"image/png","size":691.85,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081385/Word_Press_4_2_2_1_800x377_83239d36fe.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"},"created_at":"2021-03-30T05:16:28.210Z","updated_at":"2021-03-30T05:16:28.223Z"}},"TwitterSEO":{"id":507,"Description":"WordPress is an open source tool and a content management system written in PHP. It’s one of the easiest and powerful website creation tool for blogging.","Title":"How to install & configure WordPress 4.2.2 on CentOS 7 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":641,"name":"WordPress-4.2-2-1-800x377.png","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081387/small_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"small_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"small_WordPress-4.2-2-1-800x377.png","path":null,"size":331.32,"width":500,"height":236,"provider_metadata":{"public_id":"small_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081387/medium_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"medium_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"medium_WordPress-4.2-2-1-800x377.png","path":null,"size":760.81,"width":750,"height":353,"provider_metadata":{"public_id":"medium_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081385/thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"thumbnail_WordPress-4.2-2-1-800x377.png","path":null,"size":77.08,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}}},"hash":"Word_Press_4_2_2_1_800x377_83239d36fe","ext":".png","mime":"image/png","size":691.85,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081385/Word_Press_4_2_2_1_800x377_83239d36fe.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"},"created_at":"2021-03-30T05:16:28.210Z","updated_at":"2021-03-30T05:16:28.223Z"}}},"LinkToResource":{"id":438,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":641,"name":"WordPress-4.2-2-1-800x377.png","alternativeText":"","caption":"","width":800,"height":377,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081387/small_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"small_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"small_WordPress-4.2-2-1-800x377.png","path":null,"size":331.32,"width":500,"height":236,"provider_metadata":{"public_id":"small_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081387/medium_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"medium_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"medium_WordPress-4.2-2-1-800x377.png","path":null,"size":760.81,"width":750,"height":353,"provider_metadata":{"public_id":"medium_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081385/thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe.png","hash":"thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe","mime":"image/png","name":"thumbnail_WordPress-4.2-2-1-800x377.png","path":null,"size":77.08,"width":245,"height":115,"provider_metadata":{"public_id":"thumbnail_Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"}}},"hash":"Word_Press_4_2_2_1_800x377_83239d36fe","ext":".png","mime":"image/png","size":691.85,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081385/Word_Press_4_2_2_1_800x377_83239d36fe.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Word_Press_4_2_2_1_800x377_83239d36fe","resource_type":"image"},"created_at":"2021-03-30T05:16:28.210Z","updated_at":"2021-03-30T05:16:28.223Z"},"TextContent":"WordPress is an open source tool and a content management system written in PHP. It’s one of the easiest and powerful website creation tool for blogging.It’s completely customizable and it can be used for almost anything as it has a large online community for support. It is also a great way to quickly get websites up and running. So in this article we will show you some simple steps on how to setup and start using WordPress.For this example we will be using CentOS 7 as a base operating system with basic LAMP Stack environment installed on the cloud/server, that will almost cover all the prerequisites with the required PHP libraries. You can check out our tutorial on how to setup a LAMP stack on CentOS 7.System UpdateBefore starting the installation, make sure that your system is up-to-date with the required updates and missing patches. The fully qualified domain name should be configured and you’ll need root access or super user privileges to process the installation and configuration.You can update your operating system by executing the following linux command.[root@centos-7 ~]# yum update\nDatabase Setup for WordPressNow we need to setup a separate database that will only be used for WordPress, with all it’s own user privileges.Then login to your MySQL root user with following command, by providing the root user and password to start preparing its database.[root@centos-7 ~]# mysql –u root -p\nCreating a new DatabaseWhen you are logged in to your database server, it’s simple to create a new database using the following command on MariaDB.MariaDB [(none)]> create database wordpress;\nQuery OK, 1 row affected (0.00 sec)\nCreating a new UserCreating a new user is very simple by using the following command.MariaDB [(none)]> CREATE USER wpuser@localhost IDENTIFIED BY 'wp123';\nQuery OK, 0 rows affected (0.00 sec)\nAssigning PrivilegesOnce you’ve already created the new database and user, we will now need to grant access to the user that was created to manage the databases.Access privileges can be assigned to a new user by using following the command.MariaDB [(none)]> GRANT ALL ON wordpress.* TO wpuser@localhost IDENTIFIED BY 'wp123';\nQuery OK, 0 rows affected (0.00 sec)\nNow flush the changes that you’ve recently made to make them available to the current MariaDB process, afterwards execute the exit command to log out from MariaDB to go back to the shell’s main screen.MariaDB [(none)]> FLUSH PRIVILEGES;\nQuery OK, 0 rows affected (0.00 sec)\nMariaDB [(none)]> exit\nBye\nInstalling WordPressWe are now ready to download and install WordPress into the document root directory of our web server. Download the latest version of WordPress by typing below command.[root@centos-7 ~]# wget https://wordpress.org/latest.tar.gz\n[root@centos-7 ~]# ls latest.tar.gz\nWe will be extracting the downloaded file into the document root directory of our Apache web server. To do this you’ll need to use the following command to extract the archive.[root@centos-7 ~]# tar -zxvf latest.tar.gz -C /nas/content/live/vexxhost/\nNow we have a new WordPress directory into the web server’s document root directory.The next step is to assign it with an apache user and group to the server as a web directory. We will now change the ownership of the WordPress directory using the command.[root@centos-7 ~]# ls /nas/content/live/vexxhost/wordpress\n[root@centos-7 ~]# chown -R apache:apache /nas/content/live/vexxhost/*\nConfiguring WordPressIn this step we will configure the main configuration file of WordPress, where we need to configure it’s basic parameters so that it can be connected with the database and user.So prior to making any changes to the configuration file, we need to rename it as wp-config.php. To do that let’s leave a sample file as it is and copy its contents into original configuration file.[root@centos-7 wordpress]# cp wp-config-sample.php wp-config.php\nNow open it using any of your favourite editor, to make any changes in the WordPress configuration file.[root@centos-7 wordpress]# vim wp-config.php\nHere are the values that we need to update according to our previous database and user’s setup.// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for WordPress */\ndefine('DB_NAME', 'database_name_here');\n\n/** MySQL database username */\ndefine('DB_USER', 'username_here');\n\n/** MySQL database password */\ndefine('DB_PASSWORD', 'password_here');\n\n/** MySQL hostname */\ndefine('DB_HOST', 'localhost');\n\n/** Database Charset to use in creating database tables. */\ndefine('DB_CHARSET', 'utf8');\n\n/** The Database Collate type. Don't change this if in doubt. */\ndefine('DB_COLLATE', '');\nAs per our database setup, we will update these records as shown below and then save it with wq! To finish configuration settings.define('DB_NAME', 'wordpress');\ndefine('DB_USER', 'wpuser');\ndefine('DB_PASSWORD', 'wp123');\nWordPress Web Interface InstallationMost of our server side settings and configurations are done. Finally we need to complete a short web interface process to finalize the setup.Open your favorite web browser and access the WordPress web directory in your web browser using your server IP or FQDN like.http://servers_ip_address/wordpress/You will be redirected towards the web installation process for your WordPress.Let’s choose your language settings and click Continue to move to the next step.In the next step, fill out the required information in the fields and after doing it click “Install WordPress”.Greetings!, You are now ready to use WordPress. All you need to do is type in your login details to start.ConclusionWe have successfully installed and configured WordPress on our CentOS 7 cloud instance. You can now install the plug-in and themes that you want to have.Also there are a lot of free plug-ins and themes developed by WordPress community."},{"id":47,"Title":"How to setup HHVM server on Ubuntu 14.04","Slug":"resources/tutorials/how-to-setup-hhvm-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">HipHop Virtual Machine was developed and open sourced by Facebook. It’s an open source virtual machine designed for executing programs written in Hack and PHP but it’s not a replacement for PHP. HHVM uses a just-in-time (JIT) compilation approach to achieve superior performance while maintaining the development flexibility that PHP provides. Facebook developed HHVM because the regular Zend+Apache combination isn’t as efficient to serve large applications built in PHP.</p><p style=\"margin-left:0px;\">The advantage of HHVM is an increase in web request throughput and reduction in memory consumption compared to traditional PHP hosting. As a process virtual machine that provides the execution environment, HHVM has the ability to use live type information to produce more efficient&nbsp;native code, leading to higher web server&nbsp;throughput&nbsp;and lower&nbsp;latency.</p><h2 style=\"margin-left:0px;\">Base Environment</h2><p style=\"margin-left:0px;\">In this tutorial we are going to setup HHVM under following set of resources on our cloud host.</p><ul><li>Operating System: Ubuntu 14.04.2 LTS</li><li>Virtual CPUs: 4 cores</li><li>Memory (RAM): 1 GB</li><li>Disk Space: 40 GB</li></ul><p style=\"margin-left:0px;\">HVM doesn’t support 32 bit operating systems, so you must be running a 64-bit OS to compile &amp; install HHVM.</p><h3>System Update</h3><p style=\"margin-left:0px;\">Make sure that you have super user privileges to use sudo or root user and your system must be updated with latest updates otherwise we might get errors during the setup.</p><p style=\"margin-left:0px;\">Let’s run the following commands to update and then upgrade your Ubuntu Operating system.</p><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# apt-get update\nroot@ubuntu-hhvm:~# apt-get upgrade\n</code></pre><h2 style=\"margin-left:0px;\">Installing HHVM</h2><p style=\"margin-left:0px;\">The installation of HHVM is a very simple process that can be done in different ways. We are going to install it from its prebuilt packages for Ubuntu 14.04 (amd64) by executing following set of commands.</p><h3>Add apt Repository</h3><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# apt-get install software-properties-common\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nsoftware-properties-common is already the newest version.\n0 upgraded, 0 newly installed, 0 to remove and 52 not upgraded.\nroot@ubuntu-hhvm:~#\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081545/q6xn_Mi7_41041b5a00.png\"></figure><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0x5a16e7281be7a449\nroot@ubuntu-hhvm:~# add-apt-repository \"deb http://dl.hhvm.com/ubuntu $(lsb_release -sc) main\"\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081561/Jdl_Gc_FH_4dc12ae319.png\"></figure><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# apt-get update\nroot@ubuntu-hhvm:~# apt-get install hhvm\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081577/Wh_FUT_3_B_1d6eb99647.png\"></figure><p style=\"margin-left:0px;\">Once the HHVM installation completes we will have the following output and need to follow the instructions for running PHP web scripts with HHVM</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081597/p_J0_X2b6_5f1b552ea3.png\"></figure><h2 style=\"margin-left:0px;\">HHVM Install Confirmation</h2><p style=\"margin-left:0px;\">HHVM should have been install with above commands, to make sure its installation we can check it by following commands.</p><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# hhvm --version\nHipHop VM 3.8.0 (rel)\nCompiler: tags/HHVM-3.8.0-0-gbb32f8d645b28561d8491870c44730b9b3f08d35\nRepo schema: 74bee5d310450724cfd49245fd6c2e1e4323b10a\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081613/p_O_Br6_Md_00ba29936e.png\"></figure><p style=\"margin-left:0px;\">If you able to get the version number in result of above command as shown then its means that we have successfully installed HHVM on Ubuntu.</p><h2 style=\"margin-left:0px;\">Testing HHVM</h2><p style=\"margin-left:0px;\">Create a new file PHP script file with some text in it like “Hello World This is Test” to test it from the command line using HHVM.</p><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# vim test.php\n</code></pre><p style=\"margin-left:0px;\">Press “ i ” to change the editor into insertion mode and write the test script.</p><pre><code class=\"language-plaintext\">&lt;?\necho \"Hello World This is Test\";\n?&gt;\n</code></pre><p style=\"margin-left:0px;\">Now press “Esc” and write quit the operation to save changes as.</p><pre><code class=\"language-plaintext\">:wq!\n</code></pre><p style=\"margin-left:0px;\">Now, execute the PHP script and its output should be like the same text that we inserted in it.</p><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# hhvm test.php\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081657/Cd_S5_XPF_e1579c3281.png\"></figure><h2 style=\"margin-left:0px;\">Using HHVM with Apache or Nginx</h2><p style=\"margin-left:0px;\">To start using HHVM with our default web browser we need to execute the following command in case of Apache Web server.</p><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# /usr/share/hhvm/install_fastcgi.sh\n</code></pre><p style=\"margin-left:0px;\">The executed command will check apache server is installed or not then enable some modules and restart Apache web server services.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081678/yp2_QRH_7_cbf0db8df9.png\"></figure><h3>Testing HHVM with PHP Script</h3><p style=\"margin-left:0px;\">Stepping forward now we make sure the installed HHVM setup is working fine with Apahe/Nginx PHP scripts. To do so let’s create a new php script file into the document root directory of your web server that /var/www in Apache and /usr/share/nginx/html if you are using Nginx.</p><pre><code class=\"language-plaintext\">root@ubuntu-hhvm:~# cd /var/www/\nroot@ubuntu-hhvm:/var/www# vim test.php\n</code></pre><p style=\"margin-left:0px;\">Add the following php script to this file and then save changes.</p><pre><code class=\"language-plaintext\">&lt;?php\necho defined('HHVM_VERSION') ? 'Great! You are Using HHVM' : 'Sorry! Not using HHVM';\n?&gt;\n</code></pre><p style=\"margin-left:0px;\">Then Open your favorite web browser and access this file by giving it location path on web like below.</p><pre><code class=\"language-plaintext\">http://your_servers_ip/test.php\n</code></pre><p style=\"margin-left:0px;\">The output should be like this Great! You are Using HHVM and you get the output like 'Sorry! Not using HHVM then its mean your HHVM is not functioning.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081696/d3_VKC_Ib_7213cbb3ea.png\"></figure><p style=\"margin-left:0px;\">Awesome! Our output shows that our HHVM server setup is perfect and can used with your web browser.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">In this tutorial we learn about HHVM server’s installation and it’s configuration on Ubuntu to serve our PHP based websites like Facebook to serve more users with less system resources. If face any difficulty during its setup don’t hesitate to leave your valuable comments, we will get back to you.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:22:23.122Z","created_at":"2021-03-30T05:22:18.138Z","updated_at":"2021-03-30T05:22:23.907Z","PostSEO":{"id":521,"GoogleSEO":{"id":512,"Title":"How to setup HHVM server on Ubuntu 14.04 - VEXXHOST","Description":"HipHop Virtual Machine was developed and open sourced by Facebook. It’s an open source virtual machine designed for executing programs written in Hack and"},"FacebookSEO":{"id":508,"Title":"How to setup HHVM server on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"HipHop Virtual Machine was developed and open sourced by Facebook. It’s an open source virtual machine designed for executing programs written in Hack and","SiteName":"VEXXHOST","Image":{"id":645,"name":"How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081517/small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"small_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":88.11,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081517/medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"medium_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":194.58,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081515/thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"thumbnail_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":28.39,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}}},"hash":"How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","ext":".png","mime":"image/png","size":158.65,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081514/How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"},"created_at":"2021-03-30T05:18:38.043Z","updated_at":"2021-03-30T05:18:38.055Z"}},"TwitterSEO":{"id":508,"Description":"HipHop Virtual Machine was developed and open sourced by Facebook. It’s an open source virtual machine designed for executing programs written in Hack and","Title":"How to setup HHVM server on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":645,"name":"How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081517/small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"small_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":88.11,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081517/medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"medium_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":194.58,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081515/thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"thumbnail_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":28.39,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}}},"hash":"How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","ext":".png","mime":"image/png","size":158.65,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081514/How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"},"created_at":"2021-03-30T05:18:38.043Z","updated_at":"2021-03-30T05:18:38.055Z"}}},"LinkToResource":{"id":439,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":645,"name":"How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081517/small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"small_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":88.11,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081517/medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"medium_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":194.58,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081515/thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","hash":"thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","mime":"image/png","name":"thumbnail_How-to-setup-HHVM-server-on-Ubuntu-14.042-800x400.png","path":null,"size":28.39,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"}}},"hash":"How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","ext":".png","mime":"image/png","size":158.65,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081514/How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_setup_HHVM_server_on_Ubuntu_14_042_800x400_39389592ff","resource_type":"image"},"created_at":"2021-03-30T05:18:38.043Z","updated_at":"2021-03-30T05:18:38.055Z"},"TextContent":"HipHop Virtual Machine was developed and open sourced by Facebook. It’s an open source virtual machine designed for executing programs written in Hack and PHP but it’s not a replacement for PHP. HHVM uses a just-in-time (JIT) compilation approach to achieve superior performance while maintaining the development flexibility that PHP provides. Facebook developed HHVM because the regular Zend+Apache combination isn’t as efficient to serve large applications built in PHP.The advantage of HHVM is an increase in web request throughput and reduction in memory consumption compared to traditional PHP hosting. As a process virtual machine that provides the execution environment, HHVM has the ability to use live type information to produce more efficient native code, leading to higher web server throughput and lower latency.Base EnvironmentIn this tutorial we are going to setup HHVM under following set of resources on our cloud host.Operating System: Ubuntu 14.04.2 LTSVirtual CPUs: 4 coresMemory (RAM): 1 GBDisk Space: 40 GBHVM doesn’t support 32 bit operating systems, so you must be running a 64-bit OS to compile & install HHVM.System UpdateMake sure that you have super user privileges to use sudo or root user and your system must be updated with latest updates otherwise we might get errors during the setup.Let’s run the following commands to update and then upgrade your Ubuntu Operating system.root@ubuntu-hhvm:~# apt-get update\nroot@ubuntu-hhvm:~# apt-get upgrade\nInstalling HHVMThe installation of HHVM is a very simple process that can be done in different ways. We are going to install it from its prebuilt packages for Ubuntu 14.04 (amd64) by executing following set of commands.Add apt Repositoryroot@ubuntu-hhvm:~# apt-get install software-properties-common\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nsoftware-properties-common is already the newest version.\n0 upgraded, 0 newly installed, 0 to remove and 52 not upgraded.\nroot@ubuntu-hhvm:~#\nroot@ubuntu-hhvm:~# apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0x5a16e7281be7a449\nroot@ubuntu-hhvm:~# add-apt-repository \"deb http://dl.hhvm.com/ubuntu $(lsb_release -sc) main\"\nroot@ubuntu-hhvm:~# apt-get update\nroot@ubuntu-hhvm:~# apt-get install hhvm\nOnce the HHVM installation completes we will have the following output and need to follow the instructions for running PHP web scripts with HHVMHHVM Install ConfirmationHHVM should have been install with above commands, to make sure its installation we can check it by following commands.root@ubuntu-hhvm:~# hhvm --version\nHipHop VM 3.8.0 (rel)\nCompiler: tags/HHVM-3.8.0-0-gbb32f8d645b28561d8491870c44730b9b3f08d35\nRepo schema: 74bee5d310450724cfd49245fd6c2e1e4323b10a\nIf you able to get the version number in result of above command as shown then its means that we have successfully installed HHVM on Ubuntu.Testing HHVMCreate a new file PHP script file with some text in it like “Hello World This is Test” to test it from the command line using HHVM.root@ubuntu-hhvm:~# vim test.php\nPress “ i ” to change the editor into insertion mode and write the test script.<?\necho \"Hello World This is Test\";\n?>\nNow press “Esc” and write quit the operation to save changes as.:wq!\nNow, execute the PHP script and its output should be like the same text that we inserted in it.root@ubuntu-hhvm:~# hhvm test.php\nUsing HHVM with Apache or NginxTo start using HHVM with our default web browser we need to execute the following command in case of Apache Web server.root@ubuntu-hhvm:~# /usr/share/hhvm/install_fastcgi.sh\nThe executed command will check apache server is installed or not then enable some modules and restart Apache web server services.Testing HHVM with PHP ScriptStepping forward now we make sure the installed HHVM setup is working fine with Apahe/Nginx PHP scripts. To do so let’s create a new php script file into the document root directory of your web server that /var/www in Apache and /usr/share/nginx/html if you are using Nginx.root@ubuntu-hhvm:~# cd /var/www/\nroot@ubuntu-hhvm:/var/www# vim test.php\nAdd the following php script to this file and then save changes.<?php\necho defined('HHVM_VERSION') ? 'Great! You are Using HHVM' : 'Sorry! Not using HHVM';\n?>\nThen Open your favorite web browser and access this file by giving it location path on web like below.http://your_servers_ip/test.php\nThe output should be like this Great! You are Using HHVM and you get the output like 'Sorry! Not using HHVM then its mean your HHVM is not functioning.Awesome! Our output shows that our HHVM server setup is perfect and can used with your web browser.ConclusionIn this tutorial we learn about HHVM server’s installation and it’s configuration on Ubuntu to serve our PHP based websites like Facebook to serve more users with less system resources. If face any difficulty during its setup don’t hesitate to leave your valuable comments, we will get back to you."},{"id":54,"Title":"How To Deploy a Clojure Web Application on Ubuntu 14.04","Slug":"resources/tutorials/how-to-deploy-a-clojure-web-application-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Clojure is a modern, functional programming for the JVM and a dialect of the Lisp (LISt Processing) that focuses on concurrent programming found in operating systems. Clojure is a functional programming language that features a concise syntax, elegant concurrency support and frictionless Java integration. It provides many built-in tools for using immutable objects that runs on the Java Virtual Machines designed to be a fantastic language in it’s own right, and not necessarily a glue language.You can build systems from the ground up in Clojure without ever touching Java code directly. Clojure is successfully used in industry by companies such as Walmart and Puppet Lab and other large software companies.</p><p style=\"margin-left:0px;\">In this article we will be showing you the complete deployment steps of Clojure Web Application on Ubuntu 14.04.</p><h2 style=\"margin-left:0px;\">System Preparation</h2><p style=\"margin-left:0px;\">Our first step is to prepare the system with its basic requirements before starting the application deployment. Let’s follow the basic instructions to complete the basic system requirements.</p><h2 style=\"margin-left:0px;\">System Update</h2><p style=\"margin-left:0px;\">Login to your Ubuntu server using the root or sudo user credentials and run the command below to update your Operating system.</p><p># apt-get update</p><h2 style=\"margin-left:0px;\">SUDO User</h2><p style=\"margin-left:0px;\">It has always been a good practice to deploy a new application using the non-root user. To create a new sudo user on Ubuntu with a root user you can use the following steps to create new user and the assign ‘sudo’ rights.</p><p># adduser vxx</p><p style=\"margin-left:0px;\">You will be asked to provide the password and user information as show in the image.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083291/1_2_c3753073a7.png\"></figure><p style=\"margin-left:0px;\">For assigning the ‘sudo’ rights to the newly created run the ‘visudo’ command and add the following line in it.</p><p style=\"margin-left:0px;\"># Allow members of group sudo to execute any command</p><p>%vxx &nbsp; &nbsp;ALL=(ALL:ALL) ALL</p><p style=\"margin-left:0px;\">Hit the ‘Ctrl+x’ key to save and close the file folled by ‘Y’ and Enter keys.</p><h2 style=\"margin-left:0px;\">Installing Required Packages</h2><p style=\"margin-left:0px;\">The deployment of Clojure web application mainly depends upon the three software packages that is Java, Supervisor, and Nginx. So, these must be installed on your Ubuntu system for the success of this deployment.</p><p style=\"margin-left:0px;\">We will be using the sudo user for the next steps, let’s switch to the newly created sudo user and then run the command below to install the required packages.</p><p>$ sudo apt-get install openjdk-7-jre-headless$ sudo apt-get install nginx supervisor</p><h2 style=\"margin-left:0px;\">Cloning Sample Clojure App</h2><p style=\"margin-left:0px;\">We are going to use an example of Clojure project to deploy using its available git repository. You can download or directly clone its repository using ‘git clone’ command. If you are out of ‘git’ package then run the commands below to install the git package followed by the command to clone the sample Clojure repository.</p><p>$ sudo apt-get install git$ git clone https://github.com/do-community/do-clojure-web.git</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083306/2_1_4a7568465f.png\"></figure><p style=\"margin-left:0px;\">Now we need to compile and run this sample project by using the “Leiningen”, which a dependency management and build automation tool for Clojure apps that makes this easy for the JVM based code.</p><p style=\"margin-left:0px;\">So, we need to setup the Leiningen on our Ubuntu server by downloading its installation script using the below ‘Curl’ command.</p><p>$ sudo curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -o /usr/local/bin/lein</p><p style=\"margin-left:0px;\">Give the executable permissions to the installation script using the command below.</p><p>$ sudo chmod a+x /usr/local/bin/lein</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083331/3_1_6ba5d26f26.png\"></figure><p style=\"margin-left:0px;\">Now run the command as shown below to compile your sample clojure project with ‘lein’ on your Ubuntu server within its directory.</p><p>$ cd do-clojure-web/$ lein uberjar&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083348/4_1_bfa0d552f5.png\"></figure><h2 style=\"margin-left:0px;\">Setup Clojure App Environment</h2><p style=\"margin-left:0px;\">Create the directory structure to place your Clojure web application and its log files in it as shown.</p><p>$ sudo mkdir -p /var/www/do-clojure-web/app/db /var/www/logs</p><p style=\"margin-left:0px;\">Then copy your Clojure application file and database file into the directories we have created above.</p><p>$ sudo cp do-clojure-web/target/do-clojure-web-0.1.0-standalone.jar /var/www/do-clojure-web/app/$ sudo cp do-clojure-web/db/do-clojure-web.h2.db /var/www/do-clojure-web/app/db/</p><p style=\"margin-left:0px;\">Change the ownership of application path to ‘www-data’ so that it can write to our built-in database using the www-data user on our system.</p><p>$ sudo chown -R www-data /var/www/do-clojure-web/</p><p style=\"margin-left:0px;\">Then change your directory to the Clojure application directory and create a symbolink of current clojure web application to the current running version of the application. So that its can be interrupted by the system after each update.</p><p>$ cd /var/www/do-clojure-web/app/$ sudo ln -s do-clojure-web-0.1.0-standalone.jar do-clojure-web.jar</p><p style=\"margin-left:0px;\">Your clojure application is ready to be used for localhost. Run the command below to make sure that it works fine and then hit ‘Ctrl+c’ key to stop the process at this point.</p><p>$ sudo java -jar do-clojure-web.jar</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083368/5_1_b9ced020ec.png\"></figure><h2 style=\"margin-left:0px;\">Configuring Supervisor for Clojure App</h2><p style=\"margin-left:0px;\">In this step we will be using the Supervisor for managing the Clojure Application service as a best option for running Clojure Application on our Ubuntu server.</p><p style=\"margin-left:0px;\">Let’s create a new file within the Clojure configuration directory using your command line editor, then add the following line in it as shown.</p><p>$ sudo vim /etc/supervisor/conf.d/do-clojure-web.conf[program:do-clojure-web] command=/usr/bin/java -jar do-clojure-web.jar directory=/var/www/do-clojure-web/app user=www-data autostart=true autorestart=true startretries=3 redirect_stderr=true stdout_logfile=/var/www/logs/do-clojure-web.app.log</p><p style=\"margin-left:0px;\">Save and close the file using the ‘:wq!’. The configuration file indicates that the Supervisor service will run our application from within the ‘/var/www/do-clojure-web/app’ directory and will make sure to generate the logs within the the mentioned log file.</p><h2 style=\"margin-left:0px;\">Configuring Nginx as Reverse Proxy</h2><p style=\"margin-left:0px;\">In this last step we will be configuring the Nginx web server to use as a reverse proxy, because the Clojure web application only accepts connections from localhost on port 5000 and we need to provide it external access by using Nginx.</p><p style=\"margin-left:0px;\">Open the default configuration file of Nginx, then add the following lined in it as shown below before the start of ‘server’.</p><p>upstream http_backend { &nbsp; &nbsp;server 127.0.0.1:5000; &nbsp; &nbsp;keepalive 32; }</p><p style=\"margin-left:0px;\">Then comments out the lines all the lines starting from ‘location’ and the add the below lines in it.</p><p>location / { &nbsp; &nbsp; &nbsp; &nbsp;proxy_pass http://http_backend; &nbsp; &nbsp; &nbsp; &nbsp;proxy_http_version 1.1; &nbsp; &nbsp; &nbsp; &nbsp;proxy_set_header Connection \"\"; &nbsp; &nbsp; &nbsp; &nbsp;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &nbsp; &nbsp; &nbsp; &nbsp;proxy_set_header Host $http_host; &nbsp; &nbsp; &nbsp; &nbsp;access_log /var/www/logs/do-clojure-web.access.log; &nbsp; &nbsp; &nbsp; &nbsp;error_log /var/www/logs/do-clojure-web.error.log; &nbsp; &nbsp;}</p><p style=\"margin-left:0px;\">Save and close the file after making these changes. The complete configuration changes would be like the same as shown the below image.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083385/6_1_6aeb8471fe.png\"></figure><h2 style=\"margin-left:0px;\">Start Services:</h2><p style=\"margin-left:0px;\">We need to restart services of Nginx and Supervisor, to do so run the commands as shown below.</p><p>$ sudo service supervisor restart$ sudo service nginx restart</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083406/7_1_2a4285d5d7.png\"></figure><h2 style=\"margin-left:0px;\">Testing Web Access</h2><p style=\"margin-left:0px;\">After successfully starting up services, you need to open up your wbe browser followed by the IP of your localhost server or FQDN. You will be greeted with the home page of Clojure Web application as shown below.</p><p>http://localhost/&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083426/8_1_ccaf7688a3.png\"></figure><p style=\"margin-left:0px;\">Click on the Add a Location button and give the values to ‘x’ and ‘y’ axis then click on the submit location button.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083443/9_1_94f779b25b.png\"></figure><p style=\"margin-left:0px;\">If you want to view all your submitted locations then click on the ‘View All Locations’ button.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083464/10_1_cc9d935e0e.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">We have successfully deployed Clojure web application using a sample Clojure application on Ubuntu 14.04 with supervisor, Nginx and lein. You can deploy your custom applications may be that is a simple website or an application. We hope have got this article much helpful while deployment of Clojure Applications on your Ubuntu server. You can contact us in case of any issue and we will surely get back to you with its solution.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:52:27.028Z","created_at":"2021-03-30T05:52:18.431Z","updated_at":"2021-03-30T05:52:27.328Z","PostSEO":{"id":528,"GoogleSEO":{"id":519,"Title":"How To Deploy a Clojure Web Application on Ubuntu 14.04 - VEXXHOST","Description":"Clojure is a modern, functional programming for the JVM and a dialect of the Lisp (LISt Processing) that focuses on concurrent programming found in"},"FacebookSEO":{"id":515,"Title":"How To Deploy a Clojure Web Application on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Clojure is a modern, functional programming for the JVM and a dialect of the Lisp (LISt Processing) that focuses on concurrent programming found in","SiteName":"VEXXHOST","Image":{"id":706,"name":"All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083261/small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":25.2,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083260/medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":46.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":8.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","ext":".jpg","mime":"image/jpeg","size":50.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"},"created_at":"2021-03-30T05:47:41.329Z","updated_at":"2021-03-30T05:47:41.418Z"}},"TwitterSEO":{"id":515,"Description":"Clojure is a modern, functional programming for the JVM and a dialect of the Lisp (LISt Processing) that focuses on concurrent programming found in","Title":"How To Deploy a Clojure Web Application on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":706,"name":"All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083261/small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":25.2,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083260/medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":46.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":8.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","ext":".jpg","mime":"image/jpeg","size":50.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"},"created_at":"2021-03-30T05:47:41.329Z","updated_at":"2021-03-30T05:47:41.418Z"}}},"LinkToResource":{"id":446,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":706,"name":"All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083261/small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":25.2,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083260/medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":46.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":8.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","ext":".jpg","mime":"image/jpeg","size":50.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"},"created_at":"2021-03-30T05:47:41.329Z","updated_at":"2021-03-30T05:47:41.418Z"},"TextContent":"Clojure is a modern, functional programming for the JVM and a dialect of the Lisp (LISt Processing) that focuses on concurrent programming found in operating systems. Clojure is a functional programming language that features a concise syntax, elegant concurrency support and frictionless Java integration. It provides many built-in tools for using immutable objects that runs on the Java Virtual Machines designed to be a fantastic language in it’s own right, and not necessarily a glue language.You can build systems from the ground up in Clojure without ever touching Java code directly. Clojure is successfully used in industry by companies such as Walmart and Puppet Lab and other large software companies.In this article we will be showing you the complete deployment steps of Clojure Web Application on Ubuntu 14.04.System PreparationOur first step is to prepare the system with its basic requirements before starting the application deployment. Let’s follow the basic instructions to complete the basic system requirements.System UpdateLogin to your Ubuntu server using the root or sudo user credentials and run the command below to update your Operating system.# apt-get updateSUDO UserIt has always been a good practice to deploy a new application using the non-root user. To create a new sudo user on Ubuntu with a root user you can use the following steps to create new user and the assign ‘sudo’ rights.# adduser vxxYou will be asked to provide the password and user information as show in the image.For assigning the ‘sudo’ rights to the newly created run the ‘visudo’ command and add the following line in it.# Allow members of group sudo to execute any command%vxx    ALL=(ALL:ALL) ALLHit the ‘Ctrl+x’ key to save and close the file folled by ‘Y’ and Enter keys.Installing Required PackagesThe deployment of Clojure web application mainly depends upon the three software packages that is Java, Supervisor, and Nginx. So, these must be installed on your Ubuntu system for the success of this deployment.We will be using the sudo user for the next steps, let’s switch to the newly created sudo user and then run the command below to install the required packages.$ sudo apt-get install openjdk-7-jre-headless$ sudo apt-get install nginx supervisorCloning Sample Clojure AppWe are going to use an example of Clojure project to deploy using its available git repository. You can download or directly clone its repository using ‘git clone’ command. If you are out of ‘git’ package then run the commands below to install the git package followed by the command to clone the sample Clojure repository.$ sudo apt-get install git$ git clone https://github.com/do-community/do-clojure-web.gitNow we need to compile and run this sample project by using the “Leiningen”, which a dependency management and build automation tool for Clojure apps that makes this easy for the JVM based code.So, we need to setup the Leiningen on our Ubuntu server by downloading its installation script using the below ‘Curl’ command.$ sudo curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -o /usr/local/bin/leinGive the executable permissions to the installation script using the command below.$ sudo chmod a+x /usr/local/bin/leinNow run the command as shown below to compile your sample clojure project with ‘lein’ on your Ubuntu server within its directory.$ cd do-clojure-web/$ lein uberjar Setup Clojure App EnvironmentCreate the directory structure to place your Clojure web application and its log files in it as shown.$ sudo mkdir -p /var/www/do-clojure-web/app/db /var/www/logsThen copy your Clojure application file and database file into the directories we have created above.$ sudo cp do-clojure-web/target/do-clojure-web-0.1.0-standalone.jar /var/www/do-clojure-web/app/$ sudo cp do-clojure-web/db/do-clojure-web.h2.db /var/www/do-clojure-web/app/db/Change the ownership of application path to ‘www-data’ so that it can write to our built-in database using the www-data user on our system.$ sudo chown -R www-data /var/www/do-clojure-web/Then change your directory to the Clojure application directory and create a symbolink of current clojure web application to the current running version of the application. So that its can be interrupted by the system after each update.$ cd /var/www/do-clojure-web/app/$ sudo ln -s do-clojure-web-0.1.0-standalone.jar do-clojure-web.jarYour clojure application is ready to be used for localhost. Run the command below to make sure that it works fine and then hit ‘Ctrl+c’ key to stop the process at this point.$ sudo java -jar do-clojure-web.jarConfiguring Supervisor for Clojure AppIn this step we will be using the Supervisor for managing the Clojure Application service as a best option for running Clojure Application on our Ubuntu server.Let’s create a new file within the Clojure configuration directory using your command line editor, then add the following line in it as shown.$ sudo vim /etc/supervisor/conf.d/do-clojure-web.conf[program:do-clojure-web] command=/usr/bin/java -jar do-clojure-web.jar directory=/var/www/do-clojure-web/app user=www-data autostart=true autorestart=true startretries=3 redirect_stderr=true stdout_logfile=/var/www/logs/do-clojure-web.app.logSave and close the file using the ‘:wq!’. The configuration file indicates that the Supervisor service will run our application from within the ‘/var/www/do-clojure-web/app’ directory and will make sure to generate the logs within the the mentioned log file.Configuring Nginx as Reverse ProxyIn this last step we will be configuring the Nginx web server to use as a reverse proxy, because the Clojure web application only accepts connections from localhost on port 5000 and we need to provide it external access by using Nginx.Open the default configuration file of Nginx, then add the following lined in it as shown below before the start of ‘server’.upstream http_backend {    server 127.0.0.1:5000;    keepalive 32; }Then comments out the lines all the lines starting from ‘location’ and the add the below lines in it.location / {        proxy_pass http://http_backend;        proxy_http_version 1.1;        proxy_set_header Connection \"\";        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header Host $http_host;        access_log /var/www/logs/do-clojure-web.access.log;        error_log /var/www/logs/do-clojure-web.error.log;    }Save and close the file after making these changes. The complete configuration changes would be like the same as shown the below image.Start Services:We need to restart services of Nginx and Supervisor, to do so run the commands as shown below.$ sudo service supervisor restart$ sudo service nginx restartTesting Web AccessAfter successfully starting up services, you need to open up your wbe browser followed by the IP of your localhost server or FQDN. You will be greeted with the home page of Clojure Web application as shown below.http://localhost/ Click on the Add a Location button and give the values to ‘x’ and ‘y’ axis then click on the submit location button.If you want to view all your submitted locations then click on the ‘View All Locations’ button.ConclusionWe have successfully deployed Clojure web application using a sample Clojure application on Ubuntu 14.04 with supervisor, Nginx and lein. You can deploy your custom applications may be that is a simple website or an application. We hope have got this article much helpful while deployment of Clojure Applications on your Ubuntu server. You can contact us in case of any issue and we will surely get back to you with its solution. Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost."},{"id":48,"Title":"How to use cron jobs for automation on Ubuntu 14.04","Slug":"resources/tutorials/how-to-use-cron-jobs-for-automation-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Cron is one of the most powerful tool in a Linux/Unix based operating systems. A cron job is a Linux utility used for scheduling a task to be executed in the specific time according to its schedule at designated time.</p><p style=\"margin-left:0px;\">Most commonly these are used for automating system administration and maintenance activities like to send out a notice every day about the successful completion of scheduled backups or cleaning /tmp/ directory . There are many other situations when a web application needs certain tasks to run periodically.</p><p style=\"margin-left:0px;\">So, in this article we will guide you about its working mechanism and to show that how easily you can schedule your tasks with Cron jobs. “Cron” itself is a daemon that runs in the background while the schedule of different jobs resides in its configuration file called “crontab” where all the tasks and times are scheduled.</p><h2 style=\"margin-left:0px;\">Starting Cron Service</h2><p style=\"margin-left:0px;\">Almost all Linux distributions comes with pre installed cron by default. In case if its not installed on your machine, you can install it using following command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# apt-get install cron\n</code></pre><p style=\"margin-left:0px;\">Now check the status of cron service, it should be running in the background by default, you can start it with start command if its in stopped state.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# service cron start\nroot@ubuntu-14:~# service cron status \ncron start/running, process 1027\n</code></pre><h2 style=\"margin-left:0px;\">Using Cron Help</h2><p style=\"margin-left:0px;\">Once your cron service is fine you can proceed forward and start using it. For more help about its usage you can check its man pages by executing below commands.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# man crontab\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081792/tj9_Ml_TU_8d8656f787.png\"></figure><p style=\"margin-left:0px;\">The above command will shows the general manuals about crontab help. In order to get more specific information about how to use cron jobs you can also check by using below command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# man 5 crontab\n</code></pre><p style=\"margin-left:0px;\">To exit from the manual simply press q or h about more help to use manuals.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617081980/p_Re86_Fg_1_c7f6f71be9.png\"></figure><h2 style=\"margin-left:0px;\">Crontab Commands Usage</h2><p style=\"margin-left:0px;\">Here we show you some the most important commands that are used for scheduling automated tasks with crontab command.</p><h3>List Cron Jobs</h3><p style=\"margin-left:0px;\">Use the following command to list the scheduled cron jobs for the currently logged in user.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab –l\n</code></pre><p style=\"margin-left:0px;\">In the output command will show you all the list of cron jobs running under this user. If you want to display the cron jobs of another user then we can check that by using following command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab –l –u username\n</code></pre><p style=\"margin-left:0px;\">This will list the cron jobs of your mentioned username.</p><h3>Edit Cron Jobs</h3><p style=\"margin-left:0px;\">To add the new cron job or editing the existing one we will use the following crontab command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab -e\n</code></pre><h3>Remove Cron Jobs</h3><p style=\"margin-left:0px;\">Following command can be used to remove the scheduled cron jobs.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab –r\n</code></pre><p style=\"margin-left:0px;\">This will remove all the cronjobs without asking for confirmation. Use -ir if you want to remove cronjobs interactively.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab -ir\n</code></pre><h2 style=\"margin-left:0px;\">Scheduling tasks with Crontab</h2><p style=\"margin-left:0px;\">Now we start using cron jobs by using its configuration file that is crontab while there are different ways to use cron. If you list /etc directory you will find some directories like cron.daily, cron.hourly, cron.monthly etc. So, if you place your cron script into one of the those directory it will will as per the schedule depending on the name of the directory.</p><h3>Types of Cron Configuration</h3><p style=\"margin-left:0px;\">There are two types of configuration files that are used for scheduling automated tasks.</p><h4>System crontab</h4><p style=\"margin-left:0px;\">These cron jobs are used by system services and critical jobs that requires root level privileges. We can check system-wide crontab in /etc/crontab file.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082000/Xamzvp_N_1527cf921d.png\"></figure><h4>User crontabs</h4><p style=\"margin-left:0px;\">User level cron jobs are separate for each user, so each user can create their own cron jobs using crontab command.<br>We can check or edit user level cron jobs by using below command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab –e\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082016/Jut9_FWM_e71a1c0f97.png\"></figure><p style=\"margin-left:0px;\">After choosing the editor you will be able to configure your new cron jobs here.</p><h2 style=\"margin-left:0px;\">Scheduling Jobs with Crontab</h2><p style=\"margin-left:0px;\">We can schedule cron jobs by using its special syntax. There are also different short hand commands that can be used in crontab file to make administering it with ease.</p><p style=\"margin-left:0px;\">The syntax of crontab entry should be as follow:</p><pre><code class=\"language-plaintext\">* * * * * command to be executed\n- - - - -\n| | | | |\n| | | | ----- Day of week (0 - 7) (Sunday=0 or 7)\n| | | ------- Month (1 - 12)\n| | --------- Day of month (1 - 31)\n| ----------- Hour (0 - 23)\n------------- Minute (0 - 59)\n</code></pre><h2 style=\"margin-left:0px;\">New Cron Job Configuration Example</h2><p style=\"margin-left:0px;\">Now you are familiar with the crontab commands, syntax and the types of cron jobs, now we create few test cron jobs and let’s see how it works. You can schedule any of your daily task by adding it with crontab –e command.</p><h3>Scheduling job to run every minute</h3><p style=\"margin-left:0px;\">In this example we will create a cronjob that will execute the the text “test cron job to execute every minute” every minute and send an email to user@vexxhost.com.</p><p style=\"margin-left:0px;\">Your first is to edit the crontab with below command:</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab –e\n</code></pre><p style=\"margin-left:0px;\">Put the following cronjob script in it and save changes.</p><pre><code class=\"language-plaintext\">SHELL=/bin/bash\nHOME=/\nMAILTO=”user@vexxhost.com”\n#This is a comment\n* * * * * echo 'test cron job to execute every minute'\n:wq!\n</code></pre><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082034/Pr_Ljo_ZY_7c32f407ea.png\"></figure><p style=\"margin-left:0px;\">Once you save the file you will get the output like crontab: installing new crontab . So its mean that you have successfully added a new cron job.</p><h3>Scheduling Cron job at specific time</h3><p style=\"margin-left:0px;\">Now let’s see the scenario that if you want to schedule a cron job to run at specific time like at “7:00 PM” on every Thursday. Then the crontab script would like below.</p><pre><code class=\"language-plaintext\">00 15 * * 4 sh /root/test.sh\n</code></pre><p style=\"margin-left:0px;\">Let’s add the above line in crontab using flooowing command.</p><pre><code class=\"language-plaintext\">root@ubuntu-14:~# crontab -e\ncrontab: installing new crontab\n</code></pre><p style=\"margin-left:0px;\">In the above script “00 15” refers to 3:00 PM while “4” refers to the day “Thursday”.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">At the end of this article you learnt that how easily you can automate your tasks by using crontabs instead of doing that manually with repetitions. You learned about its basic commands and the syntax that will helps you a lot while creating your own cronjobs.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:27:58.431Z","created_at":"2021-03-30T05:27:55.236Z","updated_at":"2021-03-30T05:27:59.407Z","PostSEO":{"id":522,"GoogleSEO":{"id":513,"Title":"How to use cron jobs for automation on Ubuntu 14.04 - VEXXHOST","Description":"Cron is one of the most powerful tool in a Linux/Unix based operating systems. A cron job is a Linux utility used for scheduling a task to be executed in"},"FacebookSEO":{"id":509,"Title":"How to use cron jobs for automation on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Cron is one of the most powerful tool in a Linux/Unix based operating systems. A cron job is a Linux utility used for scheduling a task to be executed in","SiteName":"VEXXHOST","Image":{"id":654,"name":"How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081765/small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"small_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":174.41,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081765/medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"medium_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":390.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081763/thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"thumbnail_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":44.36,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}}},"hash":"How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","ext":".png","mime":"image/png","size":432.3,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081762/How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"},"created_at":"2021-03-30T05:22:46.394Z","updated_at":"2021-03-30T05:22:46.401Z"}},"TwitterSEO":{"id":509,"Description":"Cron is one of the most powerful tool in a Linux/Unix based operating systems. A cron job is a Linux utility used for scheduling a task to be executed in","Title":"How to use cron jobs for automation on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":654,"name":"How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081765/small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"small_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":174.41,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081765/medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"medium_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":390.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081763/thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"thumbnail_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":44.36,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}}},"hash":"How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","ext":".png","mime":"image/png","size":432.3,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081762/How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"},"created_at":"2021-03-30T05:22:46.394Z","updated_at":"2021-03-30T05:22:46.401Z"}}},"LinkToResource":{"id":440,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":654,"name":"How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081765/small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"small_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":174.41,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}},"medium":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081765/medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"medium_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":390.07,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}},"thumbnail":{"ext":".png","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081763/thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","hash":"thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","mime":"image/png","name":"thumbnail_How-to-use-cron-jobs-for-automation-on-Ubuntu-1404-800x400.png","path":null,"size":44.36,"width":245,"height":122,"provider_metadata":{"public_id":"thumbnail_How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"}}},"hash":"How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","ext":".png","mime":"image/png","size":432.3,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617081762/How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0.png","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_use_cron_jobs_for_automation_on_Ubuntu_1404_800x400_4928f51cf0","resource_type":"image"},"created_at":"2021-03-30T05:22:46.394Z","updated_at":"2021-03-30T05:22:46.401Z"},"TextContent":"Cron is one of the most powerful tool in a Linux/Unix based operating systems. A cron job is a Linux utility used for scheduling a task to be executed in the specific time according to its schedule at designated time.Most commonly these are used for automating system administration and maintenance activities like to send out a notice every day about the successful completion of scheduled backups or cleaning /tmp/ directory . There are many other situations when a web application needs certain tasks to run periodically.So, in this article we will guide you about its working mechanism and to show that how easily you can schedule your tasks with Cron jobs. “Cron” itself is a daemon that runs in the background while the schedule of different jobs resides in its configuration file called “crontab” where all the tasks and times are scheduled.Starting Cron ServiceAlmost all Linux distributions comes with pre installed cron by default. In case if its not installed on your machine, you can install it using following command.root@ubuntu-14:~# apt-get install cron\nNow check the status of cron service, it should be running in the background by default, you can start it with start command if its in stopped state.root@ubuntu-14:~# service cron start\nroot@ubuntu-14:~# service cron status \ncron start/running, process 1027\nUsing Cron HelpOnce your cron service is fine you can proceed forward and start using it. For more help about its usage you can check its man pages by executing below commands.root@ubuntu-14:~# man crontab\nThe above command will shows the general manuals about crontab help. In order to get more specific information about how to use cron jobs you can also check by using below command.root@ubuntu-14:~# man 5 crontab\nTo exit from the manual simply press q or h about more help to use manuals.Crontab Commands UsageHere we show you some the most important commands that are used for scheduling automated tasks with crontab command.List Cron JobsUse the following command to list the scheduled cron jobs for the currently logged in user.root@ubuntu-14:~# crontab –l\nIn the output command will show you all the list of cron jobs running under this user. If you want to display the cron jobs of another user then we can check that by using following command.root@ubuntu-14:~# crontab –l –u username\nThis will list the cron jobs of your mentioned username.Edit Cron JobsTo add the new cron job or editing the existing one we will use the following crontab command.root@ubuntu-14:~# crontab -e\nRemove Cron JobsFollowing command can be used to remove the scheduled cron jobs.root@ubuntu-14:~# crontab –r\nThis will remove all the cronjobs without asking for confirmation. Use -ir if you want to remove cronjobs interactively.root@ubuntu-14:~# crontab -ir\nScheduling tasks with CrontabNow we start using cron jobs by using its configuration file that is crontab while there are different ways to use cron. If you list /etc directory you will find some directories like cron.daily, cron.hourly, cron.monthly etc. So, if you place your cron script into one of the those directory it will will as per the schedule depending on the name of the directory.Types of Cron ConfigurationThere are two types of configuration files that are used for scheduling automated tasks.System crontabThese cron jobs are used by system services and critical jobs that requires root level privileges. We can check system-wide crontab in /etc/crontab file.User crontabsUser level cron jobs are separate for each user, so each user can create their own cron jobs using crontab command.We can check or edit user level cron jobs by using below command.root@ubuntu-14:~# crontab –e\nAfter choosing the editor you will be able to configure your new cron jobs here.Scheduling Jobs with CrontabWe can schedule cron jobs by using its special syntax. There are also different short hand commands that can be used in crontab file to make administering it with ease.The syntax of crontab entry should be as follow:* * * * * command to be executed\n- - - - -\n| | | | |\n| | | | ----- Day of week (0 - 7) (Sunday=0 or 7)\n| | | ------- Month (1 - 12)\n| | --------- Day of month (1 - 31)\n| ----------- Hour (0 - 23)\n------------- Minute (0 - 59)\nNew Cron Job Configuration ExampleNow you are familiar with the crontab commands, syntax and the types of cron jobs, now we create few test cron jobs and let’s see how it works. You can schedule any of your daily task by adding it with crontab –e command.Scheduling job to run every minuteIn this example we will create a cronjob that will execute the the text “test cron job to execute every minute” every minute and send an email to user@vexxhost.com.Your first is to edit the crontab with below command:root@ubuntu-14:~# crontab –e\nPut the following cronjob script in it and save changes.SHELL=/bin/bash\nHOME=/\nMAILTO=”user@vexxhost.com”\n#This is a comment\n* * * * * echo 'test cron job to execute every minute'\n:wq!\nOnce you save the file you will get the output like crontab: installing new crontab . So its mean that you have successfully added a new cron job.Scheduling Cron job at specific timeNow let’s see the scenario that if you want to schedule a cron job to run at specific time like at “7:00 PM” on every Thursday. Then the crontab script would like below.00 15 * * 4 sh /root/test.sh\nLet’s add the above line in crontab using flooowing command.root@ubuntu-14:~# crontab -e\ncrontab: installing new crontab\nIn the above script “00 15” refers to 3:00 PM while “4” refers to the day “Thursday”.ConclusionAt the end of this article you learnt that how easily you can automate your tasks by using crontabs instead of doing that manually with repetitions. You learned about its basic commands and the syntax that will helps you a lot while creating your own cronjobs."},{"id":58,"Title":"How To Work with Docker Data Volumes on Ubuntu 14.04","Slug":"resources/tutorials/how-to-work-with-docker-data-volumes-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">A Docker volume permits data to be stored in a container outside of the boot volume but within the root file system. In our previous posts we have launched containers from various images and even deployed few applications using Docker images. Here, we will take a look at Docker Volumes. With Docker Volumes, we are essentially going to look at how to manage data within your Docker containers. The data in any volume can be freely browsed and edited by the host operating system, and standard Unix permissions apply. As the data is stored in a standard file system, it can be backed up, copied or moved in and out by the operating system.</p><p style=\"margin-left:0px;\">In other words, the fundamental thing that we are trying to get over here is to be familiar with creating and using Docker Volumes and separate out the container lifecycle from the data. Ideally, we want to keep these separate so that the data generated is not destroyed or tied to the container lifecycle and can thus be reused. This is done via Volumes, which we will be showing your in this post.</p><h2 style=\"margin-left:0px;\">Prerequisites:</h2><p style=\"margin-left:0px;\">The basic requirements needed in working with Docker Data Volumes is an up to date Ubuntu 14.04 server, a non-root sudo user with Docker package installed on it. You can follow our previous article on how to download and install Docker on Ubuntu 14.04 in detail. Simply login to your Ubuntu server and run the command below to install Docker on Ubuntu.</p><p>$ wget -qO- https://get.docker.com/ | sh</p><p style=\"margin-left:0px;\">After installing Docker, run the command below. Allow your current user to the Docker group.</p><p>$ sudo usermod -aG docker $(whoami)</p><h2 style=\"margin-left:0px;\">Why Docker Data Volumes:</h2><p style=\"margin-left:0px;\">Containers are only short term and once a container is removed, it is gone. So, if you want your applications running inside the container to write to some files/data and then ensure that the data is still present. For e.g. let’s say you are running an application that is generating data and it creates files or writes to a database and so on. Now, even if the container is removed and in the future you launch another container, you would like that data to still be there. In that case we strongly need the Docker Data Volumes to keep the data persistent.</p><h2 style=\"margin-left:0px;\">Working Without Docker Data Volumes:</h2><p style=\"margin-left:0px;\">Let’s follow a practical example of working without a Docker data volume on Ubuntu that will show you how files will be destroyed after installing a new container.</p><p style=\"margin-left:0px;\">Run the command as given below to download and run an Ubuntu image in interactive mode with a terminal from the Docker Registry that will be launching the standard ‘bash’ shell of Ubuntu container inside it as shown in the image.</p><p>$ docker run -t -i ubuntu /bin/bash</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084334/1_3_e8e72401e8.png\"></figure><p style=\"margin-left:0px;\">Create a test file with some random text in it. Execute the exit command in your current shell. You will be returned back to your original shell as shown below. Then repeat the commands to see if the file you created has disappeared.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084349/2_3_90e7eff773.png\"></figure><h2 style=\"margin-left:0px;\">Types of Docker Data Volume:</h2><p style=\"margin-left:0px;\">Docker data volumes can used in the following scenarios, where the first one is keeping your data persistent even though the container gets restarted. You just want the data to hang around even if you shut down or restart the container. So it is often best to let Docker manage where the data gets stored.<br>In the second scenario, we will be sharing the data between the host filesystem and the Docker container. The third, and last type of using the Docker data volume, you can share the data with other Docker containers.</p><h2 style=\"margin-left:0px;\">1- Persistent Data Container:</h2><p style=\"margin-left:0px;\">Here we will be showing you an example of keeping your data persistent using the Docker data volume. So, let’s create a new data container to store your volume within your ‘/tmp’ directory using the command below.</p><p>$ docker create -v /tmp --name newdatacontainer ubuntu</p><p style=\"margin-left:0px;\">Now start your Ubuntu image by choosing the volume from your newly created data container.</p><p>ubuntu@ubuntu-14:~$ docker run -t -i --volumes-from newdatacontainer ubuntu /bin/bash</p><p style=\"margin-left:0px;\">Create a new file within your ‘/tmp’ directory, exit your session and then repeat the commands to check if your file is there.</p><p>root@4f0c179dfbd0:/# echo \"I'm with now and ever\" &gt; /tmp/helo</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084364/3_3_6ee0255a65.png\"></figure><h2 style=\"margin-left:0px;\">2- Sharing Data Between Host and Docker Container:</h2><p style=\"margin-left:0px;\">Here we are going to show how you can use your Docker data volume by sharing data between the host filesystem and the Docker container . Let’s take an example of running a Nginx Docker image using the command shown below.</p><p>Ubuntu@ubuntu-14:~$ docker run -d -v ~/nginxlogs:/var/log/nginx -p 5000:80 -i nginx</p><p style=\"margin-left:0px;\">Here in this Docker command we have used ‘-d’ option to run the process in the background, ‘-v’ to indicate a volume that links the /var/log/nginx directory from inside the Nginx container to the ~/nginxlogs directory on the host server. The Nginx container listens to port 80 by default so we need to map the Nginx container’s port 80 to port 5000 using the ‘-p’ parameter in the command with addition to ‘-i’ for identifying the image name.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084392/4_3_acb0c429c0.png\"></figure><p style=\"margin-left:0px;\">Now we have Nginx Docker image running on our Ubuntu server. Let’s access it whether from your web browser or run the ‘curl’ command below on your command line interface.</p><p style=\"margin-left:0px;\">Then view the access log file. You will see the log entries of your recent access to the URL in the file as shown below.</p><p>ubuntu@ubuntu-14:~$ cat nginxlogs/access.log</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084409/5_3_d0b90899b1.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion:</h2><p style=\"margin-left:0px;\">In this article you have learned about working with Docker data volume on Ubuntu 14.04. You have learned how Docker data volumes provide you with a separate place to store other data and how Docker containers allow you to run a pre-packaged “Linux box” inside a container. Now you’ve learned a bit more about how to use and work on Docker. Let’s keep on going and enjoying Docker’s world.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T06:07:39.915Z","created_at":"2021-03-30T06:07:36.739Z","updated_at":"2021-03-30T06:07:40.809Z","PostSEO":{"id":532,"GoogleSEO":{"id":523,"Title":"How To Work with Docker Data Volumes on Ubuntu 14.04 - VEXXHOST","Description":"A Docker volume permits data to be stored in a container outside of the boot volume but within the root file system. In our previous posts we have"},"FacebookSEO":{"id":519,"Title":"How To Work with Docker Data Volumes on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"A Docker volume permits data to be stored in a container outside of the boot volume but within the root file system. In our previous posts we have","SiteName":"VEXXHOST","Image":{"id":738,"name":"How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084313/small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"small_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":15.23,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084313/medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"medium_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":25.45,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084312/thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"thumbnail_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":5.87,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}}},"hash":"How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","ext":".jpg","mime":"image/jpeg","size":27.28,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084311/How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"},"created_at":"2021-03-30T06:05:14.085Z","updated_at":"2021-03-30T06:05:14.094Z"}},"TwitterSEO":{"id":519,"Description":"A Docker volume permits data to be stored in a container outside of the boot volume but within the root file system. In our previous posts we have","Title":"How To Work with Docker Data Volumes on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":738,"name":"How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084313/small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"small_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":15.23,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084313/medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"medium_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":25.45,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084312/thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"thumbnail_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":5.87,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}}},"hash":"How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","ext":".jpg","mime":"image/jpeg","size":27.28,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084311/How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"},"created_at":"2021-03-30T06:05:14.085Z","updated_at":"2021-03-30T06:05:14.094Z"}}},"LinkToResource":{"id":450,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":738,"name":"How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084313/small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"small_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":15.23,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084313/medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"medium_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":25.45,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084312/thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","hash":"thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","mime":"image/jpeg","name":"thumbnail_How-To-Work-with-Docker-Data-Volumes-2-800x400.jpg","path":null,"size":5.87,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"}}},"hash":"How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","ext":".jpg","mime":"image/jpeg","size":27.28,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084311/How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_To_Work_with_Docker_Data_Volumes_2_800x400_269f30d07c","resource_type":"image"},"created_at":"2021-03-30T06:05:14.085Z","updated_at":"2021-03-30T06:05:14.094Z"},"TextContent":"A Docker volume permits data to be stored in a container outside of the boot volume but within the root file system. In our previous posts we have launched containers from various images and even deployed few applications using Docker images. Here, we will take a look at Docker Volumes. With Docker Volumes, we are essentially going to look at how to manage data within your Docker containers. The data in any volume can be freely browsed and edited by the host operating system, and standard Unix permissions apply. As the data is stored in a standard file system, it can be backed up, copied or moved in and out by the operating system.In other words, the fundamental thing that we are trying to get over here is to be familiar with creating and using Docker Volumes and separate out the container lifecycle from the data. Ideally, we want to keep these separate so that the data generated is not destroyed or tied to the container lifecycle and can thus be reused. This is done via Volumes, which we will be showing your in this post.Prerequisites:The basic requirements needed in working with Docker Data Volumes is an up to date Ubuntu 14.04 server, a non-root sudo user with Docker package installed on it. You can follow our previous article on how to download and install Docker on Ubuntu 14.04 in detail. Simply login to your Ubuntu server and run the command below to install Docker on Ubuntu.$ wget -qO- https://get.docker.com/ | shAfter installing Docker, run the command below. Allow your current user to the Docker group.$ sudo usermod -aG docker $(whoami)Why Docker Data Volumes:Containers are only short term and once a container is removed, it is gone. So, if you want your applications running inside the container to write to some files/data and then ensure that the data is still present. For e.g. let’s say you are running an application that is generating data and it creates files or writes to a database and so on. Now, even if the container is removed and in the future you launch another container, you would like that data to still be there. In that case we strongly need the Docker Data Volumes to keep the data persistent.Working Without Docker Data Volumes:Let’s follow a practical example of working without a Docker data volume on Ubuntu that will show you how files will be destroyed after installing a new container.Run the command as given below to download and run an Ubuntu image in interactive mode with a terminal from the Docker Registry that will be launching the standard ‘bash’ shell of Ubuntu container inside it as shown in the image.$ docker run -t -i ubuntu /bin/bashCreate a test file with some random text in it. Execute the exit command in your current shell. You will be returned back to your original shell as shown below. Then repeat the commands to see if the file you created has disappeared.Types of Docker Data Volume:Docker data volumes can used in the following scenarios, where the first one is keeping your data persistent even though the container gets restarted. You just want the data to hang around even if you shut down or restart the container. So it is often best to let Docker manage where the data gets stored.In the second scenario, we will be sharing the data between the host filesystem and the Docker container. The third, and last type of using the Docker data volume, you can share the data with other Docker containers.1- Persistent Data Container:Here we will be showing you an example of keeping your data persistent using the Docker data volume. So, let’s create a new data container to store your volume within your ‘/tmp’ directory using the command below.$ docker create -v /tmp --name newdatacontainer ubuntuNow start your Ubuntu image by choosing the volume from your newly created data container.ubuntu@ubuntu-14:~$ docker run -t -i --volumes-from newdatacontainer ubuntu /bin/bashCreate a new file within your ‘/tmp’ directory, exit your session and then repeat the commands to check if your file is there.root@4f0c179dfbd0:/# echo \"I'm with now and ever\" > /tmp/helo2- Sharing Data Between Host and Docker Container:Here we are going to show how you can use your Docker data volume by sharing data between the host filesystem and the Docker container . Let’s take an example of running a Nginx Docker image using the command shown below.Ubuntu@ubuntu-14:~$ docker run -d -v ~/nginxlogs:/var/log/nginx -p 5000:80 -i nginxHere in this Docker command we have used ‘-d’ option to run the process in the background, ‘-v’ to indicate a volume that links the /var/log/nginx directory from inside the Nginx container to the ~/nginxlogs directory on the host server. The Nginx container listens to port 80 by default so we need to map the Nginx container’s port 80 to port 5000 using the ‘-p’ parameter in the command with addition to ‘-i’ for identifying the image name.Now we have Nginx Docker image running on our Ubuntu server. Let’s access it whether from your web browser or run the ‘curl’ command below on your command line interface.Then view the access log file. You will see the log entries of your recent access to the URL in the file as shown below.ubuntu@ubuntu-14:~$ cat nginxlogs/access.logConclusion:In this article you have learned about working with Docker data volume on Ubuntu 14.04. You have learned how Docker data volumes provide you with a separate place to store other data and how Docker containers allow you to run a pre-packaged “Linux box” inside a container. Now you’ve learned a bit more about how to use and work on Docker. Let’s keep on going and enjoying Docker’s world."},{"id":53,"Title":"How to setup OpenVPN Server and Client on Ubuntu 14.04","Slug":"resources/tutorials/how-to-setup-openvpn-server-and-client-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">OpenVPN is one of the most popular and widely used open source software application that implements virtual private network (VPN) technologies for creating secure point-to-point or site-to-site connections in routed or bridged configurations and remote access facilities. It uses a custom security protocol that utilizes SSL/TLS for key exchange.</p><p style=\"margin-left:0px;\">The purpose of OpenVPN is simple; it allows connecting to other devices within one secure network. It allows to keep online data safe by tunneling them through encrypted servers. So if you’re looking for a reliable, easy-to-use system that is adaptable enough to deal with any operating system, then OpenVPN is a no-brainer.</p><h2 style=\"margin-left:0px;\">System Preparation</h2><p style=\"margin-left:0px;\">We are going to setup OpenVPN on the base operating system of Ubuntu Server 14.04. Let’s prepare the base environment before the startup of OpenVPN installation. The only prerequisite is that you &nbsp;have installed Ubuntu 14.04 Operating System and you have sufficient root level privileges for performing general maintenance on your server.</p><p style=\"margin-left:0px;\">Update your system to refresh the local repository database with the command below.</p><p>root@ubuntu-14:~# apt-get update</p><p style=\"margin-left:0px;\">If you are using an old version of your operating system and need to upgrade all of your installed packages with Operating system, then run the command below.</p><p>root@ubuntu-14:~# apt-get upgrade</p><h2 style=\"margin-left:0px;\">OpenVPN and RSA Installation</h2><p style=\"margin-left:0px;\">Once your system is updated with the latest updates then install Open VPN and Easy-RSA by running the following command with root user.</p><p>root@ubuntu-14:~# apt-get install openvpn easy-rsa</p><p style=\"margin-left:0px;\">The command will install the new packages with its dependencies. Before the installation process starts, you will be asked to confirm the installation process by typing `Y` for yes and `N` for no.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082867/1_1_e28c9be471.png\"></figure><h2 style=\"margin-left:0px;\">OpenVPN Server Configuration</h2><p style=\"margin-left:0px;\">There are some sample VPN server configuration files that can be extracted to `/etc/openvpn` folder for further usage. Now, point to the directory where these example VPN configurations are placed and extract the archive into the required directory with below command.</p><p>root@ubuntu-14:~# gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz &gt; /etc/openvpn/server.conf</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082884/2_4f85bb8979.png\"></figure><p style=\"margin-left:0px;\">Now, to configure its configuration parameters in the `server.conf` file, open with any editor and do the required changes.</p><p>root@ubuntu-14:~# vim /etc/openvpn/server.conf</p><p style=\"margin-left:0px;\">To configure the `Diffie Hellman parameters` in the configurations file, we will update its value to double the RSA key length used when generating server and client keys.</p><p>#dh dh1024.pem dh dh2048.pem</p><p style=\"margin-left:0px;\">To configure the parameters so that the VPN server can pass in the client’s web traffic to its destination, we will uncomment the below line in `server.conf` file.</p><p>;push \"redirect-gateway def1 bypass-dhcp\" push \"redirect-gateway def1 bypass-dhcp\"</p><p style=\"margin-left:0px;\">To configure the Public DNS servers provided by opendns.com, uncomment the two line under this section that looks like this.</p><p>push \"dhcp-option DNS 208.67.222.222\" push \"dhcp-option DNS 208.67.220.220\"</p><p style=\"margin-left:0px;\">OpenDNS is the default DNS resolvers used by OpenVPN, we can also use whichever DNS service we want to use. Once the necessary parameters have been configured, save the changes and close the file with `:wq!` in case you are using vim editor.</p><h2 style=\"margin-left:0px;\">Setup the Certificate Authority</h2><p style=\"margin-left:0px;\">We are going to setup certificate authority that allows your server to generate public and private certificates for other computers. This is one the most important step to setup encrypted communication between the different computers. We will use Easy RSA’s scripts and copy the Easy-RSA generation scripts into the `openvpn` directory.</p><p>root@ubuntu-14:~# cp -r /usr/share/easy-rsa/ /etc/openvpn</p><p style=\"margin-left:0px;\">If you list the easy-rsa directory, you will see its different certificate files and directories. Under the easy-rsa directory, we will make a new key storage directory.</p><p>root@ubuntu-14:~#mkdir /etc/openvpn/easy-rsa/keys</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082900/3_fc64b747ce.png\"></figure><p style=\"margin-left:0px;\">Next, edit `/etc/openvpn/easy-rsa/vars` adjusting the information to your environment, this information is copied to the certificates and keys, and will help identify the keys later.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# vim vars</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082917/4_d881903212.png\"></figure><p># X509 Subject Field export KEY_NAME=\"EasyRSA\"</p><p style=\"margin-left:0px;\">The variables shown in red should be updated according to your own environment. You would also need to update the OpenVPN configuration files that reference to `server.crt` and `server.key` according to your `KEY_NAME` Otherwise, openvpn service will not start.</p><p>root@ubuntu-14:/etc/openvpn# vim server.conf #cert server.crt cert EasyRSA.crt #key server.key &nbsp;# This file should be kept secret key EasyRSA.key</p><p style=\"margin-left:0px;\">Now we are going to generate the Diffie-Hellman parameters by executing the below command. It might take a few minutes to complete the process.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# openssl dhparam -out /etc/openvpn/dh2048.pem 2048</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082933/5_3b57e71faa.png\"></figure><p style=\"margin-left:0px;\">Now, initialize the PKI (Public Key Infrastructure) by running the below command within the same directory we are working on.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# source ./vars</p><p style=\"margin-left:0px;\">The above command ends up by showing the output like:</p><p>NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/openvpn/easy-rsa/keys</p><p style=\"margin-left:0px;\">We’ll clear the working directory of any possible old or test keys to make way for the new ones by executing the below command.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# ./clean-all</p><p style=\"margin-left:0px;\">Now we build the certificate authority (CA) by invoking an interactive OpenSSL command. You can accept the default settings at the prompt as we have already configured in the previous steps so simply press `enter` to configure each of the option. If you need to update any of the option then you can also update the settings from here.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# ./build-ca</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082953/6_b87aa55615.png\"></figure><h2 style=\"margin-left:0px;\">Creating Server Certificate</h2><p style=\"margin-left:0px;\">Now, we are going to set up the public and private keys for the actual server. This allows the server to set up its end of the encrypted tunnel between itself and any other computer.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# ./build-key-server EasyRSA</p><p style=\"margin-left:0px;\">So working in the same directory, we entered the command to build the server’s key with its export key name as we configured earlier.</p><p style=\"margin-left:0px;\">This will be generating a 2048 bit RSA private key where we will be asked to enter the information that will be incorporated into your certificate request.</p><p style=\"margin-left:0px;\">In addition to the similar options that we had already configured previously, you will be asked to enter some extra attributes as shown.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082970/7_74c9783505.png\"></figure><p style=\"margin-left:0px;\">So, we had successfully created the new certificates for the server, now we have to copy these certificates into the `/etc/openvpn` directory.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa/keys# cp EasyRSA.crt EasyRSA.key ca.crt /etc/openvpn/</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617082990/8_7bb36127ec.png\"></figure><h2 style=\"margin-left:0px;\">Start OpenVPN Server</h2><p style=\"margin-left:0px;\">At this point, we are now ready to start openvpn services to check the status of OpenVPN server. Let’s run the following commands to start and check the status of OpenVPN server.</p><p>root@ubuntu-14:/etc/openvpn# service openvpn start root@ubuntu-14:/etc/openvpn# service openvpn status</p><p style=\"margin-left:0px;\">Here is the snapshot with the running status of openvpn server service.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083012/9_d69b152421.png\"></figure><p style=\"margin-left:0px;\">The output shows that we have successfully installed and configured an operation openvpn server. Now in the next steps we will show you about its client setup.</p><h2 style=\"margin-left:0px;\">OpenVPN Client Configurations</h2><p style=\"margin-left:0px;\">We are going to setup openvpn client that will be used to connect to the openvpn server, so we are starting with its package installation on the client machine which is also running with Ubuntu 14.04 operating system.</p><p style=\"margin-left:0px;\">Use the following command to start the installation of OpenVPN as shown.</p><p>root@ubuntu-client:~# apt-get install openvpn</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083032/10_cce89949eb.png\"></figure><p style=\"margin-left:0px;\">Now copy the `client.conf` file from the openvpn example files into the `/etc/openvpn/` directory of your openvpn client host.</p><p>root@ubuntu-client:~# cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn/</p><p style=\"margin-left:0px;\">You can repeat this section for the new clients by replacing the name of each device with the appropriate client name.</p><h2 style=\"margin-left:0px;\">OpenVPN Client Key and Certs Building</h2><p style=\"margin-left:0px;\">As we did for OpenVPN servers key and certificates building, we will repeat the step for the new client certificates and keys generation. So, to create separate authentication credentials for each device that we want to connect to the VPN, we will have to generate the new certificates with its separate name.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa# ./build-key client1</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083055/11_5e54be337b.png\"></figure><h2 style=\"margin-left:0px;\">Transferring Certs and Keys to Client Device</h2><p style=\"margin-left:0px;\">Now we need to transfer the client certificate, key, and profile template files to a folder on our client device.</p><p style=\"margin-left:0px;\">You can also use the below `scp` command to import the files from your server to client machine by giving the source path and destination path.</p><p>root@ubuntu-14:/etc/openvpn/easy-rsa/keys# scp client1.crt client1.key&nbsp;</p><p><a href=\"mailto:root@xx.xx.xx.xx:/etc/openvpn/\">root@xx.xx.xx.xx:/etc/openvpn/</a></p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083077/12_25419d892e.png\"></figure><p style=\"margin-left:0px;\">Let’s do some configuration changes in the `client.conf` with the correct certs and keys name as following.</p><p>root@ubuntu-client:/etc/openvpn# vim client.conf ca ca.crt cert client1.crt key client1.key</p><p style=\"margin-left:0px;\">Also change the following line with openvpn’s hostname or IP address with port to connect from the client device.</p><p>remote xx.xx.xx.xx 1194</p><p style=\"margin-left:0px;\">Now, save the changes with `:wq!` and start `openvpn` service on client device.</p><p>root@ubuntu-client:/etc/openvpn# service openvpn start</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083100/13_8689675a29.png\"></figure><p style=\"margin-left:0px;\">You should see in your ifconfig that a `tun` interface appeared.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083124/14_b6b0901a36.png\"></figure><p style=\"margin-left:0px;\">Similarly, if you check in openvpn server side, there will also be a new `tun0` interface present.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083146/15_1ed84e858f.png\"></figure><h2 style=\"margin-left:0px;\">Firewall Rules to Connect VPN Server</h2><p style=\"margin-left:0px;\">In order to allow the VPN client to connect to machines behind the VPN server, we must add a couple of routes to the server. First, you’ll want to enable IP forwarding by running the following command.</p><p>root@ubuntu-14:~# sysctl -w net.ipv4.ip_forward=1 root@ubuntu-client:~# sysctl -w net.ipv4.ip_forward=1 net.ipv4.ip_forward = 1</p><p style=\"margin-left:0px;\">Now we only need to make few firewall rules and configuration changes and then re-enable the firewall. So first we will allow the SSH and the port 1194 to both machines with following command.</p><p>#ufw allow ssh #ufw allow 1194/udp</p><p style=\"margin-left:0px;\">Set the default forward policy to ACCEPT, DROP or REJECT &nbsp;by changing this will most likely want to adjust your rules as follow.</p><p>root@ubuntu-X:~# vim /etc/default/ufw #DEFAULT_FORWARD_POLICY=\"DROP\" DEFAULT_FORWARD_POLICY=\"ACCEPT\"</p><p style=\"margin-left:0px;\">Now, we will add some additional `ufw` rules for network address translation and IP masquerading of connected clients by adding some rules in `ufw` `before.rules` file as below.</p><p>root@ubuntu-14:~# vim /etc/ufw/before.rules</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083165/17_8c65f7e2ab.png\"></figure><p style=\"margin-left:0px;\">After adding the new rules, enable the `ufw` and then check its status as shown in below. You will be able to see the status of newly added allowed ports.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083183/16_4636380293.png\"></figure><p style=\"margin-left:0px;\">We have almost done the OpenVPN Server and Client setup. Now, finally make sure your routes are working on either your default gateway or your clients. You can use wireshark or tcpdump to check that whether your incoming traffic is fine. You can also manually check the routes on Linux or Windows by issuing the command “route”.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">In this detailed article, you have learned about OpenVPN Server and Client setup with installation and configurations using Ubuntu 14.04. You can also install OpenVPN client profiles on the cross platform.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:47:19.139Z","created_at":"2021-03-30T05:47:10.408Z","updated_at":"2021-03-30T05:47:20.109Z","PostSEO":{"id":527,"GoogleSEO":{"id":518,"Title":"How to setup OpenVPN Server and Client on Ubuntu 14.04 - VEXXHOST","Description":"OpenVPN is one of the most popular and widely used open source software application that implements virtual private network (VPN) technologies for"},"FacebookSEO":{"id":514,"Title":"How to setup OpenVPN Server and Client on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"OpenVPN is one of the most popular and widely used open source software application that implements virtual private network (VPN) technologies for","SiteName":"VEXXHOST","Image":{"id":688,"name":"All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082836/small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":42.05,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082835/medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":81.16,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082834/thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":10.71,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","ext":".jpg","mime":"image/jpeg","size":95.04,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082834/All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"},"created_at":"2021-03-30T05:40:36.433Z","updated_at":"2021-03-30T05:40:36.444Z"}},"TwitterSEO":{"id":514,"Description":"OpenVPN is one of the most popular and widely used open source software application that implements virtual private network (VPN) technologies for","Title":"How to setup OpenVPN Server and Client on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":688,"name":"All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082836/small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":42.05,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082835/medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":81.16,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082834/thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":10.71,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","ext":".jpg","mime":"image/jpeg","size":95.04,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082834/All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"},"created_at":"2021-03-30T05:40:36.433Z","updated_at":"2021-03-30T05:40:36.444Z"}}},"LinkToResource":{"id":445,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":688,"name":"All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082836/small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":42.05,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082835/medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":81.16,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082834/thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":10.71,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","ext":".jpg","mime":"image/jpeg","size":95.04,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617082834/All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_2_800x400_37d81eec30","resource_type":"image"},"created_at":"2021-03-30T05:40:36.433Z","updated_at":"2021-03-30T05:40:36.444Z"},"TextContent":"OpenVPN is one of the most popular and widely used open source software application that implements virtual private network (VPN) technologies for creating secure point-to-point or site-to-site connections in routed or bridged configurations and remote access facilities. It uses a custom security protocol that utilizes SSL/TLS for key exchange.The purpose of OpenVPN is simple; it allows connecting to other devices within one secure network. It allows to keep online data safe by tunneling them through encrypted servers. So if you’re looking for a reliable, easy-to-use system that is adaptable enough to deal with any operating system, then OpenVPN is a no-brainer.System PreparationWe are going to setup OpenVPN on the base operating system of Ubuntu Server 14.04. Let’s prepare the base environment before the startup of OpenVPN installation. The only prerequisite is that you  have installed Ubuntu 14.04 Operating System and you have sufficient root level privileges for performing general maintenance on your server.Update your system to refresh the local repository database with the command below.root@ubuntu-14:~# apt-get updateIf you are using an old version of your operating system and need to upgrade all of your installed packages with Operating system, then run the command below.root@ubuntu-14:~# apt-get upgradeOpenVPN and RSA InstallationOnce your system is updated with the latest updates then install Open VPN and Easy-RSA by running the following command with root user.root@ubuntu-14:~# apt-get install openvpn easy-rsaThe command will install the new packages with its dependencies. Before the installation process starts, you will be asked to confirm the installation process by typing `Y` for yes and `N` for no.OpenVPN Server ConfigurationThere are some sample VPN server configuration files that can be extracted to `/etc/openvpn` folder for further usage. Now, point to the directory where these example VPN configurations are placed and extract the archive into the required directory with below command.root@ubuntu-14:~# gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz > /etc/openvpn/server.confNow, to configure its configuration parameters in the `server.conf` file, open with any editor and do the required changes.root@ubuntu-14:~# vim /etc/openvpn/server.confTo configure the `Diffie Hellman parameters` in the configurations file, we will update its value to double the RSA key length used when generating server and client keys.#dh dh1024.pem dh dh2048.pemTo configure the parameters so that the VPN server can pass in the client’s web traffic to its destination, we will uncomment the below line in `server.conf` file.;push \"redirect-gateway def1 bypass-dhcp\" push \"redirect-gateway def1 bypass-dhcp\"To configure the Public DNS servers provided by opendns.com, uncomment the two line under this section that looks like this.push \"dhcp-option DNS 208.67.222.222\" push \"dhcp-option DNS 208.67.220.220\"OpenDNS is the default DNS resolvers used by OpenVPN, we can also use whichever DNS service we want to use. Once the necessary parameters have been configured, save the changes and close the file with `:wq!` in case you are using vim editor.Setup the Certificate AuthorityWe are going to setup certificate authority that allows your server to generate public and private certificates for other computers. This is one the most important step to setup encrypted communication between the different computers. We will use Easy RSA’s scripts and copy the Easy-RSA generation scripts into the `openvpn` directory.root@ubuntu-14:~# cp -r /usr/share/easy-rsa/ /etc/openvpnIf you list the easy-rsa directory, you will see its different certificate files and directories. Under the easy-rsa directory, we will make a new key storage directory.root@ubuntu-14:~#mkdir /etc/openvpn/easy-rsa/keysNext, edit `/etc/openvpn/easy-rsa/vars` adjusting the information to your environment, this information is copied to the certificates and keys, and will help identify the keys later.root@ubuntu-14:/etc/openvpn/easy-rsa# vim vars# X509 Subject Field export KEY_NAME=\"EasyRSA\"The variables shown in red should be updated according to your own environment. You would also need to update the OpenVPN configuration files that reference to `server.crt` and `server.key` according to your `KEY_NAME` Otherwise, openvpn service will not start.root@ubuntu-14:/etc/openvpn# vim server.conf #cert server.crt cert EasyRSA.crt #key server.key  # This file should be kept secret key EasyRSA.keyNow we are going to generate the Diffie-Hellman parameters by executing the below command. It might take a few minutes to complete the process.root@ubuntu-14:/etc/openvpn/easy-rsa# openssl dhparam -out /etc/openvpn/dh2048.pem 2048Now, initialize the PKI (Public Key Infrastructure) by running the below command within the same directory we are working on.root@ubuntu-14:/etc/openvpn/easy-rsa# source ./varsThe above command ends up by showing the output like:NOTE: If you run ./clean-all, I will be doing a rm -rf on /etc/openvpn/easy-rsa/keysWe’ll clear the working directory of any possible old or test keys to make way for the new ones by executing the below command.root@ubuntu-14:/etc/openvpn/easy-rsa# ./clean-allNow we build the certificate authority (CA) by invoking an interactive OpenSSL command. You can accept the default settings at the prompt as we have already configured in the previous steps so simply press `enter` to configure each of the option. If you need to update any of the option then you can also update the settings from here.root@ubuntu-14:/etc/openvpn/easy-rsa# ./build-caCreating Server CertificateNow, we are going to set up the public and private keys for the actual server. This allows the server to set up its end of the encrypted tunnel between itself and any other computer.root@ubuntu-14:/etc/openvpn/easy-rsa# ./build-key-server EasyRSASo working in the same directory, we entered the command to build the server’s key with its export key name as we configured earlier.This will be generating a 2048 bit RSA private key where we will be asked to enter the information that will be incorporated into your certificate request.In addition to the similar options that we had already configured previously, you will be asked to enter some extra attributes as shown.So, we had successfully created the new certificates for the server, now we have to copy these certificates into the `/etc/openvpn` directory.root@ubuntu-14:/etc/openvpn/easy-rsa/keys# cp EasyRSA.crt EasyRSA.key ca.crt /etc/openvpn/Start OpenVPN ServerAt this point, we are now ready to start openvpn services to check the status of OpenVPN server. Let’s run the following commands to start and check the status of OpenVPN server.root@ubuntu-14:/etc/openvpn# service openvpn start root@ubuntu-14:/etc/openvpn# service openvpn statusHere is the snapshot with the running status of openvpn server service.The output shows that we have successfully installed and configured an operation openvpn server. Now in the next steps we will show you about its client setup.OpenVPN Client ConfigurationsWe are going to setup openvpn client that will be used to connect to the openvpn server, so we are starting with its package installation on the client machine which is also running with Ubuntu 14.04 operating system.Use the following command to start the installation of OpenVPN as shown.root@ubuntu-client:~# apt-get install openvpnNow copy the `client.conf` file from the openvpn example files into the `/etc/openvpn/` directory of your openvpn client host.root@ubuntu-client:~# cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn/You can repeat this section for the new clients by replacing the name of each device with the appropriate client name.OpenVPN Client Key and Certs BuildingAs we did for OpenVPN servers key and certificates building, we will repeat the step for the new client certificates and keys generation. So, to create separate authentication credentials for each device that we want to connect to the VPN, we will have to generate the new certificates with its separate name.root@ubuntu-14:/etc/openvpn/easy-rsa# ./build-key client1Transferring Certs and Keys to Client DeviceNow we need to transfer the client certificate, key, and profile template files to a folder on our client device.You can also use the below `scp` command to import the files from your server to client machine by giving the source path and destination path.root@ubuntu-14:/etc/openvpn/easy-rsa/keys# scp client1.crt client1.key root@xx.xx.xx.xx:/etc/openvpn/Let’s do some configuration changes in the `client.conf` with the correct certs and keys name as following.root@ubuntu-client:/etc/openvpn# vim client.conf ca ca.crt cert client1.crt key client1.keyAlso change the following line with openvpn’s hostname or IP address with port to connect from the client device.remote xx.xx.xx.xx 1194Now, save the changes with `:wq!` and start `openvpn` service on client device.root@ubuntu-client:/etc/openvpn# service openvpn startYou should see in your ifconfig that a `tun` interface appeared.Similarly, if you check in openvpn server side, there will also be a new `tun0` interface present.Firewall Rules to Connect VPN ServerIn order to allow the VPN client to connect to machines behind the VPN server, we must add a couple of routes to the server. First, you’ll want to enable IP forwarding by running the following command.root@ubuntu-14:~# sysctl -w net.ipv4.ip_forward=1 root@ubuntu-client:~# sysctl -w net.ipv4.ip_forward=1 net.ipv4.ip_forward = 1Now we only need to make few firewall rules and configuration changes and then re-enable the firewall. So first we will allow the SSH and the port 1194 to both machines with following command.#ufw allow ssh #ufw allow 1194/udpSet the default forward policy to ACCEPT, DROP or REJECT  by changing this will most likely want to adjust your rules as follow.root@ubuntu-X:~# vim /etc/default/ufw #DEFAULT_FORWARD_POLICY=\"DROP\" DEFAULT_FORWARD_POLICY=\"ACCEPT\"Now, we will add some additional `ufw` rules for network address translation and IP masquerading of connected clients by adding some rules in `ufw` `before.rules` file as below.root@ubuntu-14:~# vim /etc/ufw/before.rulesAfter adding the new rules, enable the `ufw` and then check its status as shown in below. You will be able to see the status of newly added allowed ports.We have almost done the OpenVPN Server and Client setup. Now, finally make sure your routes are working on either your default gateway or your clients. You can use wireshark or tcpdump to check that whether your incoming traffic is fine. You can also manually check the routes on Linux or Windows by issuing the command “route”.ConclusionIn this detailed article, you have learned about OpenVPN Server and Client setup with installation and configurations using Ubuntu 14.04. You can also install OpenVPN client profiles on the cross platform."},{"id":55,"Title":"How To Install WordPress & PhpMyAdmin with Docker Compose on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-wordpress-and-phpmyadmin-with-docker-compose-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Compose is a tool for defining and running complex applications with Docker. With Compose, you define a multi-container application in a single file, then spin your application up in a single command which does everything that needs to be done to get it running. This post demonstrates how you can deploy WordPress and PhpMyAdmin application with LAMP (Linux Apache MySQL/MariaDB and PHP) using the docker-compose. In our previous post, we have shown you the installation and usage of docker-compose on Ubuntu 14.04 by deploying the test image from the docker hub. Today we’re going demonstrate the steps to install WordPress and PhpMyAdmin with docker-compose to install these applications directly from the docker hub from there available images.</p><p style=\"margin-left:0px;\">We will be distributing this post in two parts, in the first part we need to create the two containers that are WordPress and MariaDB as both are available in there separate images. After that, we will be deploying the PhpMyAdmin using the docker-compose container and the integration with WordPress.</p><h2 style=\"margin-left:0px;\">Requirements:</h2><p style=\"margin-left:0px;\">The basic requirement to install WordPress and PhpMyAdmin with Docker Compose is that you should have an Ubuntu instance with the latest updates. It should have Docker and docker-compose installed on your Ubuntu server. You can refer to our previous post on ‘<a href=\"https://vexxhost.com/resources/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-14-04/\">How to install and use Docker Compose on Ubuntu 14.04</a>”.<br>So, Once are ready with the prerequisites then you can start deployment of your WordPress, MariaDB and PhpMyAdmin containers with docker-compose and so on.</p><h2 style=\"margin-left:0px;\">Installing WordPress with docker-compose:</h2><p style=\"margin-left:0px;\">Login to your ubuntu 14.04 server using ssh or command-line interface. Run the command below to check the status of the docker service that should be in running state.</p><p>ubuntu@ubuntu-14:~$ service docker status docker start/running, process 28472</p><p style=\"margin-left:0px;\">Then create a new directory naming with ‘WordPress’ and switch into this to create a new YML file where we will be doing the configuration of the new container in it.</p><p>$ mkdir wordpress$ cd wordpress/ubuntu@ubuntu-14:~/wordpress$ vi docker-compose.yml</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083607/1_2_cafd3df98f.png\"></figure><p style=\"margin-left:0px;\">Once the docker pull process complete, you will see some errors at the end of the process missing ‘WORDPRESS_DB_HOST‘ and MYSQL_PORT_3306_TCP environment variables.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083622/2_2_3612d80dfe.png\"></figure><p style=\"margin-left:0px;\">To fix this Error message we need to set up its database using the MariaDB docker image. So in the next step, we are going to pull the MariaDB docker image and link it to ‘WordPress’.</p><h2 style=\"margin-left:0px;\">Installing MariaDB Container:</h2><p style=\"margin-left:0px;\">To create a link between the WordPress container and MariaDB container, Open the same ‘docker-compose.yml’ file and then append in the following way.</p><p>ubuntu@ubuntu-14:~/wordpress$ vi docker-compose.ymlwordpress: &nbsp;image: wordpress &nbsp;links: &nbsp; &nbsp;- wordpress_db:mysql wordpress_db: &nbsp;image: mariadb</p><p style=\"margin-left:0px;\">Here in the configuration file of docker-compose, we have defined a link that is mysql used by the wordpress_db next, we have defined the new container name as wordpress_db which refers to the new mariadb image that will be downloaded from the docker hub after saving this file and then executing the below command.</p><p>ubuntu@ubuntu-14:~/wordpress$ docker-compose up</p><p style=\"margin-left:0px;\">After completing the installation process of MariaDB, you will see some errors like “database is uninitialized and MYSQL_ROOT_PASSWORD not set” and “missing required WORDPRESS_DB_PASSWORD environment variable” as shown in the below image.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083639/3_2_91d156112b.png\"></figure><h2 style=\"margin-left:0px;\">Configuring WordPress Environment Variables:</h2><p style=\"margin-left:0px;\">Open the main docker-compose configuration file using any of your command line editor and configure the required environment variables. Here we will be setting up the MYSQL_ROOT_PASSWORD and the ports forwarding from the 8080 to default webserver port 80 by making the following changes under wordpress and wordpress_db references respectively.</p><p>ubuntu@ubuntu-14:~/wordpress$ vi docker-compose.ymlports: - 8080:80 environment: &nbsp; &nbsp;MYSQL_ROOT_PASSWORD: password</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083655/4_2_1392e73de5.png\"></figure><p style=\"margin-left:0px;\">Your final configuration file should like the same as shown below.</p><p style=\"margin-left:0px;\">Now within the same WordPress folder run the docker-compose command to recreate the WordPress containers.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083672/5_2_2647c41569.png\"></figure><p style=\"margin-left:0px;\">Now you can access your WordPress web portal from any of your web browsers by giving your fully qualified domain name or the IP of your server with port ‘8080’. You will be able to see the WordPress installation setup on your browser.</p><p>http://your_server_IP:8080</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083688/6_2_eafd3399fe.png\"></figure><p style=\"margin-left:0px;\">After installing the WordPress you can log in with your user name and password to access your WordPress web portal.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083704/7_2_6d427553ea.png\"></figure><h2 style=\"margin-left:0px;\">Adding PhpMyAdmin Container to WordPress Container:</h2><p style=\"margin-left:0px;\">Now the second part begins, here we will be showing you the steps to install PhpMyAdmin a community developed image then links it to the wordpress_db by making some configuration changes in the same ‘docker-compose.yml’ file within the ‘WordPress’ directory.<br>Let’s open it using any command-line editor and then append with the following configurations in it.</p><p>phpmyadmin: &nbsp;image: corbinu/docker-phpmyadmin &nbsp;links: &nbsp; &nbsp;- wordpress_db:mysql &nbsp;ports: &nbsp; &nbsp;- 8181:80 &nbsp;environment: &nbsp; &nbsp;MYSQL_USERNAME: root &nbsp; &nbsp;MYSQL_ROOT_PASSWORD: password</p><p style=\"margin-left:0px;\">Your final configuration file should be looks like the same as shown below and make sure that you keep the same password under the environment variables.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083727/8_1_a470bba250.png\"></figure><p style=\"margin-left:0px;\">After saving the configurations once again run the docker-compose command to create and start the container, append your command with ‘-d’ if your wish to run the process in the background.</p><p>ubuntu@ubuntu-14:~/wordpress$ docker-compose up -d</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083745/9_1_ab2bf15795.png\"></figure><p style=\"margin-left:0px;\">Once the pulling process is finished, then open your server’s IP address using port ‘8181’. You will see the login screen of PhpMyAdmin. Login using the same credentials that you have configured in your .yml file then you will be directed toward the web interface of PhpMyAdmin.</p><p>http://your_servers_ip:8181</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617083762/10_2_ff2a6c6aed.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion:</h2><p style=\"margin-left:0px;\">Congratulations, we have successfully installed WordPress and PhpMyAdmin using the Docker Compose containers on our Ubuntu 14.04 server. Like the same way, you create any application depending upon their availability of image on docker hub. Docker Compose makes dealing with the orchestration processes of Docker containers such as starting up, shutting down, and setting up intra-container linking and volumes really easy. Thank you for reading this article we hope you have got this much helpful. Feel free to get back to us in case of any difficulty.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T05:56:58.118Z","created_at":"2021-03-30T05:53:13.304Z","updated_at":"2021-03-30T05:56:58.608Z","PostSEO":{"id":529,"GoogleSEO":{"id":520,"Title":"VEXXHOST - Installing Wordpress & PhpMyAdmin with Docker Compose","Description":"Compose is a tool for defining and running complex applications with Docker. With Compose, you define a multi-container application in a single file, then"},"FacebookSEO":{"id":516,"Title":"VEXXHOST - Installing Wordpress & PhpMyAdmin with Docker Compose","Url":null,"Description":"Compose is a tool for defining and running complex applications with Docker. With Compose, you define a multi-container application in a single file, then","SiteName":"VEXXHOST","Image":{"id":706,"name":"All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083261/small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":25.2,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083260/medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":46.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":8.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","ext":".jpg","mime":"image/jpeg","size":50.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"},"created_at":"2021-03-30T05:47:41.329Z","updated_at":"2021-03-30T05:47:41.418Z"}},"TwitterSEO":{"id":516,"Description":"Compose is a tool for defining and running complex applications with Docker. With Compose, you define a multi-container application in a single file, then","Title":"VEXXHOST - Installing Wordpress & PhpMyAdmin with Docker Compose","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":706,"name":"All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083261/small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"small_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":25.2,"width":500,"height":250,"provider_metadata":{"public_id":"small_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083260/medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"medium_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":46.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","hash":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","mime":"image/jpeg","name":"thumbnail_All-progress-takes-place-outside-the-comfort-zone-3-800x400.jpg","path":null,"size":8.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"}}},"hash":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","ext":".jpg","mime":"image/jpeg","size":50.92,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083259/All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"All_progress_takes_place_outside_the_comfort_zone_3_800x400_7f105e89ce","resource_type":"image"},"created_at":"2021-03-30T05:47:41.329Z","updated_at":"2021-03-30T05:47:41.418Z"}}},"LinkToResource":{"id":447,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":717,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083569/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":17.53,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083568/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":28.05,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083566/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-2-800x400.jpg","path":null,"size":7.04,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","ext":".jpg","mime":"image/jpeg","size":30,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617083566/Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_2_800x400_e40d18c26c","resource_type":"image"},"created_at":"2021-03-30T05:52:49.707Z","updated_at":"2021-03-30T05:52:49.820Z"},"TextContent":"Compose is a tool for defining and running complex applications with Docker. With Compose, you define a multi-container application in a single file, then spin your application up in a single command which does everything that needs to be done to get it running. This post demonstrates how you can deploy WordPress and PhpMyAdmin application with LAMP (Linux Apache MySQL/MariaDB and PHP) using the docker-compose. In our previous post, we have shown you the installation and usage of docker-compose on Ubuntu 14.04 by deploying the test image from the docker hub. Today we’re going demonstrate the steps to install WordPress and PhpMyAdmin with docker-compose to install these applications directly from the docker hub from there available images.We will be distributing this post in two parts, in the first part we need to create the two containers that are WordPress and MariaDB as both are available in there separate images. After that, we will be deploying the PhpMyAdmin using the docker-compose container and the integration with WordPress.Requirements:The basic requirement to install WordPress and PhpMyAdmin with Docker Compose is that you should have an Ubuntu instance with the latest updates. It should have Docker and docker-compose installed on your Ubuntu server. You can refer to our previous post on ‘How to install and use Docker Compose on Ubuntu 14.04”.So, Once are ready with the prerequisites then you can start deployment of your WordPress, MariaDB and PhpMyAdmin containers with docker-compose and so on.Installing WordPress with docker-compose:Login to your ubuntu 14.04 server using ssh or command-line interface. Run the command below to check the status of the docker service that should be in running state.ubuntu@ubuntu-14:~$ service docker status docker start/running, process 28472Then create a new directory naming with ‘WordPress’ and switch into this to create a new YML file where we will be doing the configuration of the new container in it.$ mkdir wordpress$ cd wordpress/ubuntu@ubuntu-14:~/wordpress$ vi docker-compose.ymlOnce the docker pull process complete, you will see some errors at the end of the process missing ‘WORDPRESS_DB_HOST‘ and MYSQL_PORT_3306_TCP environment variables.To fix this Error message we need to set up its database using the MariaDB docker image. So in the next step, we are going to pull the MariaDB docker image and link it to ‘WordPress’.Installing MariaDB Container:To create a link between the WordPress container and MariaDB container, Open the same ‘docker-compose.yml’ file and then append in the following way.ubuntu@ubuntu-14:~/wordpress$ vi docker-compose.ymlwordpress:  image: wordpress  links:    - wordpress_db:mysql wordpress_db:  image: mariadbHere in the configuration file of docker-compose, we have defined a link that is mysql used by the wordpress_db next, we have defined the new container name as wordpress_db which refers to the new mariadb image that will be downloaded from the docker hub after saving this file and then executing the below command.ubuntu@ubuntu-14:~/wordpress$ docker-compose upAfter completing the installation process of MariaDB, you will see some errors like “database is uninitialized and MYSQL_ROOT_PASSWORD not set” and “missing required WORDPRESS_DB_PASSWORD environment variable” as shown in the below image.Configuring WordPress Environment Variables:Open the main docker-compose configuration file using any of your command line editor and configure the required environment variables. Here we will be setting up the MYSQL_ROOT_PASSWORD and the ports forwarding from the 8080 to default webserver port 80 by making the following changes under wordpress and wordpress_db references respectively.ubuntu@ubuntu-14:~/wordpress$ vi docker-compose.ymlports: - 8080:80 environment:    MYSQL_ROOT_PASSWORD: passwordYour final configuration file should like the same as shown below.Now within the same WordPress folder run the docker-compose command to recreate the WordPress containers.Now you can access your WordPress web portal from any of your web browsers by giving your fully qualified domain name or the IP of your server with port ‘8080’. You will be able to see the WordPress installation setup on your browser.http://your_server_IP:8080After installing the WordPress you can log in with your user name and password to access your WordPress web portal.Adding PhpMyAdmin Container to WordPress Container:Now the second part begins, here we will be showing you the steps to install PhpMyAdmin a community developed image then links it to the wordpress_db by making some configuration changes in the same ‘docker-compose.yml’ file within the ‘WordPress’ directory.Let’s open it using any command-line editor and then append with the following configurations in it.phpmyadmin:  image: corbinu/docker-phpmyadmin  links:    - wordpress_db:mysql  ports:    - 8181:80  environment:    MYSQL_USERNAME: root    MYSQL_ROOT_PASSWORD: passwordYour final configuration file should be looks like the same as shown below and make sure that you keep the same password under the environment variables.After saving the configurations once again run the docker-compose command to create and start the container, append your command with ‘-d’ if your wish to run the process in the background.ubuntu@ubuntu-14:~/wordpress$ docker-compose up -dOnce the pulling process is finished, then open your server’s IP address using port ‘8181’. You will see the login screen of PhpMyAdmin. Login using the same credentials that you have configured in your .yml file then you will be directed toward the web interface of PhpMyAdmin.http://your_servers_ip:8181Conclusion:Congratulations, we have successfully installed WordPress and PhpMyAdmin using the Docker Compose containers on our Ubuntu 14.04 server. Like the same way, you create any application depending upon their availability of image on docker hub. Docker Compose makes dealing with the orchestration processes of Docker containers such as starting up, shutting down, and setting up intra-container linking and volumes really easy. Thank you for reading this article we hope you have got this much helpful. Feel free to get back to us in case of any difficulty."},{"id":57,"Title":"How To Install and Use Docker Compose on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Docker is an open platform for distributed applications for developers and sysadmins. You can achieve agility and control for Development and IP Operations team to build, ship and run any application anywhere. It lets you quickly assemble applications from components and eliminates the friction that can come when shipping code. Using docker, you can get your code tested and deployed into production as fast as possible.</p><p style=\"margin-left:0px;\">Docker containers, and the work flow that comes with them helps you in getting your code into production and make it useful. Docker containers run on almost everywhere. You can deploy containers on desktops, physical servers, virtual machines, into data centers, and up to public and private clouds.</p><p style=\"margin-left:0px;\">Docker transforms all distributed applications that consists of many small applications into individual containers that are linked together. So, instead of having to build, run and manage each individual container separately, Docker Compose allows you to define your multi-container application with all of its dependencies in a single file then spin your application up in a single command. Your application’s structure and configuration are held in a single place which makes spinning up applications simple and repeatable everywhere.</p><h2 style=\"margin-left:0px;\">Basic Requirements:</h2><p style=\"margin-left:0px;\">To install and use Docker compose on Ubuntu 14.04 , you need the root credentials to login to your Ubuntu instance then create a non-root sudo user.</p><p style=\"margin-left:0px;\">You can use the following command to create a new user in Ubuntu.</p><p># adduser ubuntu</p><p style=\"margin-left:0px;\">Give the password and new user information and then run the following command to add the newly created group in ‘sudo’ group.</p><p># gpasswd -a ubuntu sudo</p><p style=\"margin-left:0px;\">Now you can use your ‘ubuntu’ user to run commands with super user privileges. After setting up the new user, you can switch to general user and then make sure that your ubuntu server is up to date with latest updates and security patches. You can use below command to update your server.</p><p>$ sudo apt-get update</p><p style=\"margin-left:0px;\">Press the ‘Y’ key to continue with system update process.</p><h2 style=\"margin-left:0px;\">Installing Docker:</h2><p style=\"margin-left:0px;\">After completing the prerequisites, now take your first step to install Docker image on Ubuntu. Docker image is like a complete Linux installation package that contains the minimum packages needed to run the image. So, the best and the easiest way to install Docker is to run the following command that will download and install its required Docker image.</p><p>$ wget -qO- https://get.docker.com/ | sh</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">The download process will take a while depending on the speed of your internet connection. After complete execution of this command, you will find the version of docker client and server as shown in the image below.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Then run the command below to use Docker as non-root user by adding your current user to the “docker” group.</p><p>$ sudo usermod -aG docker ubuntu</p><p style=\"margin-left:0px;\">To activate the new “docker” group, you have to logout and then login again on your system.</p><h2 style=\"margin-left:0px;\">Installing Docker Compose:</h2><p style=\"margin-left:0px;\">Docker Compose applications are easy to share with your teams. You just need to define your application with Docker Compose once and use that same configuration to run the application on other machines to&nbsp;save your time.</p><p style=\"margin-left:0px;\">To install Docker compose, we need to install the following package as a prerequisite before installing the docker-compose.</p><p>$ sudo apt-get install python-pip</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Press “Y” to continue the installation and a number of addition packages will be installed including our required package.</p><p style=\"margin-left:0px;\">After that, you are ready to install docker-compose by running the below command in your command line terminal.</p><p>$ sudo pip install docker-compose</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084196/4_1_0f24748c46.png\"></figure><p style=\"margin-left:0px;\"><br>At the end of this command you will see that it has successfully installed docker-compose, docopt, requests, texttable and few other packages.</p><h2 style=\"margin-left:0px;\">Testing Container with Docker Compose:</h2><p style=\"margin-left:0px;\">Docker containers are isolated from the host machine and the host machine has no access to the file system inside the Docker container by default.</p><p style=\"margin-left:0px;\">Now, we are going to test docker-compose using the public docker registry and docker hub which&nbsp;contains the sample Hello world image.</p><p style=\"margin-left:0px;\">Let’s create a new directory into your user’s home directory</p><p>$ mkdir hello-world</p><p style=\"margin-left:0px;\">Now, create a new YAML file within this newly created directory using any of your editor and put the following two lines in it where your first line will be indicating the name of your container and the second line will specify the image that will be going to create the container.</p><p>$ vi hello-world/docker-compose.ymldocker-test: image: hello-world</p><p style=\"margin-left:0px;\">After saving the file, run the following command to create the container with your current directory as shown below.</p><p>ubuntu@ubuntu-14:~/hello-world$ docker-compose up</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084212/5_1_c0e8570ac2.png\"></figure><p style=\"margin-left:0px;\">After successful execution of the ‘docker-compose up’ command, you can see the step that will take place while building the new container and fetching the latest hello-world image from it Docker hub repository.</p><h2 style=\"margin-left:0px;\">Using Docker Compose Commands:</h2><p style=\"margin-left:0px;\">You can create multiple containers as many as you want by creating the separate directory and the YML within each new containers directory.</p><p style=\"margin-left:0px;\">To use docker-compose from command line, run the following commands to get help in using its different command line options.</p><p>$ docker-compose -h</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084227/6_1_1571fb6acc.png\"></figure><p style=\"margin-left:0px;\">To check the total number of docker containers, you can run the below command.</p><p>$ docker-compose ps</p><p style=\"margin-left:0px;\">To stop/start the docker container from your application group, use the below commands.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084244/7_1_81722aacf0.png\"></figure><p style=\"margin-left:0px;\">Here the Exit state shows that ‘helloworld_docker-test_1’ container is stopped if it is ‘Up’ then its means that your container in running.</p><h2 style=\"margin-left:0px;\">Conclusion:</h2><p style=\"margin-left:0px;\">At the end of this tutorial, you learned about the basic concepts of Docker compose , its installation on Ubuntu 14.04 and its usage to create and manage new containers on docker-compose. You&nbsp;can also deploy multiple applications in no time using the docker-compose. We hope you found&nbsp;this article&nbsp;helpful as a starting point on docker. In our next article, we will show you the complete deployment steps in installing WordPress with PhpMyadmin using the Docker-compose on Ubuntu 14.04. Don’t hesitate to leave your feedback&nbsp;and let us know your comments and suggestions.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T06:04:56.531Z","created_at":"2021-03-30T06:04:49.010Z","updated_at":"2021-03-30T06:04:56.818Z","PostSEO":{"id":531,"GoogleSEO":{"id":522,"Title":"How To Install and Use Docker Compose on Ubuntu 14.04 - VEXXHOST","Description":"Docker is an open platform for distributed applications for developers and sysadmins. You can achieve agility and control for Development and IP"},"FacebookSEO":{"id":518,"Title":"How To Install and Use Docker Compose on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Docker is an open platform for distributed applications for developers and sysadmins. You can achieve agility and control for Development and IP","SiteName":"VEXXHOST","Image":{"id":733,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084164/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":20.07,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084163/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":34.65,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084163/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":7.46,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","ext":".jpg","mime":"image/jpeg","size":36.72,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084162/Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"},"created_at":"2021-03-30T06:02:44.622Z","updated_at":"2021-03-30T06:02:44.632Z"}},"TwitterSEO":{"id":518,"Description":"Docker is an open platform for distributed applications for developers and sysadmins. You can achieve agility and control for Development and IP","Title":"How To Install and Use Docker Compose on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":733,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084164/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":20.07,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084163/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":34.65,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084163/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":7.46,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","ext":".jpg","mime":"image/jpeg","size":36.72,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084162/Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"},"created_at":"2021-03-30T06:02:44.622Z","updated_at":"2021-03-30T06:02:44.632Z"}}},"LinkToResource":{"id":449,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":733,"name":"Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084164/small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"small_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":20.07,"width":500,"height":250,"provider_metadata":{"public_id":"small_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084163/medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"medium_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":34.65,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084163/thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","hash":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","mime":"image/jpeg","name":"thumbnail_Copy-of-All-progress-takes-place-outside-the-comfort-zone-1-800x400.jpg","path":null,"size":7.46,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"}}},"hash":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","ext":".jpg","mime":"image/jpeg","size":36.72,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084162/Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Copy_of_All_progress_takes_place_outside_the_comfort_zone_1_800x400_fe094f0c07","resource_type":"image"},"created_at":"2021-03-30T06:02:44.622Z","updated_at":"2021-03-30T06:02:44.632Z"},"TextContent":"Docker is an open platform for distributed applications for developers and sysadmins. You can achieve agility and control for Development and IP Operations team to build, ship and run any application anywhere. It lets you quickly assemble applications from components and eliminates the friction that can come when shipping code. Using docker, you can get your code tested and deployed into production as fast as possible.Docker containers, and the work flow that comes with them helps you in getting your code into production and make it useful. Docker containers run on almost everywhere. You can deploy containers on desktops, physical servers, virtual machines, into data centers, and up to public and private clouds.Docker transforms all distributed applications that consists of many small applications into individual containers that are linked together. So, instead of having to build, run and manage each individual container separately, Docker Compose allows you to define your multi-container application with all of its dependencies in a single file then spin your application up in a single command. Your application’s structure and configuration are held in a single place which makes spinning up applications simple and repeatable everywhere.Basic Requirements:To install and use Docker compose on Ubuntu 14.04 , you need the root credentials to login to your Ubuntu instance then create a non-root sudo user.You can use the following command to create a new user in Ubuntu.# adduser ubuntuGive the password and new user information and then run the following command to add the newly created group in ‘sudo’ group.# gpasswd -a ubuntu sudoNow you can use your ‘ubuntu’ user to run commands with super user privileges. After setting up the new user, you can switch to general user and then make sure that your ubuntu server is up to date with latest updates and security patches. You can use below command to update your server.$ sudo apt-get updatePress the ‘Y’ key to continue with system update process.Installing Docker:After completing the prerequisites, now take your first step to install Docker image on Ubuntu. Docker image is like a complete Linux installation package that contains the minimum packages needed to run the image. So, the best and the easiest way to install Docker is to run the following command that will download and install its required Docker image.$ wget -qO- https://get.docker.com/ | sh The download process will take a while depending on the speed of your internet connection. After complete execution of this command, you will find the version of docker client and server as shown in the image below. Then run the command below to use Docker as non-root user by adding your current user to the “docker” group.$ sudo usermod -aG docker ubuntuTo activate the new “docker” group, you have to logout and then login again on your system.Installing Docker Compose:Docker Compose applications are easy to share with your teams. You just need to define your application with Docker Compose once and use that same configuration to run the application on other machines to save your time.To install Docker compose, we need to install the following package as a prerequisite before installing the docker-compose.$ sudo apt-get install python-pip Press “Y” to continue the installation and a number of addition packages will be installed including our required package.After that, you are ready to install docker-compose by running the below command in your command line terminal.$ sudo pip install docker-composeAt the end of this command you will see that it has successfully installed docker-compose, docopt, requests, texttable and few other packages.Testing Container with Docker Compose:Docker containers are isolated from the host machine and the host machine has no access to the file system inside the Docker container by default.Now, we are going to test docker-compose using the public docker registry and docker hub which contains the sample Hello world image.Let’s create a new directory into your user’s home directory$ mkdir hello-worldNow, create a new YAML file within this newly created directory using any of your editor and put the following two lines in it where your first line will be indicating the name of your container and the second line will specify the image that will be going to create the container.$ vi hello-world/docker-compose.ymldocker-test: image: hello-worldAfter saving the file, run the following command to create the container with your current directory as shown below.ubuntu@ubuntu-14:~/hello-world$ docker-compose upAfter successful execution of the ‘docker-compose up’ command, you can see the step that will take place while building the new container and fetching the latest hello-world image from it Docker hub repository.Using Docker Compose Commands:You can create multiple containers as many as you want by creating the separate directory and the YML within each new containers directory.To use docker-compose from command line, run the following commands to get help in using its different command line options.$ docker-compose -hTo check the total number of docker containers, you can run the below command.$ docker-compose psTo stop/start the docker container from your application group, use the below commands.Here the Exit state shows that ‘helloworld_docker-test_1’ container is stopped if it is ‘Up’ then its means that your container in running.Conclusion:At the end of this tutorial, you learned about the basic concepts of Docker compose , its installation on Ubuntu 14.04 and its usage to create and manage new containers on docker-compose. You can also deploy multiple applications in no time using the docker-compose. We hope you found this article helpful as a starting point on docker. In our next article, we will show you the complete deployment steps in installing WordPress with PhpMyadmin using the Docker-compose on Ubuntu 14.04. Don’t hesitate to leave your feedback and let us know your comments and suggestions."},{"id":63,"Title":"How to configure HTTP authentication with Nginx on Ubuntu 14.04","Slug":"resources/tutorials/how-to-configure-http-authentication-with-nginx-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">HTTP&nbsp;supports the use of several&nbsp;authentication&nbsp;mechanisms to control access to pages and other resources. These mechanisms are all based around the use of the 401 status code and the WWW-Authenticate&nbsp;response header. HTTP authentication is the simplest technique for enforcing access controls to web resources because it does not require session identifiers, login pages and cookies. It uses a static HTTP header which means that no handshakes have to be done in anticipation.</p><p style=\"margin-left:0px;\">So in this tutorial, we will show you the steps needed to set up HTTP Authentication on Ubuntu 14.04 LTS with Nginx.</p><h2 style=\"margin-left:0px;\">Basic Requirements</h2><p style=\"margin-left:0px;\">In order to setup HTTP authentication with Nginx, you must have an installed operating system with Ubuntu and Nginx web server setup.</p><p style=\"margin-left:0px;\">Here is the status of our base operating system and Nginx version where we are going to configure HTTP authentication in the next steps.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145788/18_70fbb87299.png\"></figure><h2 style=\"margin-left:0px;\">Installing Required Packages</h2><p style=\"margin-left:0px;\">To set up HTTP Authentication for a directory, we will use the `htpasswd`command to create an encrypted user and password. So to make this command available, we have to install the following package for Ubuntu.</p><p>root@ubuntu-14:~# apt-get install apache2-utils</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145802/21_66a623fb38.png\"></figure><p style=\"margin-left:0px;\">Once we have the package installed, we can confirm if it exists in the system or not with the help of `which` command as shown below.</p><p>root@ubuntu-14:~# which htpasswd /usr/bin/htpasswd</p><p style=\"margin-left:0px;\">Now, we can proceed with the creation of our `.htpasswd` file which will contain the information about the username and the password.</p><h2 style=\"margin-left:0px;\">Creating User and Password</h2><p style=\"margin-left:0px;\">Here we will create a `.htpasswd` file under the document root directory of our virtual host or website being served by Nginx. Let’s run the following command that will create the file and add the user with an encrypted password.</p><p>root@ubuntu-14:~# htpasswd -c /etc/nginx/.htpasswd testuser</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145823/31_0059750841.png\"></figure><p style=\"margin-left:0px;\">In the above command we can describe the used parameters where `/etc/nginx/` is the directory that we want to set for the authentication while `testuser` is the new user name that will be used for authentication purposes. So after executing the command, it will ask for the new password to set for the new user and that’s it! We’re done with the new user setup for our web directory.</p><h2 style=\"margin-left:0px;\">Nginx Configurations Update</h2><p style=\"margin-left:0px;\">Now we will modify the Nginx configuration file to use the .htpasswd file. In our case, we will be using our virtual host’s Nginx configuration file located in `/etc/nginx/sites-available/` directory. Make sure that you are using the right configuration file as your domain config may have a different name.</p><p style=\"margin-left:0px;\">Let’s open the virtual host conf file using any editor you are comfortable with.</p><p>root@ubuntu-14:~# vim /etc/nginx/sites-available/test.com</p><p style=\"margin-left:0px;\">Press `i` for insertion mode and add the following two lines as required under the servers section.</p><p>auth_basic \"Username and Password required\"; auth_basic_user_file /etc/nginx/.htpasswd;</p><p style=\"margin-left:0px;\">Press `Esc` key and type `:wq!` to save the changes in the configuration file of your virtual hosts file.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145838/41_b1c39026bd.png\"></figure><p style=\"margin-left:0px;\">The first line defines the text that we will see in the login box when we access the folder using a web browser and the second one contains the path to our `.htpasswd` file where the username and the password is stored.</p><h2 style=\"margin-left:0px;\">Restart Nginx</h2><p style=\"margin-left:0px;\">Now, to implement the changes on our test virtual host, reload or restart the nginx services and access the domain that has been secured using Basic HTTP Authentication.</p><p>root@ubuntu-14:~# service nginx restart * Restarting nginx nginx</p><h2 style=\"margin-left:0px;\">Secure Web Access</h2><p style=\"margin-left:0px;\">Access your website by providing your configured domain name or IP address or the domain path that you have secured and you will notice a browser prompt to enter the login and password as shown below. After providing the preconfigured username and password you will be able to see your web page.</p><p>http://your_domain_name/</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145876/51_2d98a90def.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">Congratulations! Your http authentication has been configured successfully with Nginx. The basic authentication does offer maximum interoperability and downward compatibility. Any client (even a shell script with curl) could consume your service easily, as long as they have valid credentials.</p><p style=\"margin-left:0px;\">&nbsp;</p><p style=\"margin-left:0px;\">Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T23:12:06.435Z","created_at":"2021-03-30T23:11:55.035Z","updated_at":"2021-03-30T23:12:06.738Z","PostSEO":{"id":538,"GoogleSEO":{"id":529,"Title":"How to configure HTTP authentication with Nginx on Ubuntu 14.04 - VEXXHOST","Description":"HTTP supports the use of several authentication mechanisms to control access to pages and other resources. These mechanisms are all based around the use"},"FacebookSEO":{"id":525,"Title":"How to configure HTTP authentication with Nginx on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"HTTP supports the use of several authentication mechanisms to control access to pages and other resources. These mechanisms are all based around the use","SiteName":"VEXXHOST","Image":{"id":782,"name":"jpg-768x384_ (1).jpg","alternativeText":"","caption":"","width":768,"height":384,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145762/small_jpg_768x384_1_97a474281a.jpg","hash":"small_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"small_jpg-768x384_ (1).jpg","path":null,"size":10.15,"width":500,"height":250,"provider_metadata":{"public_id":"small_jpg_768x384_1_97a474281a","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145761/medium_jpg_768x384_1_97a474281a.jpg","hash":"medium_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"medium_jpg-768x384_ (1).jpg","path":null,"size":17.09,"width":750,"height":375,"provider_metadata":{"public_id":"medium_jpg_768x384_1_97a474281a","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145760/thumbnail_jpg_768x384_1_97a474281a.jpg","hash":"thumbnail_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"thumbnail_jpg-768x384_ (1).jpg","path":null,"size":3.9,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_jpg_768x384_1_97a474281a","resource_type":"image"}}},"hash":"jpg_768x384_1_97a474281a","ext":".jpg","mime":"image/jpeg","size":17.28,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145760/jpg_768x384_1_97a474281a.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"jpg_768x384_1_97a474281a","resource_type":"image"},"created_at":"2021-03-30T23:09:22.811Z","updated_at":"2021-03-30T23:09:22.919Z"}},"TwitterSEO":{"id":525,"Description":"HTTP supports the use of several authentication mechanisms to control access to pages and other resources. These mechanisms are all based around the use","Title":"How to configure HTTP authentication with Nginx on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":782,"name":"jpg-768x384_ (1).jpg","alternativeText":"","caption":"","width":768,"height":384,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145762/small_jpg_768x384_1_97a474281a.jpg","hash":"small_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"small_jpg-768x384_ (1).jpg","path":null,"size":10.15,"width":500,"height":250,"provider_metadata":{"public_id":"small_jpg_768x384_1_97a474281a","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145761/medium_jpg_768x384_1_97a474281a.jpg","hash":"medium_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"medium_jpg-768x384_ (1).jpg","path":null,"size":17.09,"width":750,"height":375,"provider_metadata":{"public_id":"medium_jpg_768x384_1_97a474281a","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145760/thumbnail_jpg_768x384_1_97a474281a.jpg","hash":"thumbnail_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"thumbnail_jpg-768x384_ (1).jpg","path":null,"size":3.9,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_jpg_768x384_1_97a474281a","resource_type":"image"}}},"hash":"jpg_768x384_1_97a474281a","ext":".jpg","mime":"image/jpeg","size":17.28,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145760/jpg_768x384_1_97a474281a.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"jpg_768x384_1_97a474281a","resource_type":"image"},"created_at":"2021-03-30T23:09:22.811Z","updated_at":"2021-03-30T23:09:22.919Z"}}},"LinkToResource":{"id":455,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":782,"name":"jpg-768x384_ (1).jpg","alternativeText":"","caption":"","width":768,"height":384,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145762/small_jpg_768x384_1_97a474281a.jpg","hash":"small_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"small_jpg-768x384_ (1).jpg","path":null,"size":10.15,"width":500,"height":250,"provider_metadata":{"public_id":"small_jpg_768x384_1_97a474281a","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145761/medium_jpg_768x384_1_97a474281a.jpg","hash":"medium_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"medium_jpg-768x384_ (1).jpg","path":null,"size":17.09,"width":750,"height":375,"provider_metadata":{"public_id":"medium_jpg_768x384_1_97a474281a","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145760/thumbnail_jpg_768x384_1_97a474281a.jpg","hash":"thumbnail_jpg_768x384_1_97a474281a","mime":"image/jpeg","name":"thumbnail_jpg-768x384_ (1).jpg","path":null,"size":3.9,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_jpg_768x384_1_97a474281a","resource_type":"image"}}},"hash":"jpg_768x384_1_97a474281a","ext":".jpg","mime":"image/jpeg","size":17.28,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145760/jpg_768x384_1_97a474281a.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"jpg_768x384_1_97a474281a","resource_type":"image"},"created_at":"2021-03-30T23:09:22.811Z","updated_at":"2021-03-30T23:09:22.919Z"},"TextContent":"HTTP supports the use of several authentication mechanisms to control access to pages and other resources. These mechanisms are all based around the use of the 401 status code and the WWW-Authenticate response header. HTTP authentication is the simplest technique for enforcing access controls to web resources because it does not require session identifiers, login pages and cookies. It uses a static HTTP header which means that no handshakes have to be done in anticipation.So in this tutorial, we will show you the steps needed to set up HTTP Authentication on Ubuntu 14.04 LTS with Nginx.Basic RequirementsIn order to setup HTTP authentication with Nginx, you must have an installed operating system with Ubuntu and Nginx web server setup.Here is the status of our base operating system and Nginx version where we are going to configure HTTP authentication in the next steps.Installing Required PackagesTo set up HTTP Authentication for a directory, we will use the `htpasswd`command to create an encrypted user and password. So to make this command available, we have to install the following package for Ubuntu.root@ubuntu-14:~# apt-get install apache2-utilsOnce we have the package installed, we can confirm if it exists in the system or not with the help of `which` command as shown below.root@ubuntu-14:~# which htpasswd /usr/bin/htpasswdNow, we can proceed with the creation of our `.htpasswd` file which will contain the information about the username and the password.Creating User and PasswordHere we will create a `.htpasswd` file under the document root directory of our virtual host or website being served by Nginx. Let’s run the following command that will create the file and add the user with an encrypted password.root@ubuntu-14:~# htpasswd -c /etc/nginx/.htpasswd testuserIn the above command we can describe the used parameters where `/etc/nginx/` is the directory that we want to set for the authentication while `testuser` is the new user name that will be used for authentication purposes. So after executing the command, it will ask for the new password to set for the new user and that’s it! We’re done with the new user setup for our web directory.Nginx Configurations UpdateNow we will modify the Nginx configuration file to use the .htpasswd file. In our case, we will be using our virtual host’s Nginx configuration file located in `/etc/nginx/sites-available/` directory. Make sure that you are using the right configuration file as your domain config may have a different name.Let’s open the virtual host conf file using any editor you are comfortable with.root@ubuntu-14:~# vim /etc/nginx/sites-available/test.comPress `i` for insertion mode and add the following two lines as required under the servers section.auth_basic \"Username and Password required\"; auth_basic_user_file /etc/nginx/.htpasswd;Press `Esc` key and type `:wq!` to save the changes in the configuration file of your virtual hosts file.The first line defines the text that we will see in the login box when we access the folder using a web browser and the second one contains the path to our `.htpasswd` file where the username and the password is stored.Restart NginxNow, to implement the changes on our test virtual host, reload or restart the nginx services and access the domain that has been secured using Basic HTTP Authentication.root@ubuntu-14:~# service nginx restart * Restarting nginx nginxSecure Web AccessAccess your website by providing your configured domain name or IP address or the domain path that you have secured and you will notice a browser prompt to enter the login and password as shown below. After providing the preconfigured username and password you will be able to see your web page.http://your_domain_name/ConclusionCongratulations! Your http authentication has been configured successfully with Nginx. The basic authentication does offer maximum interoperability and downward compatibility. Any client (even a shell script with curl) could consume your service easily, as long as they have valid credentials. Don’t forget to follow us on Twitter for news, updates and announcements – @vexxhost."},{"id":61,"Title":"How To Install & Use Hugo, the Static Site Generator, on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-and-use-hugo-the-static-site-generator-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Hugo is a general-purpose website framework used for generating static websites. It’s written in Go, which makes it the only real popular generator written in a statically compiled language. Sites built with Hugo are very secure and extremely fast, as much as more than 1G acceleration. A great benchmark on YouTube shows Hugo building 5000 pages in about 6 seconds only. Hugo is a recent addition to the world of static website generators, having started just two years ago. It’s certainly growing fast in popularity at the moment. Since your websites are viewed far more often than they are edited, Hugo is optimized for website viewing while providing a great writing experience.</p><p style=\"margin-left:0px;\">Hugo sites run without dependencies on expensive run times like Ruby, Python or PHP and without dependencies on any databases. We think of Hugo as the ideal website creation tool. With almost instant build times and the ability to rebuild whenever a change is made. Hugo provides a very fast feedback loop, which is essential when you are designing websites and creating content.</p><h2 style=\"margin-left:0px;\">Downloading Hugo:</h2><p style=\"margin-left:0px;\">Hugo is incredibly simple to install and update. You just need to download the binary for your platform and run it. No need for any runtime dependencies or installation process.</p><p style=\"margin-left:0px;\">Let’s connect to your Ubuntu 14.04 sever using the non-root pseudo user by opening a putty session or connecting through ssh. Go to https://github.com/spf13/hugo/releases to downloading the latest release of Hugo for Ubuntu server. Simply copy the link address to the latest release and run the command as shown below to download on your server.</p><p>$ wget https://github.com/spf13/hugo/releases/download/v0.15/hugo_0.15_amd64.deb</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085104/19_1_3966e536aa.png\"></figure><h2 style=\"margin-left:0px;\">Installing Hugo:</h2><p style=\"margin-left:0px;\">Once you have downloaded the latest realease of Hugo for your Ubuntu server, run the command below to install.</p><p>$ sudo dpkg -i hugo_0.15_amd64.deb</p><p style=\"margin-left:0px;\">After installation, run the following command to check the version of your installed Hugo package to make sure that you have successfully installed the latest version of Hugo on your Ubuntu 14.04 server.</p><p>$ hugo version</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">Creating your site with Hugo:</h2><p style=\"margin-left:0px;\">Now we are going to deploy our first site using Hugo and it will create a skeleton of your site after you run the command below by giving the path to your site.</p><p>$ hugo new site ~/hugo_web</p><p style=\"margin-left:0px;\">Here we have created a new site ‘hugo_web’ under the home directory of our current user. Now for the rest of the operations, we will be executing all commands from within the site directory. We can see that it has created its own default structure while the site doesn’t have any content, nor it has been configured.</p><h2 style=\"margin-left:0px;\">Installing Packages for Hugo</h2><p style=\"margin-left:0px;\">Now we are going to install a few additional software packages that will help us in Hugo sites’ setup and their usage. So first of all you need to update your system using the command shown below and then follow the steps to install some of the most useful software packages that will help you better use Hugo while developing your static sites.</p><p>$ sudo apt-get update</p><h2 style=\"margin-left:0px;\">Installing Git</h2><p style=\"margin-left:0px;\">To install ‘git’ on our Ubuntu server use the following command with your sudo user.</p><p>$ sudo apt-get install git</p><p style=\"margin-left:0px;\">This will install the git package by consuming 21MB of disk space on your system. To proceed with this installation press ‘y’ and hit the ‘Enter’ key.<br>&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085124/4_4_add0fecf51.png\"></figure><h2 style=\"margin-left:0px;\">Installing Pygments</h2><p style=\"margin-left:0px;\">Pygments is a Python software for Syntax highlighter. We are going to install it using the ‘pip’ command from Python’s package manager as shown.</p><p>$ sudo apt-get install python-pip</p><p style=\"margin-left:0px;\">Confirm the installation and hit the ‘Enter’ key, this will install a number of required python packages to complete the process. Once the python packages are installed on your server run the command below to install the required required package using ‘pip’.</p><p>$ sudo pip install Pygments</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085139/5_4_451d3bc807.png\"></figure><h2 style=\"margin-left:0px;\">Installing Hugo Theme</h2><p style=\"margin-left:0px;\">Hugo themes can be installed by using their git repository that will provide us a number of pre-configured themes. So, run the following ‘git’ command to clone Hugo themes repository on your server.</p><p>$ git clone --recursive https://github.com/spf13/hugoThemes ~/themes</p><p style=\"margin-left:0px;\">Once cloned, create a soft link of it to the ‘hugo_web’ directory of the first site you have created previously.</p><p>$ ln -s themes/ hugo_web/</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085164/6_3_9392e43524.png\"></figure><h2 style=\"margin-left:0px;\">Adding your Site to Git repository</h2><p style=\"margin-left:0px;\">Since we are done with installing some of the supporting packages for Hugo, we will now add our first site to the git repository. To do so, let’s move to your site directory and run the command below to initialize your new git repository.</p><p>$ cd hugo_web/ $ git init</p><p style=\"margin-left:0px;\">After this you need to configure some basic items that are needed to commit code to a repository. You can do so using the commands below.</p><p>$ git config --global user.name \"User Name\" $ git config --global user.email \"user@mail.com\"</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085183/7_3_96c3b304f7.png\"></figure><p style=\"margin-left:0px;\"><br>Now we are going to create a new hidden file in each of these empty directories because git doesn’t commit any empty directories to the repository. So, we can include a hidden ‘.gitkeep’ file in each of these empty directories using the command below.</p><p>$ for DIR in `ls -p | grep /`; do touch ${DIR}.gitkeep; done</p><p style=\"margin-left:0px;\">To check your newly created hidden file under each directory, run the following command.</p><p>$ find . -name .gitkeep</p><p style=\"margin-left:0px;\">Then make sure that the actual HTML, JavaScript, and CSS assets should be generated fresh on each deployment, not kept in source control itself. You can ignore the ‘public’ directory where generated content will be stored by adding its location to ‘.gitignore’ file with the following command.</p><p>kash@ubuntu-14:~/hugo_web$ echo \"public\" &gt;&gt; .gitignore</p><p style=\"margin-left:0px;\">Now add all of the content in the current directory. Committing your clean site skeleton to the repository using below commands.</p><p>$ git add . $ git commit -m 'Initial commit, pre-configuration.'</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085202/8_2_ab5b5692a7.png\"></figure><h2 style=\"margin-left:0px;\">Basic Configurations of New Site</h2><p style=\"margin-left:0px;\">In this section we are going to do the main configuration and file changes for Hugo to set it up the way we want in building the new sites. Let’s open this using your editor and change the baseurl settings to reflect your domain or server’s IP address. We should also set a default theme. We will use a theme called “nofancy” to get started.</p><p>kash@ubuntu-14:~/hugo_web$ vim config.toml</p><p style=\"margin-left:0px;\">baseurl = \"http://162.253.55.185/\"<br>languageCode = \"en-us\"<br>title = \"My New Hugo Site on VEXXHOST\"<br>newContentEditor = \"vim\"<br>theme = \"hugo-uno\"<br>pygmentsStyle = \"native\"</p><p style=\"margin-left:0px;\">Save and close the configuration file using ‘wq!’ then execute the following commands to commit our configuration changes.</p><p>$ git add . $ git commit -m 'Initial configuration complete'</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085225/9_2_24342e41b3.png\"></figure><h2 style=\"margin-left:0px;\">Creating your Site Contents</h2><p style=\"margin-left:0px;\">The basic structure has been setup, now start creating your contents, whether like your home page, about page or publish your new post. Let’s run the below command with ‘Hugo’ to create your first page.</p><p>$ hugo new about.md</p><p style=\"margin-left:0px;\">You will be directed towards the default editor, where you can add your own contents. Similarly, run the following command to create your first blog post with Hugo.</p><p>$ hugo new post/My-Hugo-Post.md</p><p style=\"margin-left:0px;\">+++<br>date = \"2016-01-19T22:43:10Z\"<br>draft = true<br>title = \"My Hugo Post\"</p><p style=\"margin-left:0px;\">+++<br>This is our first post on the site using Hugo. Hope that you like it!</p><p style=\"margin-left:0px;\">## Welcome Function</p><p style=\"margin-left:0px;\">Here is a little Python function to welcome you:</p><p style=\"margin-left:0px;\">{{&lt; highlight python &gt;}}<br>def hello_world():<br>print “Hello geeks!”<br>{{&lt; /highlight &gt;}}</p><p style=\"margin-left:0px;\">Save and close the file and the then run the command as shown below to commit your new pages to the ‘git’ repository.</p><p>$ git add . $ git commit -m 'First post of our site'</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085242/10_3_2a14e2bb22.png\"></figure><h2 style=\"margin-left:0px;\">Running Hugo Server</h2><p style=\"margin-left:0px;\">This is the last step to complete our hugo static website. Run the following commands to build your site and make your pages available on your Hugo server.</p><p>$ hugo $ hugo server --bind=0.0.0.0 --baseUrl=http://your_server_ip/ -D -F</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617085271/11_1_0e0686cf65.png\"></figure><p style=\"margin-left:0px;\"><br>That’s it! Now open your web browser pointing the domain or IP address with port ‘1313’ and you will see the contents of the web page that you created.</p><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">Hugo is great for content-driven websites, because it is completely dependent-free and is easy to get going. What it lacks for in extensibility, it largely makes up for with good content model and super-fast build times. Hope you enjoyed following this tutorial. Please get back to us if you encounter any difficulty or leave your valuable suggestions.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T06:35:52.454Z","created_at":"2021-03-30T06:22:12.738Z","updated_at":"2021-03-30T06:35:53.528Z","PostSEO":{"id":535,"GoogleSEO":{"id":526,"Title":"VEXXHOST - How To Install & Use Hugo, The Static Site Generator.","Description":"Hugo is a general-purpose website framework used for generating static websites. It's written in Go, which makes it the only real popular generator"},"FacebookSEO":{"id":522,"Title":"VEXXHOST - How To Install & Use Hugo, The Static Site Generator.","Url":null,"Description":"Hugo is a general-purpose website framework used for generating static websites. It's written in Go, which makes it the only real popular generator","SiteName":"VEXXHOST","Image":null},"TwitterSEO":{"id":522,"Description":"Hugo is a general-purpose website framework used for generating static websites. It's written in Go, which makes it the only real popular generator","Title":"VEXXHOST - How To Install & Use Hugo, The Static Site Generator.","Site":"@vexxhost","Creator":"@vexxhost","Image":null}},"LinkToResource":{"id":453,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":null,"TextContent":"Hugo is a general-purpose website framework used for generating static websites. It’s written in Go, which makes it the only real popular generator written in a statically compiled language. Sites built with Hugo are very secure and extremely fast, as much as more than 1G acceleration. A great benchmark on YouTube shows Hugo building 5000 pages in about 6 seconds only. Hugo is a recent addition to the world of static website generators, having started just two years ago. It’s certainly growing fast in popularity at the moment. Since your websites are viewed far more often than they are edited, Hugo is optimized for website viewing while providing a great writing experience.Hugo sites run without dependencies on expensive run times like Ruby, Python or PHP and without dependencies on any databases. We think of Hugo as the ideal website creation tool. With almost instant build times and the ability to rebuild whenever a change is made. Hugo provides a very fast feedback loop, which is essential when you are designing websites and creating content.Downloading Hugo:Hugo is incredibly simple to install and update. You just need to download the binary for your platform and run it. No need for any runtime dependencies or installation process.Let’s connect to your Ubuntu 14.04 sever using the non-root pseudo user by opening a putty session or connecting through ssh. Go to https://github.com/spf13/hugo/releases to downloading the latest release of Hugo for Ubuntu server. Simply copy the link address to the latest release and run the command as shown below to download on your server.$ wget https://github.com/spf13/hugo/releases/download/v0.15/hugo_0.15_amd64.debInstalling Hugo:Once you have downloaded the latest realease of Hugo for your Ubuntu server, run the command below to install.$ sudo dpkg -i hugo_0.15_amd64.debAfter installation, run the following command to check the version of your installed Hugo package to make sure that you have successfully installed the latest version of Hugo on your Ubuntu 14.04 server.$ hugo version Creating your site with Hugo:Now we are going to deploy our first site using Hugo and it will create a skeleton of your site after you run the command below by giving the path to your site.$ hugo new site ~/hugo_webHere we have created a new site ‘hugo_web’ under the home directory of our current user. Now for the rest of the operations, we will be executing all commands from within the site directory. We can see that it has created its own default structure while the site doesn’t have any content, nor it has been configured.Installing Packages for HugoNow we are going to install a few additional software packages that will help us in Hugo sites’ setup and their usage. So first of all you need to update your system using the command shown below and then follow the steps to install some of the most useful software packages that will help you better use Hugo while developing your static sites.$ sudo apt-get updateInstalling GitTo install ‘git’ on our Ubuntu server use the following command with your sudo user.$ sudo apt-get install gitThis will install the git package by consuming 21MB of disk space on your system. To proceed with this installation press ‘y’ and hit the ‘Enter’ key. Installing PygmentsPygments is a Python software for Syntax highlighter. We are going to install it using the ‘pip’ command from Python’s package manager as shown.$ sudo apt-get install python-pipConfirm the installation and hit the ‘Enter’ key, this will install a number of required python packages to complete the process. Once the python packages are installed on your server run the command below to install the required required package using ‘pip’.$ sudo pip install PygmentsInstalling Hugo ThemeHugo themes can be installed by using their git repository that will provide us a number of pre-configured themes. So, run the following ‘git’ command to clone Hugo themes repository on your server.$ git clone --recursive https://github.com/spf13/hugoThemes ~/themesOnce cloned, create a soft link of it to the ‘hugo_web’ directory of the first site you have created previously.$ ln -s themes/ hugo_web/Adding your Site to Git repositorySince we are done with installing some of the supporting packages for Hugo, we will now add our first site to the git repository. To do so, let’s move to your site directory and run the command below to initialize your new git repository.$ cd hugo_web/ $ git initAfter this you need to configure some basic items that are needed to commit code to a repository. You can do so using the commands below.$ git config --global user.name \"User Name\" $ git config --global user.email \"user@mail.com\"Now we are going to create a new hidden file in each of these empty directories because git doesn’t commit any empty directories to the repository. So, we can include a hidden ‘.gitkeep’ file in each of these empty directories using the command below.$ for DIR in `ls -p | grep /`; do touch ${DIR}.gitkeep; doneTo check your newly created hidden file under each directory, run the following command.$ find . -name .gitkeepThen make sure that the actual HTML, JavaScript, and CSS assets should be generated fresh on each deployment, not kept in source control itself. You can ignore the ‘public’ directory where generated content will be stored by adding its location to ‘.gitignore’ file with the following command.kash@ubuntu-14:~/hugo_web$ echo \"public\" >> .gitignoreNow add all of the content in the current directory. Committing your clean site skeleton to the repository using below commands.$ git add . $ git commit -m 'Initial commit, pre-configuration.'Basic Configurations of New SiteIn this section we are going to do the main configuration and file changes for Hugo to set it up the way we want in building the new sites. Let’s open this using your editor and change the baseurl settings to reflect your domain or server’s IP address. We should also set a default theme. We will use a theme called “nofancy” to get started.kash@ubuntu-14:~/hugo_web$ vim config.tomlbaseurl = \"http://162.253.55.185/\"languageCode = \"en-us\"title = \"My New Hugo Site on VEXXHOST\"newContentEditor = \"vim\"theme = \"hugo-uno\"pygmentsStyle = \"native\"Save and close the configuration file using ‘wq!’ then execute the following commands to commit our configuration changes.$ git add . $ git commit -m 'Initial configuration complete'Creating your Site ContentsThe basic structure has been setup, now start creating your contents, whether like your home page, about page or publish your new post. Let’s run the below command with ‘Hugo’ to create your first page.$ hugo new about.mdYou will be directed towards the default editor, where you can add your own contents. Similarly, run the following command to create your first blog post with Hugo.$ hugo new post/My-Hugo-Post.md+++date = \"2016-01-19T22:43:10Z\"draft = truetitle = \"My Hugo Post\"+++This is our first post on the site using Hugo. Hope that you like it!## Welcome FunctionHere is a little Python function to welcome you:{{< highlight python >}}def hello_world():print “Hello geeks!”{{< /highlight >}}Save and close the file and the then run the command as shown below to commit your new pages to the ‘git’ repository.$ git add . $ git commit -m 'First post of our site'Running Hugo ServerThis is the last step to complete our hugo static website. Run the following commands to build your site and make your pages available on your Hugo server.$ hugo $ hugo server --bind=0.0.0.0 --baseUrl=http://your_server_ip/ -D -FThat’s it! Now open your web browser pointing the domain or IP address with port ‘1313’ and you will see the contents of the web page that you created.ConclusionHugo is great for content-driven websites, because it is completely dependent-free and is easy to get going. What it lacks for in extensibility, it largely makes up for with good content model and super-fast build times. Hope you enjoyed following this tutorial. Please get back to us if you encounter any difficulty or leave your valuable suggestions."},{"id":59,"Title":"How to install Elasticsearch on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-elasticsearch-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Elasticsearch is a highly scalable open source search engine built on top of Apache Lucene and released under an Apache license. It is a tool for querying written words with some other nifty tasks but its core purpose is to work for wading through text, returning text similar to a query and statistical analysis of a collection of written texts.</p><p style=\"margin-left:0px;\">In this post, we will explain how to setup and run Elasticsearch on Ubuntu 14.04 Server. Let’s start with following this detailed article for step-by-step instructions to setup Elasticsearch server in your environment.</p><h2 style=\"margin-left:0px;\">Pre-requisites</h2><p style=\"margin-left:0px;\">Your operating system must be up to date and have sufficient privileges to perform system level tasks. As Elasticsearch is built using Java, it requires Java installation (atleast Java Version 7) to run. You must have the recommended version of Java 7 or later, else you will be refused to use Elasticsearch using the old version of Java.</p><h2 style=\"margin-left:0px;\">System Update</h2><p style=\"margin-left:0px;\">To update your system with the latest updates, you need to login to your ubuntu server with root user and execute the command below.</p><p>root@ubuntu-14:~# apt-get update</p><p style=\"margin-left:0px;\">After completion of above command, your system is up-to-date.</p><h2 style=\"margin-left:0px;\">Java (JVM) Version</h2><p style=\"margin-left:0px;\">If you already have Java installed on your system, then it is great. But you need to confirm its version as per recommended by the Elasticsearch.</p><p>root@ubuntu-14:~# java -version</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084496/112_6145da6022.png\"></figure><p style=\"margin-left:0px;\">We can see that we already have Java version 7 installed on our Ubuntu 14.04 LTS.</p><p style=\"margin-left:0px;\">Now we need to setup the JAVA_HOME environment variable to configure the Java version. To do so, open `.bashrc` file in your home directory to set `JAVA_HOME` variable.</p><p style=\"margin-left:0px;\">&nbsp;</p><p>root@ubuntu-14:~# vim .bashrc JAVA_HOME=/usr/lib/jvm/java export JAVA_HOME PATH=$PATH:$JAVA_HOME/bin</p><p style=\"margin-left:0px;\">Save the changes and issue the below command to update the user profile.</p><p>root@ubuntu-14:~# source ~/.bashrc</p><h2 style=\"margin-left:0px;\">Public Signing Key Setup for Elasticsearch</h2><p style=\"margin-left:0px;\">To download the latest release for the Elasticsearch on Ubuntu, we will get its key for the package from its official web site <a href=\"http://elastic.co/\">http://elastic.co</a> and add to our local repository with the following command.</p><p>root@ubuntu-14:~# wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add – &lt;/pre&gt;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084509/24_f7fb8b7440.png\"></figure><p style=\"margin-left:0px;\">To save the repository to the `sources.list` file, we will use the `echo` command method to add the ElastricSearch repository with the below shown command.</p><p>root@ubuntu-14:~# echo \"deb http://packages.elastic.co/elasticsearch/1.7/debian stable main\" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-1.7.list</p><p style=\"margin-left:0px;\">Here is the output shown below in response to the above command.</p><p>deb http://packages.elastic.co/elasticsearch/1.7/debian stable main</p><p style=\"margin-left:0px;\">Once we run the `apt-get update` command, our newly added repository will be ready to use for the installation of Elasticsearch package.</p><h2 style=\"margin-left:0px;\">Installing Elasticsearch</h2><p style=\"margin-left:0px;\">Our basic requirements for the installation of Elasticsearch has been setup. Run the following command to start the installation.</p><p>root@ubuntu-14:~# apt-get update &amp;&amp; apt-get install elasticsearch</p><p style=\"margin-left:0px;\">The above command will end up with the output shown below in the terminal.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084529/34_38ae267bc7.png\"></figure><h2 style=\"margin-left:0px;\">Starting Elasticsearch Service</h2><p style=\"margin-left:0px;\">To start Elasticsearch service and then to configure it to automatically start at bootup, we will make use of the following command.</p><p>root@ubuntu-14:~# service elasticsearch start</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084550/44_3f580f013d.png\"></figure><p style=\"margin-left:0px;\">The status shows that Elasticsearch service is running fine. Now, to enable it at boot-up, run the following command.</p><p>root@ubuntu-14:~# update-rc.d elasticsearch defaults 95 10</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084564/54_d670e9999d.png\"></figure><h2 style=\"margin-left:0px;\">Elasticsearch Web Test</h2><p style=\"margin-left:0px;\">To check and confirm that everything is working, let’s open the link below in your web browser with Elasticsearch in its default port `9200` as shown below.</p><p>http://your_servers_ip:9200</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084586/62_b66884c32b.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">Elasticsearch is simple to setup and use. At the end of this tutorial, you learned about the basics of Elasticsearch and its installation setup. We hope that this tutorial has given you a better understanding of what Elasticsearch is and how easily you can deploy it in your environment.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T06:10:49.216Z","created_at":"2021-03-30T06:10:39.708Z","updated_at":"2021-03-30T06:10:49.815Z","PostSEO":{"id":533,"GoogleSEO":{"id":524,"Title":"How to install Elasticsearch on Ubuntu 14.04 - VEXXHOST","Description":"Elasticsearch is a highly scalable open source search engine built on top of Apache Lucene and released under an Apache license. It is a tool for querying"},"FacebookSEO":{"id":520,"Title":"How to install Elasticsearch on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Elasticsearch is a highly scalable open source search engine built on top of Apache Lucene and released under an Apache license. It is a tool for querying","SiteName":"VEXXHOST","Image":{"id":744,"name":"How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084475/small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"small_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":10.54,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084475/medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"medium_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":17.59,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084474/thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"thumbnail_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":4.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}}},"hash":"How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","ext":".jpg","mime":"image/jpeg","size":19.26,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084474/How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"},"created_at":"2021-03-30T06:07:56.082Z","updated_at":"2021-03-30T06:07:56.091Z"}},"TwitterSEO":{"id":520,"Description":"Elasticsearch is a highly scalable open source search engine built on top of Apache Lucene and released under an Apache license. It is a tool for querying","Title":"How to install Elasticsearch on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":744,"name":"How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084475/small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"small_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":10.54,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084475/medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"medium_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":17.59,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084474/thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"thumbnail_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":4.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}}},"hash":"How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","ext":".jpg","mime":"image/jpeg","size":19.26,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084474/How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"},"created_at":"2021-03-30T06:07:56.082Z","updated_at":"2021-03-30T06:07:56.091Z"}}},"LinkToResource":{"id":451,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":744,"name":"How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084475/small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"small_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":10.54,"width":500,"height":250,"provider_metadata":{"public_id":"small_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084475/medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"medium_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":17.59,"width":750,"height":375,"provider_metadata":{"public_id":"medium_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084474/thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","hash":"thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","mime":"image/jpeg","name":"thumbnail_How-to-install-Linux-Apache-MySQL-PHP-LAMP-stack-on-Ubuntu-800x400.jpg","path":null,"size":4.05,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"}}},"hash":"How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","ext":".jpg","mime":"image/jpeg","size":19.26,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084474/How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"How_to_install_Linux_Apache_My_SQL_PHP_LAMP_stack_on_Ubuntu_800x400_890ab5b01f","resource_type":"image"},"created_at":"2021-03-30T06:07:56.082Z","updated_at":"2021-03-30T06:07:56.091Z"},"TextContent":"Elasticsearch is a highly scalable open source search engine built on top of Apache Lucene and released under an Apache license. It is a tool for querying written words with some other nifty tasks but its core purpose is to work for wading through text, returning text similar to a query and statistical analysis of a collection of written texts.In this post, we will explain how to setup and run Elasticsearch on Ubuntu 14.04 Server. Let’s start with following this detailed article for step-by-step instructions to setup Elasticsearch server in your environment.Pre-requisitesYour operating system must be up to date and have sufficient privileges to perform system level tasks. As Elasticsearch is built using Java, it requires Java installation (atleast Java Version 7) to run. You must have the recommended version of Java 7 or later, else you will be refused to use Elasticsearch using the old version of Java.System UpdateTo update your system with the latest updates, you need to login to your ubuntu server with root user and execute the command below.root@ubuntu-14:~# apt-get updateAfter completion of above command, your system is up-to-date.Java (JVM) VersionIf you already have Java installed on your system, then it is great. But you need to confirm its version as per recommended by the Elasticsearch.root@ubuntu-14:~# java -versionWe can see that we already have Java version 7 installed on our Ubuntu 14.04 LTS.Now we need to setup the JAVA_HOME environment variable to configure the Java version. To do so, open `.bashrc` file in your home directory to set `JAVA_HOME` variable. root@ubuntu-14:~# vim .bashrc JAVA_HOME=/usr/lib/jvm/java export JAVA_HOME PATH=$PATH:$JAVA_HOME/binSave the changes and issue the below command to update the user profile.root@ubuntu-14:~# source ~/.bashrcPublic Signing Key Setup for ElasticsearchTo download the latest release for the Elasticsearch on Ubuntu, we will get its key for the package from its official web site http://elastic.co and add to our local repository with the following command.root@ubuntu-14:~# wget -O - http://packages.elasticsearch.org/GPG-KEY-elasticsearch | sudo apt-key add – </pre>To save the repository to the `sources.list` file, we will use the `echo` command method to add the ElastricSearch repository with the below shown command.root@ubuntu-14:~# echo \"deb http://packages.elastic.co/elasticsearch/1.7/debian stable main\" | sudo tee -a /etc/apt/sources.list.d/elasticsearch-1.7.listHere is the output shown below in response to the above command.deb http://packages.elastic.co/elasticsearch/1.7/debian stable mainOnce we run the `apt-get update` command, our newly added repository will be ready to use for the installation of Elasticsearch package.Installing ElasticsearchOur basic requirements for the installation of Elasticsearch has been setup. Run the following command to start the installation.root@ubuntu-14:~# apt-get update && apt-get install elasticsearchThe above command will end up with the output shown below in the terminal.Starting Elasticsearch ServiceTo start Elasticsearch service and then to configure it to automatically start at bootup, we will make use of the following command.root@ubuntu-14:~# service elasticsearch startThe status shows that Elasticsearch service is running fine. Now, to enable it at boot-up, run the following command.root@ubuntu-14:~# update-rc.d elasticsearch defaults 95 10Elasticsearch Web TestTo check and confirm that everything is working, let’s open the link below in your web browser with Elasticsearch in its default port `9200` as shown below.http://your_servers_ip:9200ConclusionElasticsearch is simple to setup and use. At the end of this tutorial, you learned about the basics of Elasticsearch and its installation setup. We hope that this tutorial has given you a better understanding of what Elasticsearch is and how easily you can deploy it in your environment."},{"id":60,"Title":"How to install IonCube Loaders on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-ioncube-loaders-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">IonCube lets you protect your website’s PHP code from being viewed and ran on unlicensed computers. IonCube Loaders is an encryption/decryption utility for PHP applications which also assists in speeding up the pages that are served. Using ionCube, encoded and secured PHP files require a file called ionCube Loader to be installed on the web server and made available to PHP. IonCube Loader is often required for a lot of PHP-based applications; it handles the reading and execution of encoded files at runtime. PHP can use the loader with one line added to a PHP configuration file `php.ini`.</p><p style=\"margin-left:0px;\">In this article, I will setup the installation of Ioncube Loader on Ubuntu 14.04 LTS, so that it can be used in all PHP Modes. The only requirement for this tutorial is to have php.ini file exist in your system with LEMP stack installed.</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">Downloading IonCube</h2><p style=\"margin-left:0px;\">Let’s download the latest IonCube loader package by issuing the following `wget` command with super user privileges or root user according to your operating system architecture, we are using the 64-bit OS.</p><p>root@ubuntu-14:~# wget&nbsp;</p><p><a href=\"http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz\">http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz</a></p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084688/19_c71b662464.png\"></figure><h2 style=\"margin-left:0px;\">Extract the Contents</h2><p style=\"margin-left:0px;\">Now unpack the archive into the desired folder, usually it’s `/usr/local/src/` folder, by issuing the following commands.</p><p>root@ubuntu-14:~# tar -zxvf ioncube_loaders_lin_x86-64.tar.gz -C /usr/local/src/</p><p style=\"margin-left:0px;\">After extracting the archive, we can list the `/usr/local/src/` and view its packages as shown.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084704/22_616ef7b278.png\"></figure><p style=\"margin-left:0px;\">Now clean up the home directory with `rm` command and proceed with the configuration of IonCube Loader.</p><p>root@ubuntu-14:~# rm ioncube_loaders_lin_x86-64.tar.gz</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">IonCube Loader Configuration</h2><p style=\"margin-left:0px;\">We will find the right ionCube extension file to load as it depends on the PHP version. So, issue the following command to find the version number of PHP on your server.</p><p>root@ubuntu-14:~#php –v</p><p style=\"margin-left:0px;\">With reference to the output of the command above, we came to know that the PHP version is `5.5.9`, so we need to copy the appropriate module to the PHP modules folder.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084724/32_e0db52dc3b.png\"></figure><p style=\"margin-left:0px;\">Create a new folder for `ioncube` within the `/usr/local/` directory and copy the required extensions into it.</p><p>root@ubuntu-14:/usr/local/src/ioncube# mkdir /usr/local/ioncube/ root@ubuntu-14:/usr/local/src/ioncube# cp ioncube_loader_lin_5.5.so ioncube_loader_lin_5.5_ts.so /usr/local/ioncube/</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">PHP Modification</h2><p style=\"margin-left:0px;\">Now we need to put the following line into the `php.ini` file which is located in ` /etc/php5/cli/` folder if you are using Ubuntu and then restart your web server’s services and php.</p><p>root@ubuntu-14:~# vim /etc/php5/cli/php.ini</p><p style=\"margin-left:0px;\">Add the line below under the `Dynamic Extensions` section and save the changes.</p><p>zend_extension = /usr/local/ioncube/ioncube_loader_lin_5.5.so :wq!</p><p style=\"margin-left:0px;\">In our scenario, we have Nginx web server installed so we will run the following commands to start its services.</p><p>root@ubuntu-14:~# service php5-fpm restart php5-fpm start/running, process 3028 root@ubuntu-14:~# service nginx restart * Restarting nginx nginx</p><p style=\"margin-left:0px;\">&nbsp;</p><h2 style=\"margin-left:0px;\">Testing IonCube Loader</h2><p style=\"margin-left:0px;\">To test the ioncube loader in the PHP configuration for your website, create a test file called `info.php` with the following content and place it into the web directory of your web server.</p><p>root@ubuntu-14:~# vim /usr/share/nginx/html/info.php &lt;?php phpinfo(); ?&gt;</p><p style=\"margin-left:0px;\">Then save the changes and access `info.php` in your browser with your domain name or server’s IP address after reloading the web server services.</p><p style=\"margin-left:0px;\">You will be able to see the section below at the bottom of your php modules information.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084975/42_22e9ae555c.png\"></figure><p style=\"margin-left:0px;\">From the terminal, issue the following command to verify the php version that shows the ionCube PHP Loader Enabled.</p><p>root@ubuntu-14:~# php5 -v</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617084992/52_7e9e49174e.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">At the end of this tutorial you learned about the installation and configuration of ionCube Loader on Ubuntu with Nginx web server. There will be no difference if you are using any other web server. Installing Loaders is easy when done correctly, and on most servers its installation will work without a problem. However, there is no such thing as a “standard PHP installation”, and servers can be setup in many different ways, and with different features enabled or disabled.</p><p style=\"margin-left:0px;\">If you are on a shared server, make sure that you run the ioncube-loader-helper.php script, and click the link to test runtime installation. If you still face an issue while doing your setup, feel free to contact us and leave us a comment.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T06:17:36.325Z","created_at":"2021-03-30T06:17:28.344Z","updated_at":"2021-03-30T06:17:36.623Z","PostSEO":{"id":534,"GoogleSEO":{"id":525,"Title":"How to install IonCube Loaders on Ubuntu 14.04 - VEXXHOST","Description":"IonCube lets you protect your website's PHP code from being viewed and ran on unlicensed computers. IonCube Loaders is an encryption/decryption utility"},"FacebookSEO":{"id":521,"Title":"How to install IonCube Loaders on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"IonCube lets you protect your website's PHP code from being viewed and ran on unlicensed computers. IonCube Loaders is an encryption/decryption utility","SiteName":"VEXXHOST","Image":{"id":751,"name":"holidays-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084664/small_holidays_800x400_fe43cc5269.jpg","hash":"small_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"small_holidays-800x400.jpg","path":null,"size":18.75,"width":500,"height":250,"provider_metadata":{"public_id":"small_holidays_800x400_fe43cc5269","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084663/medium_holidays_800x400_fe43cc5269.jpg","hash":"medium_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"medium_holidays-800x400.jpg","path":null,"size":30.75,"width":750,"height":375,"provider_metadata":{"public_id":"medium_holidays_800x400_fe43cc5269","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084663/thumbnail_holidays_800x400_fe43cc5269.jpg","hash":"thumbnail_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"thumbnail_holidays-800x400.jpg","path":null,"size":7.48,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_holidays_800x400_fe43cc5269","resource_type":"image"}}},"hash":"holidays_800x400_fe43cc5269","ext":".jpg","mime":"image/jpeg","size":33.12,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084662/holidays_800x400_fe43cc5269.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"holidays_800x400_fe43cc5269","resource_type":"image"},"created_at":"2021-03-30T06:11:04.717Z","updated_at":"2021-03-30T06:11:04.733Z"}},"TwitterSEO":{"id":521,"Description":"IonCube lets you protect your website's PHP code from being viewed and ran on unlicensed computers. IonCube Loaders is an encryption/decryption utility","Title":"How to install IonCube Loaders on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":751,"name":"holidays-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084664/small_holidays_800x400_fe43cc5269.jpg","hash":"small_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"small_holidays-800x400.jpg","path":null,"size":18.75,"width":500,"height":250,"provider_metadata":{"public_id":"small_holidays_800x400_fe43cc5269","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084663/medium_holidays_800x400_fe43cc5269.jpg","hash":"medium_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"medium_holidays-800x400.jpg","path":null,"size":30.75,"width":750,"height":375,"provider_metadata":{"public_id":"medium_holidays_800x400_fe43cc5269","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084663/thumbnail_holidays_800x400_fe43cc5269.jpg","hash":"thumbnail_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"thumbnail_holidays-800x400.jpg","path":null,"size":7.48,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_holidays_800x400_fe43cc5269","resource_type":"image"}}},"hash":"holidays_800x400_fe43cc5269","ext":".jpg","mime":"image/jpeg","size":33.12,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084662/holidays_800x400_fe43cc5269.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"holidays_800x400_fe43cc5269","resource_type":"image"},"created_at":"2021-03-30T06:11:04.717Z","updated_at":"2021-03-30T06:11:04.733Z"}}},"LinkToResource":{"id":452,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":751,"name":"holidays-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084664/small_holidays_800x400_fe43cc5269.jpg","hash":"small_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"small_holidays-800x400.jpg","path":null,"size":18.75,"width":500,"height":250,"provider_metadata":{"public_id":"small_holidays_800x400_fe43cc5269","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084663/medium_holidays_800x400_fe43cc5269.jpg","hash":"medium_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"medium_holidays-800x400.jpg","path":null,"size":30.75,"width":750,"height":375,"provider_metadata":{"public_id":"medium_holidays_800x400_fe43cc5269","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084663/thumbnail_holidays_800x400_fe43cc5269.jpg","hash":"thumbnail_holidays_800x400_fe43cc5269","mime":"image/jpeg","name":"thumbnail_holidays-800x400.jpg","path":null,"size":7.48,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_holidays_800x400_fe43cc5269","resource_type":"image"}}},"hash":"holidays_800x400_fe43cc5269","ext":".jpg","mime":"image/jpeg","size":33.12,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617084662/holidays_800x400_fe43cc5269.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"holidays_800x400_fe43cc5269","resource_type":"image"},"created_at":"2021-03-30T06:11:04.717Z","updated_at":"2021-03-30T06:11:04.733Z"},"TextContent":"IonCube lets you protect your website’s PHP code from being viewed and ran on unlicensed computers. IonCube Loaders is an encryption/decryption utility for PHP applications which also assists in speeding up the pages that are served. Using ionCube, encoded and secured PHP files require a file called ionCube Loader to be installed on the web server and made available to PHP. IonCube Loader is often required for a lot of PHP-based applications; it handles the reading and execution of encoded files at runtime. PHP can use the loader with one line added to a PHP configuration file `php.ini`.In this article, I will setup the installation of Ioncube Loader on Ubuntu 14.04 LTS, so that it can be used in all PHP Modes. The only requirement for this tutorial is to have php.ini file exist in your system with LEMP stack installed. Downloading IonCubeLet’s download the latest IonCube loader package by issuing the following `wget` command with super user privileges or root user according to your operating system architecture, we are using the 64-bit OS.root@ubuntu-14:~# wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gzExtract the ContentsNow unpack the archive into the desired folder, usually it’s `/usr/local/src/` folder, by issuing the following commands.root@ubuntu-14:~# tar -zxvf ioncube_loaders_lin_x86-64.tar.gz -C /usr/local/src/After extracting the archive, we can list the `/usr/local/src/` and view its packages as shown.Now clean up the home directory with `rm` command and proceed with the configuration of IonCube Loader.root@ubuntu-14:~# rm ioncube_loaders_lin_x86-64.tar.gz IonCube Loader ConfigurationWe will find the right ionCube extension file to load as it depends on the PHP version. So, issue the following command to find the version number of PHP on your server.root@ubuntu-14:~#php –vWith reference to the output of the command above, we came to know that the PHP version is `5.5.9`, so we need to copy the appropriate module to the PHP modules folder.Create a new folder for `ioncube` within the `/usr/local/` directory and copy the required extensions into it.root@ubuntu-14:/usr/local/src/ioncube# mkdir /usr/local/ioncube/ root@ubuntu-14:/usr/local/src/ioncube# cp ioncube_loader_lin_5.5.so ioncube_loader_lin_5.5_ts.so /usr/local/ioncube/ PHP ModificationNow we need to put the following line into the `php.ini` file which is located in ` /etc/php5/cli/` folder if you are using Ubuntu and then restart your web server’s services and php.root@ubuntu-14:~# vim /etc/php5/cli/php.iniAdd the line below under the `Dynamic Extensions` section and save the changes.zend_extension = /usr/local/ioncube/ioncube_loader_lin_5.5.so :wq!In our scenario, we have Nginx web server installed so we will run the following commands to start its services.root@ubuntu-14:~# service php5-fpm restart php5-fpm start/running, process 3028 root@ubuntu-14:~# service nginx restart * Restarting nginx nginx Testing IonCube LoaderTo test the ioncube loader in the PHP configuration for your website, create a test file called `info.php` with the following content and place it into the web directory of your web server.root@ubuntu-14:~# vim /usr/share/nginx/html/info.php <?php phpinfo(); ?>Then save the changes and access `info.php` in your browser with your domain name or server’s IP address after reloading the web server services.You will be able to see the section below at the bottom of your php modules information.From the terminal, issue the following command to verify the php version that shows the ionCube PHP Loader Enabled.root@ubuntu-14:~# php5 -vConclusionAt the end of this tutorial you learned about the installation and configuration of ionCube Loader on Ubuntu with Nginx web server. There will be no difference if you are using any other web server. Installing Loaders is easy when done correctly, and on most servers its installation will work without a problem. However, there is no such thing as a “standard PHP installation”, and servers can be setup in many different ways, and with different features enabled or disabled.If you are on a shared server, make sure that you run the ioncube-loader-helper.php script, and click the link to test runtime installation. If you still face an issue while doing your setup, feel free to contact us and leave us a comment."},{"id":62,"Title":"How to install, configure & use Jenkins on Ubuntu 14.04","Slug":"resources/tutorials/how-to-install-configure-and-use-jenkins-on-ubuntu-14-04","Publisher":{"id":6,"username":"mnaser","email":"mnaser@vexxhost.com","provider":"local","confirmed":true,"blocked":false,"role":1,"created_at":"2021-03-18T20:37:23.392Z","updated_at":"2021-03-18T20:37:24.112Z","fullname":"Mohammed Naser","description":"CEO of VEXXHOST by day and avid open source contributor by night, Mohammed contributes back to projects from OpenStack to Ansible, where he is the PTL. Mohammed is experienced in infrastructure operations, having deployed, run, and managed OpenStack clouds for over a decade. You can find him on <a href=\"https://twitter.com/_mnaser\" title=\"Mohammed's Twitter Page\">Twitter</a> where, you guessed it, he talks open source projects.","ContactInfo":null,"ProfilePicture":null},"Published":null,"Content":"<p style=\"margin-left:0px;\">Jenkins is an open source application that monitors execution of repetitive jobs, such as building a software project or jobs ran by cron. It’s written in Java programming language and designed to test and report on isolated changes in a larger code in real time. Basically, Jenkins is a Continuous Integration server which is the best practice of running your tests on a non-developer machine.</p><p style=\"margin-left:0px;\">So the builds on top of Continuous Integration are Continuous Deployment and Delivery where after the successful tests you will be able to run, instantly and automatically release with the latest version of your codebase. We can say Jenkins makes deployment a non-issue and helps you speed up your development.</p><p style=\"margin-left:0px;\">Furthermore, in this article we will show you the step by step installation and configuration of Jenkins on Ubuntu 14.04.</p><h2 style=\"margin-left:0px;\">Basic Requirements</h2><p style=\"margin-left:0px;\">There’s no complex requirement for Jenkins but you must have sufficient superuser privileges to perform some basic installation tasks on your operating system and your system should be properly updated with the latest packages. Furthermore, Jenkins requires to have any basic web server installed on it. So, let’s start the setup of Jenkins on Ubuntu 14.04 LTS operating system.</p><h2 style=\"margin-left:0px;\">System Update</h2><p style=\"margin-left:0px;\">Run the following command to update your operating system before moving on to other packages installation.</p><p>root@ubuntu-14:~# apt-get update</p><h2 style=\"margin-left:0px;\">Basic Web Server</h2><p style=\"margin-left:0px;\">Jenkins requires the basic web server installed on your system, so if you don’t have any of your web server installed on your operating system, you can execute the following command to install the web server.</p><p>root@ubuntu-14:~# apt-get install nginx</p><p style=\"margin-left:0px;\">This will be installing Nginx web server. If you are more comfortable with a different web server, you can also choose other web servers to be installed.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145277/110_48106f5092.png\"></figure><p style=\"margin-left:0px;\">Once your Nginx web server is installed check the status of its services with the command below.</p><p>root@ubuntu-14:~# service nginx status * nginx is running</p><p style=\"margin-left:0px;\">It means `Nginx` is working fine, so let’s proceed to next step.</p><h2 style=\"margin-left:0px;\">Java Installation</h2><p style=\"margin-left:0px;\">Now install the Java first through the `apt-get` package manager. For this purpose, you will need to install open source implementation of JAVA Version 7. This is quite easy to do so by executing the command below.</p><p>root@ubuntu-14:~# apt-get install openjdk-7-jdk</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145292/23_9717debbeb.png\"></figure><p style=\"margin-left:0px;\">When you execute the above command, it shows you the list of other recommended and required packages to be installed with Java `openjdk`. To proceed with those packages, you have to press `Y` or type `N` to exit the installer.</p><p style=\"margin-left:0px;\">It will take a few minutes to complete the Java installation. Once it is done, run the command below to check the installed version of Java on your system as shown.</p><p>root@ubuntu-14:~# java –version</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145321/33_2a9f65adc6.png\"></figure><h2 style=\"margin-left:0px;\">Jenkins Installation and Configuration</h2><p style=\"margin-left:0px;\">Now we are ready to install `Jenkins`. So before the package installation, we have to add the key and source list to apt for Jenkins. To do so, issue the following two commands in the terminal.</p><p>root@ubuntu-14:~# wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add – OK</p><p style=\"margin-left:0px;\">You will get the `OK` status after you add the key. For the source list, here is the command to run.</p><p>root@ubuntu-14:~# sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</p><p style=\"margin-left:0px;\">Now it needs to update `apt’s` cache before moving to Jenkins so that it can refresh the operating system’s repository for the latest packages.</p><p>root@ubuntu-14:~# apt-get update</p><p style=\"margin-left:0px;\">Once your system is updated, execute the command below for the installation of Jenkins and type the `Y` key to proceed with the installation process.</p><p>root@ubuntu-14:~# apt-get install Jenkins</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145339/43_bc29ddcf35.png\"></figure><p style=\"margin-left:0px;\">The installation process will end up with starting its daemon. To check the status of Jenkins service, the command below will show you its status with running process ID. Jenkins service run with its default user name `jenkin`.</p><p>root@ubuntu-14:~# service jenkins status</p><p style=\"margin-left:0px;\">Jenkins Continuous Integration Server is running with the pid 16997</p><p style=\"margin-left:0px;\">If you need to update the configurations of Jenkins as per your requirements, then you can find its configuration file under the `/etc/default/` directory and can make the changes.</p><p>root@ubuntu-14:~# vim /etc/default/Jenkins</p><p style=\"margin-left:0px;\">Jenkins runs on port 8080 by default for HTTP connector. Now let’s open your web browser to use its GUI.</p><h2 style=\"margin-left:0px;\">Jenkins GUI Configurations</h2><p style=\"margin-left:0px;\">To use and configure Jenkins, visit the following address in your browser</p><p style=\"margin-left:0px;\">http://your-ip-address:8080</p><p style=\"margin-left:0px;\">You will be surprised to see its welcome screen where you will be able to configure its different parameters for your system.<br>&nbsp;</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145367/53_ee77e9f165.png\"></figure><p style=\"margin-left:0px;\">Click on `Manage Jenkins` and then choose the required parameter to start required configurations.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145491/101_ecb6972077.png\"></figure><h2 style=\"margin-left:0px;\">Jenkins Security Setup</h2><p style=\"margin-left:0px;\">Consider enabling authentication to discourage misuse by configuring Jenkins global security parameters and then apply to save the changes as shown.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145413/71_4576b2e179.png\"></figure><h2 style=\"margin-left:0px;\">Jenkins System Configurations</h2><p style=\"margin-left:0px;\">To configure the global settings and paths for the Jenkins configurations, we’ll make a few changes to enter the correct path to your JDK, Apache Ant and Maven. Jenkins can also install these for you automatically. Once your settings are done, press the Save button to update the changes shown below.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145444/81_e36742c913.png\"></figure><p style=\"margin-left:0px;\">Before you save the changes, make sure to login into Oracle’s account first if you are installing Java.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145467/91_9edc48ea00.png\"></figure><h2 style=\"margin-left:0px;\">Jenkins Plugin Management</h2><p style=\"margin-left:0px;\">We will use Jenkins Plugin Management to add, remove, disable or enable plugins that can extend the functionality of Jenkins.</p><p style=\"margin-left:0px;\">To install plugins in Jenkins, select the `Manage Plugins` link and search for the plugin you want to install. Select it from the list and click to download and install button.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145491/101_ecb6972077.png\"></figure><p style=\"margin-left:0px;\">Check the option to Restart Jenkins when installation is complete and no jobs are running as shown below.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145560/111_efbb4525a2.png\"></figure><p style=\"margin-left:0px;\">After choosing the Restart option, you will be redirected to the Jenkins Restart Page, it will take a while to install the plugins you chose.</p><h2 style=\"margin-left:0px;\">Scheduling First Job with Jenkins</h2><p style=\"margin-left:0px;\">To schedule your new jobs, click the `New Item` on the top left of your Jenkins Dashboard, then enter a name for the job and select `Freestyle Job`. Press OK to create a new Job.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145582/121_22834024a9.png\"></figure><p style=\"margin-left:0px;\">The next page allows you to configure your job, so give it an appropriate name. From the bottom, expand the `Add Build Step` option and select &nbsp;`Execute Shell` where you will put the command that you wish to execute in the terminal, we are using the `w` command here to check the system load and currently logged in users.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145603/131_baabfa4d90.png\"></figure><p style=\"margin-left:0px;\">Once the next page is done loading, click the `Build Now` button on the sidebar of your dashboard.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145627/141_5d33fd7ba7.png\"></figure><p style=\"margin-left:0px;\">Greetings! Here is the output of your first job as shown below, you can also view it in plain text, edit or delete the build if you wish to do so.</p><figure class=\"image\"><img src=\"https://res.cloudinary.com/vexxhost/image/upload/v1617145652/151_d2b12545f2.png\"></figure><h2 style=\"margin-left:0px;\">Conclusion</h2><p style=\"margin-left:0px;\">Jenkins is an incredibly powerful tool. While not as nice to set up and manage as some other build servers, it is incredibly powerful with a lot of flexibility, and to be honest, it’s really hard to complain about an enterprise-level build server for free. Jenkins now has some alternatives, that have been gaining traction. One such tool is Zuul, with numerous gating configurations such as cross-project testing, cross-project dependencies and testing in parallel, this tool does not let any broken code merge into your main branch. Through its ansible integration and multi-repository dependencies like Gerrit, GitHub, GitHub enterprise, Zuul provides flexibility to developers! Zuul drives innovation by allowing both halves of a DevOps cycle to focus on their respective strengths.&nbsp;</p><p style=\"margin-left:0px;\">VEXXHOST now offers a Managed Zuul solution by fully-managing the infrastructure layer underneath and providing support in terms of maintenence and updates.</p>","ThumbnailBgColorHex":null,"TitleColor":null,"published_at":"2021-03-30T23:08:47.252Z","created_at":"2021-03-30T23:08:34.385Z","updated_at":"2021-03-30T23:08:47.719Z","PostSEO":{"id":537,"GoogleSEO":{"id":528,"Title":"How to install, configure & use Jenkins on Ubuntu 14.04 - VEXXHOST","Description":"Jenkins is an open source application that monitors execution of repetitive jobs, such as building a software project or jobs ran by cron. It’s written in"},"FacebookSEO":{"id":524,"Title":"How to install, configure & use Jenkins on Ubuntu 14.04 - VEXXHOST","Url":null,"Description":"Jenkins is an open source application that monitors execution of repetitive jobs, such as building a software project or jobs ran by cron. It’s written in","SiteName":"VEXXHOST","Image":{"id":766,"name":"Untitled-design-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145245/small_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"small_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"small_Untitled-design-2-800x400.jpg","path":null,"size":13.56,"width":500,"height":250,"provider_metadata":{"public_id":"small_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145245/medium_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"medium_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"medium_Untitled-design-2-800x400.jpg","path":null,"size":21.94,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145244/thumbnail_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"thumbnail_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"thumbnail_Untitled-design-2-800x400.jpg","path":null,"size":5.96,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}}},"hash":"Untitled_design_2_800x400_3747ab8d6b","ext":".jpg","mime":"image/jpeg","size":23.15,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145243/Untitled_design_2_800x400_3747ab8d6b.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"},"created_at":"2021-03-30T23:00:45.829Z","updated_at":"2021-03-30T23:00:45.864Z"}},"TwitterSEO":{"id":524,"Description":"Jenkins is an open source application that monitors execution of repetitive jobs, such as building a software project or jobs ran by cron. It’s written in","Title":"How to install, configure & use Jenkins on Ubuntu 14.04 - VEXXHOST","Site":"@vexxhost","Creator":"@vexxhost","Image":{"id":766,"name":"Untitled-design-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145245/small_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"small_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"small_Untitled-design-2-800x400.jpg","path":null,"size":13.56,"width":500,"height":250,"provider_metadata":{"public_id":"small_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145245/medium_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"medium_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"medium_Untitled-design-2-800x400.jpg","path":null,"size":21.94,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145244/thumbnail_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"thumbnail_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"thumbnail_Untitled-design-2-800x400.jpg","path":null,"size":5.96,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}}},"hash":"Untitled_design_2_800x400_3747ab8d6b","ext":".jpg","mime":"image/jpeg","size":23.15,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145243/Untitled_design_2_800x400_3747ab8d6b.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"},"created_at":"2021-03-30T23:00:45.829Z","updated_at":"2021-03-30T23:00:45.864Z"}}},"LinkToResource":{"id":454,"Description":"<h2 style=\"margin-left:0px;text-align:center;\">Would you like to know about Zuul, a CI/CD project gating tool? Download our white paper and get reading!</h2>","Resource":{"id":5,"HeaderTitle":"HOW TO UP YOUR DEVOPS GAME WITH PROJECT GATING","Subtitle":"Zuul: A CI/CD Gating Tool","Slug":"project-gating-zuul-whitepaper","Content":"<p>The process of developing and releasing software is complex. Even after the main release, DevOps teams are continuously making changes and updating applications. CI/CD tools are designed for such groups and organizations that frequently improve on applications, and require a reliable method to deliver their changes.</p><p>Zuul is one such CI/CD tool used to drive automation, ranging from testing proposed changes to deploying builds. Zuul's differentiating factor is co-gating, allowing multiple software changes to be tested against a mock production environment while ensuring that no broken code merges into the main branch.&nbsp;</p><p>Through this resource, VEXXHOST provides you with the necessary information to better understand the suitability of Zuul for your organization. Explore the features of Zuul and learn how the tool can meet your DevOps needs.</p>","Title":"How to up your DevOps Game with Project Gating","published_at":"2021-03-20T15:04:29.078Z","created_at":"2021-03-20T15:04:02.536Z","updated_at":"2021-03-29T10:42:43.523Z","Thumbnail":{"id":576,"name":"Mockup5.jpg","alternativeText":"","caption":"","width":400,"height":350,"formats":{"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Mockup5_2ffd9fdffd.jpg","hash":"thumbnail_Mockup5_2ffd9fdffd","mime":"image/jpeg","name":"thumbnail_Mockup5.jpg","path":null,"size":3.27,"width":178,"height":156,"provider_metadata":{"public_id":"thumbnail_Mockup5_2ffd9fdffd","resource_type":"image"}}},"hash":"Mockup5_2ffd9fdffd","ext":".jpg","mime":"image/jpeg","size":7.96,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Mockup5_2ffd9fdffd.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Mockup5_2ffd9fdffd","resource_type":"image"},"created_at":"2021-03-29T10:42:16.579Z","updated_at":"2021-03-29T10:42:16.594Z"},"BookCover":{"id":577,"name":"Cover5.jpg","alternativeText":"","caption":"","width":400,"height":580,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/small_Cover5_bb74d71ad0.jpg","hash":"small_Cover5_bb74d71ad0","mime":"image/jpeg","name":"small_Cover5.jpg","path":null,"size":27.75,"width":345,"height":500,"provider_metadata":{"public_id":"small_Cover5_bb74d71ad0","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014536/thumbnail_Cover5_bb74d71ad0.jpg","hash":"thumbnail_Cover5_bb74d71ad0","mime":"image/jpeg","name":"thumbnail_Cover5.jpg","path":null,"size":5.73,"width":108,"height":156,"provider_metadata":{"public_id":"thumbnail_Cover5_bb74d71ad0","resource_type":"image"}}},"hash":"Cover5_bb74d71ad0","ext":".jpg","mime":"image/jpeg","size":23.32,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617014535/Cover5_bb74d71ad0.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Cover5_bb74d71ad0","resource_type":"image"},"created_at":"2021-03-29T10:42:17.220Z","updated_at":"2021-03-29T10:42:17.230Z"}}},"Thumbnail":{"id":766,"name":"Untitled-design-2-800x400.jpg","alternativeText":"","caption":"","width":800,"height":400,"formats":{"small":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145245/small_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"small_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"small_Untitled-design-2-800x400.jpg","path":null,"size":13.56,"width":500,"height":250,"provider_metadata":{"public_id":"small_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}},"medium":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145245/medium_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"medium_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"medium_Untitled-design-2-800x400.jpg","path":null,"size":21.94,"width":750,"height":375,"provider_metadata":{"public_id":"medium_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}},"thumbnail":{"ext":".jpg","url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145244/thumbnail_Untitled_design_2_800x400_3747ab8d6b.jpg","hash":"thumbnail_Untitled_design_2_800x400_3747ab8d6b","mime":"image/jpeg","name":"thumbnail_Untitled-design-2-800x400.jpg","path":null,"size":5.96,"width":245,"height":123,"provider_metadata":{"public_id":"thumbnail_Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"}}},"hash":"Untitled_design_2_800x400_3747ab8d6b","ext":".jpg","mime":"image/jpeg","size":23.15,"url":"https://res.cloudinary.com/vexxhost/image/upload/v1617145243/Untitled_design_2_800x400_3747ab8d6b.jpg","previewUrl":null,"provider":"cloudinary","provider_metadata":{"public_id":"Untitled_design_2_800x400_3747ab8d6b","resource_type":"image"},"created_at":"2021-03-30T23:00:45.829Z","updated_at":"2021-03-30T23:00:45.864Z"},"TextContent":"Jenkins is an open source application that monitors execution of repetitive jobs, such as building a software project or jobs ran by cron. It’s written in Java programming language and designed to test and report on isolated changes in a larger code in real time. Basically, Jenkins is a Continuous Integration server which is the best practice of running your tests on a non-developer machine.So the builds on top of Continuous Integration are Continuous Deployment and Delivery where after the successful tests you will be able to run, instantly and automatically release with the latest version of your codebase. We can say Jenkins makes deployment a non-issue and helps you speed up your development.Furthermore, in this article we will show you the step by step installation and configuration of Jenkins on Ubuntu 14.04.Basic RequirementsThere’s no complex requirement for Jenkins but you must have sufficient superuser privileges to perform some basic installation tasks on your operating system and your system should be properly updated with the latest packages. Furthermore, Jenkins requires to have any basic web server installed on it. So, let’s start the setup of Jenkins on Ubuntu 14.04 LTS operating system.System UpdateRun the following command to update your operating system before moving on to other packages installation.root@ubuntu-14:~# apt-get updateBasic Web ServerJenkins requires the basic web server installed on your system, so if you don’t have any of your web server installed on your operating system, you can execute the following command to install the web server.root@ubuntu-14:~# apt-get install nginxThis will be installing Nginx web server. If you are more comfortable with a different web server, you can also choose other web servers to be installed.Once your Nginx web server is installed check the status of its services with the command below.root@ubuntu-14:~# service nginx status * nginx is runningIt means `Nginx` is working fine, so let’s proceed to next step.Java InstallationNow install the Java first through the `apt-get` package manager. For this purpose, you will need to install open source implementation of JAVA Version 7. This is quite easy to do so by executing the command below.root@ubuntu-14:~# apt-get install openjdk-7-jdkWhen you execute the above command, it shows you the list of other recommended and required packages to be installed with Java `openjdk`. To proceed with those packages, you have to press `Y` or type `N` to exit the installer.It will take a few minutes to complete the Java installation. Once it is done, run the command below to check the installed version of Java on your system as shown.root@ubuntu-14:~# java –versionJenkins Installation and ConfigurationNow we are ready to install `Jenkins`. So before the package installation, we have to add the key and source list to apt for Jenkins. To do so, issue the following two commands in the terminal.root@ubuntu-14:~# wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add – OKYou will get the `OK` status after you add the key. For the source list, here is the command to run.root@ubuntu-14:~# sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'Now it needs to update `apt’s` cache before moving to Jenkins so that it can refresh the operating system’s repository for the latest packages.root@ubuntu-14:~# apt-get updateOnce your system is updated, execute the command below for the installation of Jenkins and type the `Y` key to proceed with the installation process.root@ubuntu-14:~# apt-get install JenkinsThe installation process will end up with starting its daemon. To check the status of Jenkins service, the command below will show you its status with running process ID. Jenkins service run with its default user name `jenkin`.root@ubuntu-14:~# service jenkins statusJenkins Continuous Integration Server is running with the pid 16997If you need to update the configurations of Jenkins as per your requirements, then you can find its configuration file under the `/etc/default/` directory and can make the changes.root@ubuntu-14:~# vim /etc/default/JenkinsJenkins runs on port 8080 by default for HTTP connector. Now let’s open your web browser to use its GUI.Jenkins GUI ConfigurationsTo use and configure Jenkins, visit the following address in your browserhttp://your-ip-address:8080You will be surprised to see its welcome screen where you will be able to configure its different parameters for your system. Click on `Manage Jenkins` and then choose the required parameter to start required configurations.Jenkins Security SetupConsider enabling authentication to discourage misuse by configuring Jenkins global security parameters and then apply to save the changes as shown.Jenkins System ConfigurationsTo configure the global settings and paths for the Jenkins configurations, we’ll make a few changes to enter the correct path to your JDK, Apache Ant and Maven. Jenkins can also install these for you automatically. Once your settings are done, press the Save button to update the changes shown below.Before you save the changes, make sure to login into Oracle’s account first if you are installing Java.Jenkins Plugin ManagementWe will use Jenkins Plugin Management to add, remove, disable or enable plugins that can extend the functionality of Jenkins.To install plugins in Jenkins, select the `Manage Plugins` link and search for the plugin you want to install. Select it from the list and click to download and install button.Check the option to Restart Jenkins when installation is complete and no jobs are running as shown below.After choosing the Restart option, you will be redirected to the Jenkins Restart Page, it will take a while to install the plugins you chose.Scheduling First Job with JenkinsTo schedule your new jobs, click the `New Item` on the top left of your Jenkins Dashboard, then enter a name for the job and select `Freestyle Job`. Press OK to create a new Job.The next page allows you to configure your job, so give it an appropriate name. From the bottom, expand the `Add Build Step` option and select  `Execute Shell` where you will put the command that you wish to execute in the terminal, we are using the `w` command here to check the system load and currently logged in users.Once the next page is done loading, click the `Build Now` button on the sidebar of your dashboard.Greetings! Here is the output of your first job as shown below, you can also view it in plain text, edit or delete the build if you wish to do so.ConclusionJenkins is an incredibly powerful tool. While not as nice to set up and manage as some other build servers, it is incredibly powerful with a lot of flexibility, and to be honest, it’s really hard to complain about an enterprise-level build server for free. Jenkins now has some alternatives, that have been gaining traction. One such tool is Zuul, with numerous gating configurations such as cross-project testing, cross-project dependencies and testing in parallel, this tool does not let any broken code merge into your main branch. Through its ansible integration and multi-repository dependencies like Gerrit, GitHub, GitHub enterprise, Zuul provides flexibility to developers! Zuul drives innovation by allowing both halves of a DevOps cycle to focus on their respective strengths. VEXXHOST now offers a Managed Zuul solution by fully-managing the infrastructure layer underneath and providing support in terms of maintenence and updates."}]